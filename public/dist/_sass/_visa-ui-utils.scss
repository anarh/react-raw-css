/***
  Visa-UI-Web Global Utitilies
  BEM Naming Convention http://getbem.com/naming/

  @author Visa UX Engineering
*/

/*
// Spatial Model
// https://visavds.invisionapp.com/boards/2H345VYZRNVT3/#/5233102/159361860
*/
$utils-layer-0: 100; // active canvas/side panel
$utils-layer-1: 200; // step-through process
$utils-layer-2: 300; // footer
$utils-layer-3: 400; // modals
$utils-layer-4: 500; // notifications
$utils-layer-5: 600; // global navigation

/*
// Theme variable function
*/
@function theme($name) {
  @return var(--theme-#{$name}, map-get($theme, #{$name}));
}

/*
// Base font-size
*/
$base-font-size: 14px;

/*
// Responsive Breakpoints
*/
$media-break-small: 480px;
$media-break-medium: 800px;
$media-break-large: 1300px;

$media-screen-small: 'only screen and (max-width:#{$media-break-medium - 1})';
$media-screen-medium: 'only screen and (min-width:#{$media-break-medium})';
$media-screen-large: 'only screen and (min-width:#{$media-break-large})';
$media-screen-small-medium: 'only screen and (min-width:#{$media-break-small}) and (min-width:#{$media-break-medium - 1})';
$media-screen-medium-large: 'only screen and (min-width:#{$media-break-medium}) and (max-width:#{$media-break-large - 1})';

/*
// Calculate mixin for multiple browsers
// https://coderwall.com/p/qac-og/sass-css3-calc-mixin
*/
@mixin calc($property, $expression) {
  // sass-lint:disable-block no-duplicate-properties
  #{$property}: -webkit-calc(#{$expression});
  #{$property}: -moz-calc(#{$expression});
  #{$property}: calc(#{$expression});
}

/*
// Utility to render as flexbox cross browser
// http://stackoverflow.com/questions/37306138/flexbox-not-working-properly-on-firefox-but-okay-on-chrome-safari
*/
@mixin display-flex {
  // sass-lint:disable-block no-duplicate-properties
  display: -webkit-box; /* OLD - iOS 6-, Safari 3.1-6 */
  display: -moz-box; /* OLD - Firefox 19- (buggy but mostly works) */
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

/*
// Utility to add dashed focus
// use this property only on elements that have the dashsed border focus
*/
@mixin state-focus {
  // sass-lint:disable force-pseudo-nesting
  &,
  &label,
  &[tabindex] {
    &:focus:not(:active) {
      outline: 1px dashed theme(focus-outline-color);
    }
  }
}

/*
// Utility for crossbrowser compatibility
// Use this mixin when the property name changes for xbrowser compatibility
*/
@mixin xbrowser-property($property, $expression) {
  // sass-lint:disable-block property-sort-order
  -webkit-#{$property}: #{$expression}; /* NEW - Chrome */
  -moz-#{$property}: #{$expression}; /* Firefox */
  -ms-#{$property}: #{$expression}; /* TWEENER - IE 10 */
  -o-#{$property}: #{$expression}; /* Opera */
  #{$property}: #{$expression};
}

/*
// Utility for crossbrowser compatibility
// Use this mixin when the expression value changes for xbrowser compatibility
*/
@mixin xbrowser-expression($property, $expression) {
  // sass-lint:disable-block no-duplicate-properties
  #{$property}: -webkit-(#{$expression}); /* NEW - Chrome */
  #{$property}: -moz-(#{$expression}); /* Firefox */
  #{$property}: -ms-(#{$expression}); /* TWEENER - IE 10 */
  #{$property}: -o-(#{$expression}); /* Opera */
  #{$property}: #{$expression};
}

/*
// Utility for screen reader only text
*/
@mixin screen-reader-only {
  height: 1px;
  left: -1000000px;
  overflow: hidden;
  position: absolute !important;
  top: auto;
  width: 1px;
}

/*
// Utility for crossbrowser gradient background
*/
@mixin gradient-background($args...) {
  // sass-lint:disable-block no-duplicate-properties
  background: $color-white; /* For browsers that do not support gradients */
  background: -webkit-linear-gradient($args); /* For Safari 5.1 to 6.0 */
  background: -moz-linear-gradient($args); /* For Firefox 3.6 to 15 */
  background: -ms-linear-gradient($args); /* For Firefox 3.6 to 15 */
  background: -o-linear-gradient($args); /* For Opera 11.1 to 12.0 */
  background: linear-gradient($args); /* Standard syntax */
}

@function px2em($px) {
  @return ($px / $base-font-size) * 1rem;
}

/*
// Utility for icon definition and dimensions
*/
$icon-size--link: 1em;
$icon-size--low: 24px !default;
$icon-size--high: 48px;
$icon-size--tiny: 16px;
@mixin svg-icon($dimension: $icon-size--low, $color: theme(primary)) {
  // svg {
  height: #{$dimension};
  width: #{$dimension};

  circle,
  ellipse,
  line,
  path,
  polygon,
  polyline,
  rect {
    height: #{$dimension};
    width: #{$dimension};
  }

  use {
    fill: #{$color} !important;
    height: #{$dimension};
    width: #{$dimension};

    circle,
    ellipse,
    line,
    path,
    polygon,
    polyline,
    rect {
      fill: inherit;
      height: inherit;
      stroke: inherit;
      width: inherit;
    }
  }

  circle,
  ellipse,
  line,
  path,
  polygon,
  polyline,
  rect {
    fill: #{$color} !important;
  }
  // }
}
