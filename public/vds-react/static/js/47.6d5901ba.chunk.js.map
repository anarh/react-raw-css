{"version":3,"sources":["components/breadcrumbs/index.js","components/breadcrumbs/example/index.js","styleguide/pages/components/breadcrumbs.js","components/data-table/index.js","components/sr/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js"],"names":["Breadcrumbs","activeIndex","ariaLabel","children","className","Tag","tag","separator","remainingProps","selectedActiveIndex","Children","count","aria-label","classnames","map","child","index","aria-current","undefined","cloneElement","only","props","role","defaultProps","name","resolution","displayName","BreadcrumbsExample","href","reactDocs","require","jsParsed","replace","exampleCode","useState","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","match","path","theme","code","language","style","tokens","getLineProps","getTokenProps","line","i","key","display","opacity","userSelect","width","token","dividerLines","size","aria-sort","scope","Object","entries","filter","doc","description","tabIndex","required","color","type","value","length","v","join","defaultValue","DataTable","forwardRef","ref","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","Boolean","propTypes","node","string","columns","arrayOf","shape","bool","data","oneOf","Sr","elementType","Tbody","Td","textAlign","Th","Thead","Tr"],"mappings":"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","file":"static/js/47.6d5901ba.chunk.js","sourcesContent":["import React, { Children, cloneElement } from 'react';\nimport { element, elementType, node, number, string } from 'prop-types';\nimport classnames from 'classnames';\nimport Icon from '../icon';\n\nconst CSS_PREFIX = 'vds-breadcrumb';\nconst CSS_STATE = 'vds-state';\n\nconst Breadcrumbs = ({ activeIndex, ariaLabel, children, className, tag: Tag, separator, ...remainingProps }) => {\n  const selectedActiveIndex = activeIndex || Children.count(children) - 1;\n\n  return (\n    <Tag\n      aria-label={ariaLabel}\n      className={classnames(`${CSS_PREFIX}s-container`, className)}\n      {...remainingProps}\n    >\n      <ol className={`${CSS_PREFIX}s`}>\n        {\n          Children.map(children, (child, index) => (\n            <li\n              aria-current={selectedActiveIndex === index ? \"page\" : undefined}\n              className={classnames(CSS_PREFIX, {\n                [`${CSS_STATE}--active`]: selectedActiveIndex === index\n              })}\n            >\n              {\n                index < Children.count(children) - 1\n                  ? cloneElement(\n                    child,\n                    {\n                      className: classnames(`${CSS_PREFIX}-link`, Children.only(child).props.className)\n                    }\n                  )\n                  : child.props.children\n              }\n              {\n                index < Children.count(children) - 1\n                  ? cloneElement(\n                    separator,\n                    {\n                      role: Children.only(separator).props.role || 'presentation'\n                    }\n                  )\n                  : undefined\n              }\n            </li>\n          ))\n        }\n      </ol>\n    </Tag>\n  );\n};\n\nBreadcrumbs.propTypes = {\n  /**\n   * Active index\n   */\n  activeIndex: number,\n\n  /**\n   * Aria label\n   */\n  ariaLabel: string,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Separator\n   */\n  separator: element,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nBreadcrumbs.defaultProps = {\n  ariaLabel: 'Breadcrumb',\n  separator: <Icon name=\"arrow-next\" resolution=\"tiny\" />,\n  tag: 'nav'\n};\n\nBreadcrumbs.displayName = 'Breadcrumbs';\n\nexport default Breadcrumbs;\n","import React from 'react';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Row from '../../row';\nimport Breadcrumbs from '../../breadcrumbs';\n\nconst BreadcrumbsExample = () => (\n  <Grid>\n    <Row>\n      <Col>\n        <Breadcrumbs>\n          <a href=\"./\">Level 1</a>\n          <a href=\"./\">Level 2</a>\n          <a href=\"./\">Level 3</a>\n          <a href=\"./\">Level 4</a>\n        </Breadcrumbs>\n      </Col>\n    </Row>\n  </Grid>\n);\n\nexport default BreadcrumbsExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../../components/col';\nimport DataTable from '../../../components/data-table';\nimport Icon from '../../../components/icon';\nimport Grid from '../../../components/grid';\nimport Row from '../../../components/row';\nimport Sr from '../../../components/sr';\nimport Tab from '../../../components/tab';\nimport TabList from '../../../components/tab-list';\nimport Tbody from '../../../components/tbody';\nimport Td from '../../../components/td';\nimport Th from '../../../components/th';\nimport Thead from '../../../components/thead';\nimport Tr from '../../../components/tr';\nimport Typography from '../../../components/typography';\n\nimport Example from '../../../components/breadcrumbs/example';\n\nconst reactDocs = require('react-docgen');\nconst js = raw('../../../components/breadcrumbs/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../../components/breadcrumbs/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst BreadcrumbsExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Breadcrumbs\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Breadcrumbs</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/breadcrumbs`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Breadcrumbs Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/breadcrumbs/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />Code for Breadcrumbs Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/breadcrumbs/code`,\n              'vds-state--show': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/breadcrumbs/code`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/breadcrumbs/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/breadcrumbs/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <Sr tag=\"caption\">Props</Sr>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {doc[1].type.value.length ? doc[1].type.value.map(v => v.value || v.name).join(', ') : undefined}\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nBreadcrumbsExample.displayName = 'BreadcrumbsExample';\n\nexport default BreadcrumbsExample;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-sr';\n\nconst Sr = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nSr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nSr.defaultProps = {\n  tag: 'span'\n};\n\nSr.displayName = 'Sr';\n\nexport default Sr;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n"],"sourceRoot":""}