{"version":3,"sources":["components/combobox-freeform-manual-selection/example/index.js","styleguide/pages/components/combobox-freeform-manual-selection.js","components/data-table/index.js","components/sr/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/button-text/index.js","components/input-container/index.js","components/input-label/index.js","components/input-bar/index.js","components/input-message/index.js","components/input-option/index.js","components/input-hint/index.js","components/input-text/index.js","components/input/index.js","components/input-input/index.js","components/button-group/index.js","components/combobox/listbox.js","components/combobox/useScrollToItem.js","components/combobox/useComboboxAction.js","components/combobox-freeform-manual-selection/index.js"],"names":["ComboboxFreeformManualSelectionExample","useState","disabled","state","setState","service","setService","sessionToken","setSessionToken","placesService","setPlacesService","useEffect","window","google","document","getElementById","loadGoogleMapsAPI","createElement","id","async","src","querySelector","appendChild","googleObject","setInterval","maps","places","AutocompleteService","AutocompleteSessionToken","PlacesService","clearInterval","tag","suggestionObj","city","line1","postalCode","stateProvinceCode","optionsTemplate","setOptionsTemplate","renderOption","optionItem","className","value","inputProps","helpText","label","name","googlePredictions","Fragment","itemToStringFunc","item","split","onInputChange","e","val","target","len","length","getPlacePredictions","input","predictions","status","PlacesServiceStatus","OK","forEach","prediction","push","place_id","description","itemKey","optionValues","searchIncludeFields","onSelectionChange","getDetails","fields","placeId","place","components","addressLine1Field","cityField","stateField","zipField","address","console","log","types","includes","long_name","short_name","JSON","stringify","mapToField","address_components","direction","style","marginTop","colorScheme","onClick","reactDocs","require","jsParsed","replace","exampleCode","remainingProps","componentProps","setComponentProps","parse","siblingOfStickyFooter","exact","to","process","activeClassName","resolution","classnames","match","path","defaultProps","theme","code","language","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","dividerLines","size","aria-sort","role","scope","props","Object","entries","filter","doc","tabIndex","required","color","type","v","join","undefined","defaultValue","displayName","DataTable","forwardRef","ref","children","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","Boolean","propTypes","node","string","columns","arrayOf","shape","bool","data","oneOf","Sr","Tag","elementType","Tbody","Td","textAlign","Th","Thead","Tr","ButtonText","active","flippable","isFullWidth","oneOfType","number","InputContainer","css","expanded","filled","focus","invalid","isTextarea","readOnly","InputLabel","InputBar","InputMessage","ariaAtomic","show","aria-atomic","aria-live","InputOption","InputHint","InputText","Input","ariaLabel","checkmarkIcon","containerProps","errorIcon","errorText","helpIcon","shortid","generate","labelId","noValidate","onBlur","onChange","onFocus","placeholder","showCheckmark","showErrorText","showHelpText","useNativePlaceholder","dirty","setDirty","setFilled","focused","setFocused","isInvalid","setIsInvalid","rId","setValidity","checkValidity","trim","htmlFor","aria-describedby","aria-label","aria-invalid","helpOrErrorText","getHelpOrErrorText","InputInput","ButtonGroup","ListBox","getMenuProps","isOpen","listboxClass","isListboxOpen","listboxProps","listboxRef","restOfProps","filteredOptions","filterFunction","getItemProps","inputValue","listboxItemRef","noMatchCallback","noSelectionCheckMark","selectedItem","highlightedIndex","filterCount","ComboboxUtil","filterOptionValues","toLowerCase","count","itemValues","filteredValues","highlightedItem","index","isSelected","isHighlight","itemProps","renderListboxItem","useScrollToItem","currentSelectItem","useRef","current","findIndex","scrollTop","offsetTop","useComboboxAction","comboboxAction","downshiftInternalActions","dispatchComboboxAction","useCallback","action","err","Error","ComboboxFreeformManualSelection","comboboxClass","onInputBlur","onInputFocus","restProps","setCurrentSelectItem","inputRef","inputError","setInputError","setListboxOpen","searchHasNoMatch","setSearchHasNoMatch","actionList","handleInputBlur","handleInputChange","handleInputFocus","handleNoMatch","noMatch","initialInputValue","initialSelectedItem","itemToString","selection","getInputProps","listboxDownshift","keys","containerClass","inputWrapperClass","li","ul"],"mappings":"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","file":"static/js/15.0bb29540.chunk.js","sourcesContent":["/* eslint-disable no-console */\n\nimport React, { useEffect, useState } from 'react';\nimport ButtonGroup from '../../button-group';\nimport ButtonText from '../../button-text';\nimport Col from '../../col';\nimport ComboboxFreeformManualSelection from '../../combobox-freeform-manual-selection';\nimport Grid from '../../grid';\nimport Row from '../../row';\nimport Typography from '../../typography';\n\nconst ComboboxFreeformManualSelectionExample = () => {\n  const [state, setState] = useState({\n    disabled: false\n  });\n  const [service, setService] = useState();\n  const [sessionToken, setSessionToken] = useState();\n  const [placesService, setPlacesService] = useState();\n\n  useEffect(() => {\n    /*\n     * Load google address suggestion JS API\n     */\n    if (typeof window.google === 'undefined' && document.getElementById('loadGoogleMapsAPI') === null) {\n      const loadGoogleMapsAPI = document.createElement('script');\n      loadGoogleMapsAPI.id = \"loadGoogleMapsAPI\";\n      loadGoogleMapsAPI.async = \"true\";\n      loadGoogleMapsAPI.src = \"https://maps.googleapis.com/maps/api/js?key=AIzaSyCkX5pcWYEKgFndJpy2o6rWMNErtKyw6w8&libraries=places\";\n      document.querySelector('body').appendChild(loadGoogleMapsAPI);\n    }\n\n    const googleObject = setInterval(() => {\n      if (typeof google !== 'undefined') {\n        setService(new window.google.maps.places.AutocompleteService());\n        setSessionToken(new window.google.maps.places.AutocompleteSessionToken());\n        setPlacesService(new window.google.maps.places.PlacesService(document.createElement('div')));\n        clearInterval(googleObject);\n      }\n    }, 10);\n    // Ends Google Maps API loading\n  }, []);\n\n  const GoogleSuggestCombobox = () => {\n    const suggestionObj = {\n      city: '',\n      line1: '',\n      postalCode: '',\n      stateProvinceCode: ''\n    };\n    const [optionsTemplate, setOptionsTemplate] = useState(null);\n\n    const renderOption = optionItem => <span className=\"address-suggestion\">{optionItem.value}</span>;\n\n    const inputProps = {\n      disabled: state.disabled,\n      helpText : 'Address line 1',\n      label: 'Address line 1',\n      name: 'combobox'\n    };\n\n    let googlePredictions = [];\n\n    const mapToField = components => {\n      if (!components.length) {\n        return;\n      }\n\n      let addressLine1Field = '';\n      let cityField = '';\n      let stateField = '';\n      let zipField = '';\n\n      components.forEach(address => {\n        console.log('address :::: ', address);\n        if (address.types.includes('street_number')) {\n          addressLine1Field = address.long_name;\n          suggestionObj.line1 = addressLine1Field;\n        } else if (address.types.includes('route')) {\n          addressLine1Field = (addressLine1Field) ? `${addressLine1Field} ${address.long_name}` : address.long_name;\n          suggestionObj.line1 = addressLine1Field;\n        } else if (address.types.includes('locality')) {\n          cityField = address.long_name;\n          suggestionObj.city = cityField;\n        } else if (address.types.includes('administrative_area_level_1')) {\n          stateField = address.short_name;\n          suggestionObj.stateProvinceCode = stateField;\n        } else if (address.types.includes('postal_code')) {\n          zipField = address.long_name;\n          suggestionObj.postalCode = zipField;\n        }\n      });\n\n      console.log(`Address Line 1: ${addressLine1Field}`);\n      console.log(`City: ${cityField}`);\n      console.log(`State: ${stateField}`);\n      console.log(`Zip: ${zipField}`);\n      console.log(`Suggestion: ${JSON.stringify(suggestionObj)}`);\n    };\n\n    const onInputChange = e => {\n      const val = e.target.value;\n      const len = val.length;\n\n      if (typeof service !== 'undefined' && len) {\n        service.getPlacePredictions({\n          input: val,\n          sessionToken\n        }, (predictions, status) => {\n          if (status !== window.google.maps.places.PlacesServiceStatus.OK) {\n            return;\n          }\n\n          googlePredictions = [];\n\n          predictions.forEach(prediction => {\n            googlePredictions.push({\n              place_id: prediction.place_id,\n              value: prediction.description\n            });\n          });\n\n          setOptionsTemplate({\n            itemKey: 'value',\n            optionValues: googlePredictions,\n            renderOption,\n            searchIncludeFields: ['value']\n          });\n        });\n      }\n    };\n\n    const onSelectionChange = ({ place_id }) => {\n      if (place_id) {\n        placesService.getDetails({\n          fields: ['address_components'],\n          placeId: place_id,\n          sessionToken\n        }, (place, status) => {\n          if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n            mapToField(place.address_components);\n          }\n        });\n\n        // sessionToken = new window.google.maps.places.AutocompleteSessionToken();\n      }\n    };\n\n    const positionOfCommaThatFollowsTriggeringFieldAddressInfo = 0;\n    const shortenedSelectedItemValueChar = ',';\n\n    return (\n      <React.Fragment>\n        <Typography tag=\"h4\">Google Address Example</Typography>\n        <Typography>\n          This is an example of the Autocomplete Manual\n          Selection combobox. But it's a different flavor.\n          The difference between this and the regular combobox\n          is that the Freeform combobox should be used when you\n          do not have any options on initial render; some type\n          of user interaction is required.  The regular combobox\n          requires a list of options on initial render.\n        </Typography>\n        <ComboboxFreeformManualSelection\n          inputProps={inputProps}\n          itemToStringFunc={item => (\n            item\n              ? item.value.split(shortenedSelectedItemValueChar)[positionOfCommaThatFollowsTriggeringFieldAddressInfo]\n              : ''\n          )}\n          optionsTemplate={optionsTemplate}\n          onInputChange={onInputChange}\n          onSelectionChange={onSelectionChange}\n        />\n        <ButtonGroup direction=\"right\" style={{ marginTop: \"30px\" }}>\n          <ButtonText colorScheme=\"primary\" onClick={() => setState({ disabled: false })}>Enable</ButtonText>\n          <ButtonText colorScheme=\"secondary\" onClick={() => setState({ disabled: true })}>Disable</ButtonText>\n        </ButtonGroup>\n      </React.Fragment>\n    );\n  };\n\n  const ManualAutocompleteCombobox = () => {\n\n    const renderOption = optionItem => <span className=\"card-name\">{optionItem.value}</span>;\n\n    const inputProps = {\n      disabled: state.disabled,\n      helpText : 'Manual Autocomplete',\n      label: 'Manual Autocomplete',\n      name: 'combobox'\n    };\n\n    const cardsValue = [\n      { value: 'silver signature card' },\n      { value: 'visa signature card' },\n      { value: 'platinum visa card' },\n      { value: 'premium card' },\n      { value: 'another card' },\n      { value: 'other card' },\n      { value: 'secondary card' },\n      { value: 'tertiary card' },\n      { value: 'gold signature card' },\n      { value: 'yet another card' },\n      { value: 'last card' }\n    ];\n\n    const optionsTemplate = {\n      itemKey: 'value',\n      optionValues: cardsValue,\n      renderOption,\n      searchIncludeFields: ['value']\n    };\n\n    const onInputChange = e => console.log('onInputChange', e.target.value);\n    const onSelectionChange = item => console.log('onSelectionChange', JSON.stringify(item));\n\n    return (\n      <React.Fragment>\n        <ComboboxFreeformManualSelection\n          optionsTemplate={optionsTemplate}\n          inputProps={inputProps}\n          itemToStringFunc={item => (item ? item.value : '')}\n          onInputChange={onInputChange}\n          onSelectionChange={onSelectionChange}\n        />\n        <ButtonGroup direction=\"right\" style={{ marginTop: \"30px\" }}>\n          <ButtonText colorScheme=\"primary\" onClick={() => setState({ disabled: false })}>Enable</ButtonText>\n          <ButtonText colorScheme=\"secondary\" onClick={() => setState({ disabled: true })}>Disable</ButtonText>\n        </ButtonGroup>\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Combobox Freeform Manual Selection</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <GoogleSuggestCombobox />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Generic Example</Typography>\n          <Typography>\n            This is an example of the Autocomplete Manual\n            Selection combobox. But it's a different flavor.\n            The difference between this and the regular combobox is\n            that the Freeform combobox should be used when you\n            do not have any options on initial render; some type of user\n            interaction is required.  The regular combobox requires a list\n            of options on initial render.\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ManualAutocompleteCombobox />\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default ComboboxFreeformManualSelectionExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../../components/col';\nimport DataTable from '../../../components/data-table';\nimport Icon from '../../../components/icon';\nimport Grid from '../../../components/grid';\nimport Row from '../../../components/row';\nimport Sr from '../../../components/sr';\nimport Tab from '../../../components/tab';\nimport TabList from '../../../components/tab-list';\nimport Tbody from '../../../components/tbody';\nimport Td from '../../../components/td';\nimport Th from '../../../components/th';\nimport Thead from '../../../components/thead';\nimport Tr from '../../../components/tr';\nimport Typography from '../../../components/typography';\n\nimport Example from '../../../components/combobox-freeform-manual-selection/example';\n\nconst reactDocs = require('react-docgen');\nconst js = raw('../../../components/combobox-freeform-manual-selection/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../../components/combobox-freeform-manual-selection/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst ComboboxFreeformManualSelectionExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for ComboboxFreeformManualSelection\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Combobox Freeform Manual Selection</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/combobox-freeform-manual-selection`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Combobox Freeform Manual Selection Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/combobox-freeform-manual-selection/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />Code for Combobox Freeform Manual Selection Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/combobox-freeform-manual-selection/code`,\n              'vds-state--show': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/combobox-freeform-manual-selection/code`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/combobox-freeform-manual-selection/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/combobox-freeform-manual-selection/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <Sr tag=\"caption\">Props</Sr>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {doc[1].type.value.length ? doc[1].type.value.map(v => v.value || v.name).join(', ') : undefined}\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nComboboxFreeformManualSelectionExample.displayName = 'ComboboxFreeformManualSelectionExample';\n\nexport default ComboboxFreeformManualSelectionExample;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-sr';\n\nconst Sr = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nSr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nSr.defaultProps = {\n  tag: 'span'\n};\n\nSr.displayName = 'Sr';\n\nexport default Sr;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React, { forwardRef } from 'react';\nimport { bool, node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-text';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonText = forwardRef(({\n  active,\n  children,\n  className,\n  colorScheme,\n  disabled,\n  flippable,\n  isFullWidth,\n  role,\n  tabIndex,\n  tag: Tag,\n  type,\n  ...remainingProps\n}, ref) => (\n  <Tag\n    className={classnames({\n      [`${CSS_PREFIX}`]: Boolean(colorScheme) === false,\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_PREFIX}--${colorScheme}`]: Boolean(colorScheme),\n      [`${CSS_STATE}--flippable`]: Boolean(flippable),\n      [`${CSS_PREFIX}--fullwidth`]: Boolean(isFullWidth),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className)}\n    disabled={disabled}\n    role={Tag === 'button' ? undefined : role}\n    tabIndex={['span', 'div'].includes(Tag) ? tabIndex : undefined}\n    type={Tag === 'button' ? type : undefined}\n    ref={ref}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </Tag>\n));\n\nButtonText.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Color scheme of button\n   */\n  colorScheme: oneOf([\n    'primary',\n    'secondary',\n    'tertiary'\n  ]),\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Flippable\n   */\n  flippable: bool,\n\n  /**\n   * Full width\n   */\n  isFullWidth: bool,\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * @ignore\n   */\n  tabIndex: oneOfType([number, string]),\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'a',\n    'button',\n    'div',\n    'span'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonText.defaultProps = {\n  role: 'button',\n  tabIndex: 0,\n  tag: 'button',\n  type: 'button'\n};\n\nButtonText.displayName = 'ButtonText';\n\nexport default ButtonText;\n","import React from 'react';\nimport { bool, func, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input';\nconst CSS_STATE = 'vds-state';\n\nconst InputContainer = ({\n  children,\n  className,\n  css,\n  disabled,\n  expanded,\n  filled,\n  focus,\n  invalid,\n  isTextarea,\n  readOnly,\n  ...remainingProps\n}) => (\n  <div\n    className={classnames({\n      [`${CSS_PREFIX}`]: !isTextarea,\n      [`${CSS_PREFIX}-textarea-container`]: Boolean(isTextarea),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled),\n      [`${CSS_STATE}--error`]: Boolean(invalid),\n      [`${CSS_STATE}--expanded`]: Boolean(expanded),\n      [`${CSS_STATE}--filled`]: Boolean(filled),\n      [`${CSS_STATE}--focus`]: Boolean(focus),\n      [`${CSS_STATE}--readonly`]: Boolean(readOnly),\n      [`${CSS_STATE}--success`]: typeof invalid === 'boolean' && !invalid\n    }, className)}\n    css={css}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputContainer.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Filled\n   */\n  filled: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * isTextarea\n   */\n  isTextarea: bool,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool\n};\n\nInputContainer.displayName = 'InputContainer';\n\nexport default InputContainer;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-label';\n\nconst InputLabel = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <label\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </label>\n));\n\nInputLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputLabel.displayName = 'InputLabel';\n\nexport default InputLabel;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-bar';\n\nconst InputBar = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputBar.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputBar.displayName = 'InputBar';\n\nexport default InputBar;\n","import React from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-message';\nconst CSS_STATE = 'vds-state';\n\nconst InputMessage = ({\n  ariaAtomic,\n  children,\n  className,\n  invalid,\n  role,\n  show,\n  ...remainingProps\n}) => (\n  <span\n    aria-atomic={ariaAtomic}\n    aria-live={invalid ? 'assertive' : 'polite'}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--hidden`]: !show,\n      [`${CSS_STATE}--error`]: Boolean(invalid)\n    }, className)}\n    role={role}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputMessage.propTypes = {\n  /**\n   * Aria Atomic\n   */\n  ariaAtomic: oneOf(['true', 'false']),\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Role\n   */\n  role: string,\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\nInputMessage.defaultProps = {\n  ariaAtomic: 'true',\n  role: 'alert'\n};\n\nInputMessage.displayName = 'InputMessage';\n\nexport default InputMessage;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-option';\n\nconst InputOption = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputOption.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputOption.displayName = 'InputOption';\n\nexport default InputOption;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-hint';\n\nconst InputHint = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputHint.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputHint.displayName = 'InputHint';\n\nexport default InputHint;\n","import React, { forwardRef } from 'react';\nimport { string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input--input-text';\n\nconst InputText = forwardRef(({ className, type, ...remainingProps }, ref) => (\n  <input\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    type={type}\n    {...remainingProps}\n  />\n));\n\nInputText.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Type of the input element. It should be a valid HTML5 input type.\n   */\n  type: string\n};\n\nInputText.defaultProps = {\n  type: 'text'\n};\n\nInputText.displayName = 'InputText';\n\nexport default InputText;\n","import React, { forwardRef, Fragment, useEffect, useState } from 'react';\nimport { bool, func, node, number, object, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport InputContainer from '../input-container';\nimport InputLabel from '../input-label';\nimport InputBar from '../input-bar';\nimport InputHint from '../input-hint';\nimport InputInput from '../input-input';\nimport InputText from '../input-text';\nimport InputMessage from '../input-message';\nimport InputOption from '../input-option';\nimport Icon from '../icon';\n\nconst CSS_STATE = 'vds-state';\n\nconst Input = forwardRef(({\n  ariaLabel,\n  checkmarkIcon,\n  children,\n  className,\n  containerProps,\n  css,\n  disabled,\n  errorIcon,\n  errorText,\n  expanded,\n  helpIcon,\n  helpText,\n  id = shortid.generate(),\n  invalid,\n  label,\n  labelId,\n  noValidate,\n  onBlur,\n  onChange,\n  onFocus,\n  placeholder,\n  readOnly,\n  showCheckmark,\n  showErrorText,\n  showHelpText,\n  useNativePlaceholder,\n  ...remainingProps\n}, ref) => {\n  const [dirty, setDirty] = useState(false);\n  const [filled, setFilled] = useState(Boolean(remainingProps.value) || Boolean(remainingProps.defaultValue));\n  const [focused, setFocused] = useState(false);\n  const [isInvalid, setIsInvalid] = useState(invalid);\n  const [rId] = useState(id);\n\n  const setValidity = e => {\n    if (!noValidate) {\n      if (dirty) {\n        setIsInvalid((!e.target.checkValidity() || (e.target.required && !e.target.value.trim().length)));\n      }\n\n      if (!dirty && (e.target.required && !e.target.value.trim().length)) {\n        setIsInvalid(true);\n      }\n\n      if (dirty && !e.target.required && !e.target.value.trim().length) {\n        setIsInvalid(undefined);\n      }\n    }\n  };\n\n  useEffect(() => {\n    setFilled(Boolean(remainingProps.defaultValue) || Boolean(remainingProps.value));\n  }, [remainingProps.defaultValue, remainingProps.value]);\n\n  useEffect(() => {\n    setIsInvalid(invalid);\n  }, [invalid]);\n\n  const handleBlur = e => {\n    setFocused(false);\n    setValidity(e);\n\n    if (typeof onBlur === 'function') {\n      onBlur(e);\n    }\n  };\n\n  const handleChange = e => {\n    setFilled(e.target.value !== '');\n\n    if (typeof isInvalid === 'boolean') {\n      setValidity(e);\n    }\n\n    setDirty(true);\n    if (typeof onChange === 'function') {\n      onChange(e);\n    }\n  };\n\n  const handleFocus = e => {\n    setFocused(true);\n\n    if (typeof onFocus === 'function') {\n      onFocus(e);\n    }\n  };\n\n  // NOTE: I'd actually separate out getting help text from error text\n  const getHelpOrErrorText = () => {\n    let helpOrErrorText = null;\n    if (showHelpText || showErrorText) {\n      helpOrErrorText = (\n        <InputMessage\n          id={`input-message-${rId}`}\n          show={(showHelpText && Boolean(helpText)) || (showErrorText && Boolean(errorText))}\n          invalid={isInvalid}\n        >\n          {\n            !isInvalid && focused && showHelpText && Boolean(helpText)\n              ? <Fragment>{helpIcon} {helpText}</Fragment>\n              : undefined\n          }\n          {\n            isInvalid === true && showErrorText && Boolean(errorText)\n              ? <Fragment>{errorIcon} {errorText}</Fragment>\n              : undefined\n          }\n        </InputMessage>\n      );\n    }\n    return helpOrErrorText;\n  };\n\n  return (\n    <InputContainer\n      className={classnames(className)}\n      css={css}\n      disabled={disabled}\n      expanded={expanded}\n      filled={filled}\n      focus={focused}\n      readOnly={readOnly}\n      invalid={isInvalid}\n      {...containerProps}\n    >\n      {label ? <InputLabel id={labelId} htmlFor={rId}>{label}</InputLabel> : undefined}\n      <InputBar>\n        <InputInput>\n          { placeholder && !useNativePlaceholder ? <InputHint>{placeholder}</InputHint> : undefined}\n          <InputText\n            aria-describedby={\n              showErrorText || showHelpText\n                ? `input-message-${rId}`\n                : undefined\n            }\n            aria-label={label ? undefined : ariaLabel}\n            aria-invalid={isInvalid}\n            id={rId}\n            disabled={disabled}\n            onBlur={handleBlur}\n            onChange={handleChange}\n            onFocus={handleFocus}\n            placeholder={useNativePlaceholder ? placeholder : undefined}\n            readOnly={readOnly}\n            ref={ref}\n            {...remainingProps}\n          />\n        </InputInput>\n        {\n          showCheckmark && typeof isInvalid === 'boolean' && !isInvalid && Boolean(checkmarkIcon)\n            ? <InputOption\n              className={classnames({\n                [`${CSS_STATE}--hidden`]: typeof isInvalid === 'boolean' && isInvalid\n              })}\n            >\n              {checkmarkIcon}\n            </InputOption>\n            : undefined\n        }\n        {children}\n      </InputBar>\n      {getHelpOrErrorText()}\n\n    </InputContainer>\n  );\n});\n\nInput.propTypes = {\n  /**\n   * Aria Label\n   */\n  ariaLabel: string,\n\n  /**\n   *  Checkmark Icon\n   */\n  checkmarkIcon: node,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Container Props\n   */\n  containerProps: object, // eslint-disable-line\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   *  Error Message Icon\n   */\n  errorIcon: node,\n\n  /**\n   *  Error Message\n   */\n  errorText: node,\n\n  /**\n   *  Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Input Help Message Icon\n   */\n  helpIcon: node,\n\n  /**\n   * Input Help Message\n   */\n  helpText: node,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Label\n   */\n  label: node,\n\n  /**\n   * Label Id\n   */\n  labelId: oneOfType([number, string]),\n\n  /**\n   * Disable native HTML5 validation e.g. type=email, pattern=\"some regex pattern\"\n   */\n  noValidate: bool,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * On Change\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /**\n   * Placeholder\n   */\n  placeholder: node,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool,\n\n  /**\n   * Show Checkmark Icon\n   */\n  showCheckmark: bool,\n\n  /**\n   * Show Error Message\n   */\n  showErrorText: bool,\n\n  /**\n   * Show Help Message\n   */\n  showHelpText: bool,\n\n  /**\n   * Use native placeholder\n   */\n  useNativePlaceholder: bool\n};\n\nInput.defaultProps = {\n  checkmarkIcon: <Icon name=\"checkmark\" resolution=\"low\" />,\n  errorIcon: <Icon name=\"error\" resolution=\"low\" />\n};\n\nInput.displayName = 'Input';\n\nexport default Input;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-input';\n\nconst InputInput = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputInput.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputInput.displayName = 'InputInput';\n\nexport default InputInput;\n","import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-group';\n\nconst ButtonGroup = ({ children, className, direction, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${direction}`]: Boolean(direction)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nButtonGroup.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Direction\n   */\n  direction: oneOf([\n    'reverse',\n    'right'\n  ])\n};\n\nButtonGroup.displayName = 'ButtonGroup';\n\nexport default ButtonGroup;\n","import React from 'react';\nimport { arrayOf, bool, func, shape, string } from 'prop-types';\nimport classnames from 'classnames';\nimport Icon from '../icon';\nimport { ComboboxUtil } from '@visa/ui-utils';\nconst CSS_PREFIX = 'vds-listbox';\n\nconst renderListboxItem = (props, optionsTemplate) => {\n  const {\n    filterFunction,\n    getItemProps,\n    inputValue,\n    listboxItemRef,\n    noMatchCallback,\n    noSelectionCheckMark,\n    selectedItem\n  } = props;\n\n  const highlightedIndex = props.highlightedIndex < 0 ? 0 : props.highlightedIndex;\n  const { itemKey, optionValues, renderOption } = optionsTemplate;\n  let filteredOptions;\n\n  if (inputValue && inputValue.trim()) {\n    filteredOptions = ComboboxUtil.filterOptionValues(\n      inputValue\n        .trim()\n        .replace(/\\s\\s+/g, ' ')\n        .toLowerCase(),\n      optionsTemplate,\n      filterFunction\n    );\n  } else {\n    filteredOptions = { count: optionValues ? optionValues.length : 0, itemValues: optionValues };\n  }\n\n  const filterCount = filteredOptions.count;\n  const filteredValues = filteredOptions.itemValues;\n  const highlightedItem = filteredOptions.itemValues ? filteredOptions.itemValues[highlightedIndex] : null;\n  if (filterCount === 0) {\n    noMatchCallback(true);\n    return null;\n  }\n  noMatchCallback(false);\n\n  return filteredValues.map((item, index) => {\n    const isSelected = selectedItem && selectedItem[itemKey] === item[itemKey];\n    const isHighlight = highlightedItem && highlightedItem[itemKey] === item[itemKey];\n    const itemProps = {\n      className: classnames(\n        `${CSS_PREFIX}-item`,\n        { [`${CSS_PREFIX}--item-selected`]: isSelected && !noSelectionCheckMark },\n        { [`${CSS_PREFIX}--item-highlight`]: isHighlight },\n        'visa-ui-btn-icon--light-fill'\n      )\n    };\n    if (isSelected) {\n      itemProps.ref = listboxItemRef;\n    }\n    return (\n      <li\n        {...getItemProps({\n          index,\n          item,\n          key: item[itemKey]\n        })}\n        {...itemProps}\n      >\n        <span className={`${CSS_PREFIX}--item-container`}>\n          {renderOption(item)}\n          {isSelected && !noSelectionCheckMark ? <Icon name=\"checkmark\" resolution=\"tiny\" /> : null}\n        </span>\n      </li>\n    );\n  });\n};\n\nconst ListBox = props => {\n  const { getMenuProps, isOpen, listboxClass, isListboxOpen, listboxProps, listboxRef, optionsTemplate, ...restOfProps } = props;\n  return (\n    <div className={classnames('vds-menu--absolute ', { [`vds-menu--show`]: isOpen && isListboxOpen })}>\n      <ul\n        {...listboxProps}\n        {...getMenuProps({\n          className: classnames(CSS_PREFIX, listboxClass),\n          ref: listboxRef\n        })}\n      >\n        {isOpen && optionsTemplate && optionsTemplate.optionValues && optionsTemplate.optionValues.length ? renderListboxItem(restOfProps, optionsTemplate) : null}\n      </ul>\n    </div>\n  );\n};\n\nListBox.propTypes = {\n  filterFunction: func,\n  getMenuProps: func,\n  isListboxOpen: bool,\n  isOpen: bool,\n  listboxClass: string,\n  listboxItemRef: func.isRequired,\n  listboxProps: shape({}),\n  listboxRef: func.isRequired,\n  optionsTemplate: shape({\n    itemKey: string.isRequired,\n    optionValues: arrayOf(shape({ value: string.isRequired })),\n    renderOption: func.isRequired,\n    searchIncludeFields: arrayOf(string)\n  })\n};\n\nListBox.displayName = 'ListBox';\n\nexport default ListBox;\n","import { useEffect, useRef } from 'react';\n/**\n * @description custom react hook, if there is a long list of items,\n * this hook will scroll the selected item to the view\n *\n * @param {object} currentSelectItem\n * @param {object} optionsTemplate\n * @returns {object} listboxItemRef, listboxRef\n */\nconst useScrollToItem = (currentSelectItem, optionsTemplate) => {\n  const listboxItemRef = useRef(null);\n  const listboxRef = useRef(null);\n  useEffect(() => {\n    if (listboxRef.current && listboxItemRef.current) {\n      if (currentSelectItem && optionsTemplate && optionsTemplate.optionValues) {\n        const index = optionsTemplate.optionValues.findIndex(\n          item => item[optionsTemplate.itemKey] === currentSelectItem[optionsTemplate.itemKey]\n        );\n        if (index >= 0) {\n          listboxRef.current.scrollTop += listboxItemRef.current.offsetTop;\n        }\n      }\n    }\n  });\n  return { listboxItemRef, listboxRef };\n};\n\nexport default useScrollToItem;\n","import { useEffect, useCallback } from 'react';\n/**\n * @description Reverse of Control,\n * expose downshift internal action to parent component so\n * we can customize combobox behavior to meet different requirements\n *\n * @param {function} comboboxAction\n * @param {object} downshiftInternalActions\n */\n\nconst useComboboxAction = (comboboxAction, downshiftInternalActions) => {\n  const dispatchComboboxAction = useCallback((action, data) => {\n    try {\n      if (data === undefined) {\n        downshiftInternalActions[action.type]();\n      } else {\n        downshiftInternalActions[action.type](data);\n      }\n    } catch (err) {\n      throw new Error(`Action ${action.type} is not available.`);\n    }\n  }, [downshiftInternalActions]);\n\n  useEffect(() => {\n    if (typeof comboboxAction === 'function') {\n      comboboxAction(dispatchComboboxAction);\n    }\n  }, [comboboxAction, dispatchComboboxAction, downshiftInternalActions]);\n};\n\nexport default useComboboxAction;\n","import React, { useEffect, useRef, useState } from 'react';\nimport classnames from 'classnames';\nimport Downshift from 'downshift';\nimport { arrayOf, bool, func, number, oneOfType, shape, string } from 'prop-types';\nimport Listbox from '../combobox/listbox';\nimport Input from '../input';\nimport useScrollToItem from '../combobox/useScrollToItem';\nimport useComboboxAction from '../combobox/useComboboxAction';\n\nconst ComboboxFreeformManualSelection = ({\n  comboboxClass,\n  comboboxAction,\n  containerProps,\n  errorText,\n  // eslint-disable-line no-unused-vars\n  inputProps,\n  itemToStringFunc,\n  onInputBlur,\n  onInputChange,\n  onInputFocus,\n  onSelectionChange,\n  optionsTemplate,\n  ...restProps\n}) => {\n  const [currentSelectItem, setCurrentSelectItem] = useState('');\n  const inputRef = useRef(null);\n  const [inputError, setInputError] = useState(errorText);\n  const [isListboxOpen, setListboxOpen] = useState(false);\n  const [searchHasNoMatch, setSearchHasNoMatch] = useState(false);\n  const { listboxItemRef, listboxRef } = useScrollToItem(currentSelectItem, optionsTemplate || {});\n\n  const downshiftInternalActions = {};\n  const actionList = ['clearSelection', 'closeMenu', 'openMenu', 'selectItem', 'setHighlightedIndex'];\n  useComboboxAction(comboboxAction, downshiftInternalActions);\n\n  //Error text from parent component\n  useEffect(() => {\n    if (errorText) {\n      setInputError(errorText);\n    } else {\n      setInputError('');\n    }\n  }, [errorText]);\n\n  useEffect(() => {\n    if (inputError) {\n      //if errorText exist, when noMatch error disappear, reset back to errorText\n      if (errorText) {\n        setInputError(errorText);\n      } else {\n        setInputError('');\n      }\n    }\n    if (searchHasNoMatch) {\n      setListboxOpen(false);\n    } else {\n      setListboxOpen(true);\n    }\n  }, [errorText, inputError, searchHasNoMatch]);\n\n  const handleInputBlur = e => {\n    typeof onInputBlur === 'function' && onInputBlur(e, e.target.value);\n  };\n\n  const handleInputChange = e => {\n    typeof onInputChange === 'function' && onInputChange(e, e.target.value);\n  };\n\n  const handleInputFocus = e => {\n    typeof onInputFocus === 'function' && onInputFocus(e, e.target.value);\n  };\n\n  const handleSelection = selection => {\n    setCurrentSelectItem(selection ? selection : null);\n    setInputError('');\n    typeof onSelectionChange === 'function' && onSelectionChange(selection);\n  };\n\n  const handleNoMatch = noMatch => {\n    if (searchHasNoMatch !== noMatch) {\n      setSearchHasNoMatch(noMatch);\n    }\n  };\n\n  return (\n    <Downshift\n      initialInputValue=\"\"\n      initialSelectedItem={currentSelectItem}\n      itemToString={itemToStringFunc}\n      onChange={handleSelection}\n    >\n      {({ getInputProps, isOpen, ...listboxDownshift }) => { // eslint-disable-line no-unused-vars\n        if (Object.keys(downshiftInternalActions).length === 0) {\n          downshiftInternalActions.setInputError = setInputError;\n          for (const action of actionList) { // eslint-disable-line\n            downshiftInternalActions[action] = listboxDownshift[action];\n          }\n        }\n        return (\n          <div {...containerProps} className={classnames('vds-combobox-container', comboboxClass.containerClass)}>\n            <Input\n              {...getInputProps({\n                onBlur: handleInputBlur,\n                onChange: handleInputChange,\n                onFocus: handleInputFocus\n              })}\n              {...inputProps}\n              className={classnames('vds-combobox-input-wrapper', comboboxClass.inputWrapperClass)}\n              errorText={inputError}\n              ref={inputRef}\n              invalid={Boolean(inputError)}\n              labelId={getInputProps()['aria-labelledby']}\n              showErrorText={Boolean(inputError)}\n              showHelpText={Boolean(inputProps.helpText)}\n              type=\"text\"\n            />\n            <Listbox\n              {...listboxDownshift}\n              {...restProps}\n              listboxClass={comboboxClass.listboxClass}\n              isListboxOpen={isListboxOpen}\n              listboxItemRef={li => {\n                listboxItemRef.current = li;\n              }}\n              listboxRef={ul => {\n                listboxRef.current = ul;\n              }}\n              isOpen={isOpen}\n              noMatchCallback={handleNoMatch}\n              noSelectionCheckMark\n              optionsTemplate={optionsTemplate}\n            />\n          </div>\n        );\n      }}\n    </Downshift>\n  );\n};\n\nComboboxFreeformManualSelection.propTypes = {\n  comboboxAction: func,\n  comboboxClass: shape({\n    containerClass: string,\n    inputWrapperClass: string,\n    listboxClass: string\n  }),\n  containerProps: shape({}),\n  errorText: string,\n  id: oneOfType([number, string]),\n  inputProps: shape({\n    disabled: bool,\n    helpText: string,\n    label: string.isRequired,\n    name: string.isRequired,\n    placeholder: string,\n    required: bool,\n    showHelpText: bool\n  }),\n  itemToStringFunc: func.isRequired,\n  onInputBlur: func,\n  onInputChange: func,\n  onInputFocus: func,\n  onSelectionChange: func,\n  optionsTemplate: shape({\n    itemKey: string.isRequired,\n    optionValues: arrayOf(shape({ value: string.isRequired })),\n    renderOption: func.isRequired,\n    searchIncludeFields: arrayOf(string)\n  })\n};\n\nComboboxFreeformManualSelection.defaultProps = {\n  comboboxClass: {\n    containerClass: null,\n    inputWrapperClass: null,\n    listboxClass: null\n  },\n  errorText: '',\n  inputProps: {\n    label: 'Text for label',\n    name: 'combobox'\n  }\n};\n\nComboboxFreeformManualSelection.displayName = 'ComboboxFreeformManualSelection';\n\nexport default ComboboxFreeformManualSelection;\n"],"sourceRoot":""}