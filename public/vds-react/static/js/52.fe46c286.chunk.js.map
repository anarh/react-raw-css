{"version":3,"sources":["components/divider/index.js","components/divider/example/index.js","styleguide/pages/components/divider.js","components/data-table/index.js","components/sr/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js"],"names":["Divider","ariaHidden","className","title","type","remainingProps","aria-hidden","classnames","Boolean","defaultProps","displayName","DividerExample","tag","reactDocs","require","jsParsed","replace","exampleCode","useState","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","name","resolution","match","path","theme","code","language","style","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","dividerLines","size","aria-sort","role","scope","props","Object","entries","filter","doc","description","tabIndex","required","color","value","length","v","join","undefined","defaultValue","DataTable","forwardRef","ref","children","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","propTypes","node","string","columns","arrayOf","shape","bool","data","oneOf","Sr","Tag","elementType","Tbody","Td","textAlign","Th","Thead","Tr"],"mappings":"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","file":"static/js/52.fe46c286.chunk.js","sourcesContent":["import React from 'react';\nimport { oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-divider';\n\nconst Divider = ({ ariaHidden, className, title, type, ...remainingProps }) => (\n  <hr\n    aria-hidden={ariaHidden}\n    className={classnames({\n      [`${CSS_PREFIX}--${type}`]: Boolean(type)\n    }, className)}\n    title={title}\n    {...remainingProps}\n  />\n);\n\nDivider.propTypes = {\n  /**\n   * Aria Hidden\n   */\n  ariaHidden: oneOf(['true', 'false']),\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Title\n   */\n  title: string,\n\n  /**\n   * Type\n   */\n  type: oneOf(['section', 'standard'])\n};\n\nDivider.defaultProps = {\n  ariaHidden: 'true',\n  title: 'Separator',\n  type: 'standard'\n};\n\nDivider.displayName = 'Divider';\n\nexport default Divider;\n","import React from 'react';\nimport Col from '../../col';\nimport Divider from '../../divider';\nimport Grid from '../../grid';\nimport Row from '../../row';\nimport Typography from '../../typography';\n\nconst DividerExample = () => (\n  <Grid>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Divider (standard)</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Divider type=\"standard\" />\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Divider (section)</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Divider type=\"section\" />\n      </Col>\n    </Row>\n  </Grid>\n);\n\nexport default DividerExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../../components/col';\nimport DataTable from '../../../components/data-table';\nimport Icon from '../../../components/icon';\nimport Grid from '../../../components/grid';\nimport Row from '../../../components/row';\nimport Sr from '../../../components/sr';\nimport Tab from '../../../components/tab';\nimport TabList from '../../../components/tab-list';\nimport Tbody from '../../../components/tbody';\nimport Td from '../../../components/td';\nimport Th from '../../../components/th';\nimport Thead from '../../../components/thead';\nimport Tr from '../../../components/tr';\nimport Typography from '../../../components/typography';\n\nimport Example from '../../../components/divider/example';\n\nconst reactDocs = require('react-docgen');\nconst js = raw('../../../components/divider/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../../components/divider/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst DividerExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Divider\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Divider</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/divider`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Divider Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/divider/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />Code for Divider Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/divider/code`,\n              'vds-state--show': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/divider/code`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/divider/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/divider/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <Sr tag=\"caption\">Props</Sr>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {doc[1].type.value.length ? doc[1].type.value.map(v => v.value || v.name).join(', ') : undefined}\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nDividerExample.displayName = 'DividerExample';\n\nexport default DividerExample;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-sr';\n\nconst Sr = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nSr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nSr.defaultProps = {\n  tag: 'span'\n};\n\nSr.displayName = 'Sr';\n\nexport default Sr;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n"],"sourceRoot":""}