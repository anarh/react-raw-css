{"version":3,"sources":["components/combobox/example/index.js","styleguide/pages/components/combobox.js","components/data-table/index.js","components/sr/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/button-text/index.js","components/input-container/index.js","components/input-label/index.js","components/input-bar/index.js","components/input-message/index.js","components/input-option/index.js","components/input-hint/index.js","components/input-text/index.js","components/input/index.js","components/input-input/index.js","components/button-group/index.js","components/combobox/listbox.js","components/combobox/useScrollToItem.js","components/combobox/useComboboxAction.js","components/combobox/index.js"],"names":["ComboboxExample","useState","disabled","stateOne","setStateOne","inputPropsOne","helpText","label","name","optionsTemplateOne","itemKey","optionValues","value","renderOption","optionItem","className","searchIncludeFields","optionsTemplateTwo","dialCode","shortValue","Fragment","errorText","stateThree","setStateThree","optionsTemplateThree","dispatchComboboxActionThree","useRef","optionsTemplateFour","dispatchComboboxActionFour","optionsTemplateFive","tag","optionsTemplate","inputProps","onSelectionChange","item","console","log","JSON","stringify","direction","style","marginTop","colorScheme","onClick","comboboxClass","containerClass","inputWrapperClass","listboxClass","placeholder","required","onInputBlur","onInputChange","onInputFocus","comboboxAction","dispatchComboboxActionCallback","current","noMatchMessage","type","filterFunction","reactDocs","require","jsParsed","replace","exampleCode","remainingProps","componentProps","setComponentProps","useEffect","parse","siblingOfStickyFooter","exact","to","process","activeClassName","resolution","classnames","match","path","defaultProps","theme","code","language","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","dividerLines","size","aria-sort","role","scope","props","Object","entries","filter","doc","description","tabIndex","color","length","v","join","undefined","defaultValue","displayName","DataTable","forwardRef","ref","children","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","Boolean","propTypes","node","string","columns","arrayOf","shape","bool","data","oneOf","Sr","Tag","elementType","Tbody","Td","textAlign","Th","Thead","Tr","ButtonText","active","flippable","isFullWidth","includes","oneOfType","number","InputContainer","css","expanded","filled","focus","invalid","isTextarea","readOnly","InputLabel","InputBar","InputMessage","ariaAtomic","show","aria-atomic","aria-live","InputOption","InputHint","InputText","Input","ariaLabel","checkmarkIcon","containerProps","errorIcon","helpIcon","id","shortid","generate","labelId","noValidate","onBlur","onChange","onFocus","showCheckmark","showErrorText","showHelpText","useNativePlaceholder","dirty","setDirty","setFilled","focused","setFocused","isInvalid","setIsInvalid","rId","setValidity","e","target","checkValidity","trim","htmlFor","aria-describedby","aria-label","aria-invalid","helpOrErrorText","getHelpOrErrorText","InputInput","ButtonGroup","ListBox","getMenuProps","isOpen","isListboxOpen","listboxProps","listboxRef","restOfProps","filteredOptions","getItemProps","inputValue","listboxItemRef","noMatchCallback","noSelectionCheckMark","selectedItem","highlightedIndex","filterCount","ComboboxUtil","filterOptionValues","toLowerCase","count","itemValues","filteredValues","highlightedItem","index","isSelected","isHighlight","itemProps","renderListboxItem","useScrollToItem","currentSelectItem","findIndex","scrollTop","offsetTop","useComboboxAction","downshiftInternalActions","dispatchComboboxAction","useCallback","action","err","Error","Combobox","memo","defaultItem","restProps","setCurrentSelectItem","inputRef","inputError","setInputError","setListboxOpen","searchHasNoMatch","setSearchHasNoMatch","actionList","defaultIndex","handleInputBlur","handleInputChange","handleInputFocus","setSelectionRange","handleNoMatch","noMatch","defaultHighlightedIndex","initialInputValue","initialSelectedItem","itemToString","selection","stateReducer","state","changes","Downshift","stateChangeTypes","clickButton","newChanges","assign","getA11yStatusMessage","status","getInputProps","getToggleButtonProps","listboxDownshift","keys","iconType","li","ul","prevProps","nextProps"],"mappings":"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","file":"static/js/16.dd11e51f.chunk.js","sourcesContent":["/* eslint-disable no-console, spellcheck/spell-checker */\n\nimport React, { useState, useRef } from 'react';\nimport ButtonGroup from '../../button-group';\nimport ButtonText from '../../button-text';\nimport Col from '../../col';\nimport Combobox from '../../combobox';\nimport Grid from '../../grid';\nimport Row from '../../row';\nimport Typography from '../../typography';\n\nconst ComboboxExample = () => {\n  // start 1st combobox example\n  const [stateOne, setStateOne] = useState({\n    disabled: false\n  });\n\n  const renderOptionOne = optionItem => <span className=\"card-name\">{optionItem.value}</span>;\n\n  const inputPropsOne = {\n    disabled: stateOne.disabled,\n    helpText : 'Please select a card',\n    label: 'Select a card',\n    name: 'combobox'\n  };\n\n  const onSelectionChangeOne = item =>{\n    console.log(`onSelectionChange ${JSON.stringify(item)}`);\n  };\n\n  const cardsValueOne = [\n    { value: 'silver signature card' },\n    { value: 'visa signature card' },\n    { value: 'platinum visa card' },\n    { value: 'premium card' },\n    { value: 'another card' },\n    { value: 'other card' },\n    { value: 'secondary card' },\n    { value: 'tertiary card' },\n    { value: 'gold signature card' },\n    { value: 'yet another card' },\n    { value: 'last card' }\n  ];\n\n  const optionsTemplateOne = {\n    itemKey: 'value',\n    optionValues: cardsValueOne,\n    renderOption : renderOptionOne,\n    searchIncludeFields: ['value']\n  };\n  // end 1st combobox example\n\n  // start 2nd combobox example\n  const comboboxClassTwo = {\n    containerClass: 'customContainerClass',\n    inputWrapperClass: 'customInputClass',\n    listboxClass: 'customListBoxClass'\n  };\n\n  const countryValuesTwo = [\n    { dialCode: 'None', shortValue: 'Empty', value: '' },\n    { dialCode: '+54', shortValue: 'AR', value: 'Argentina' },\n    { dialCode: '+61', shortValue: 'AU', value: 'Australia' },\n    { dialCode: '+55', shortValue: 'BR', value: 'Brésil' },\n    { dialCode: '+1', shortValue: 'CA', value: 'Canada' },\n    { dialCode: '+56', shortValue: 'CL', value: 'Chile' },\n    { dialCode: '+86', shortValue: 'CN', value: 'China' },\n    { dialCode: '+57', shortValue: 'CO', value: 'Colombia' },\n    { dialCode: '+1', shortValue: 'DO', value: 'République Dominicaine' },\n    { dialCode: '+33', shortValue: 'FR', value: 'France' },\n    { dialCode: '+350', shortValue: 'GI', value: 'Gibraltar' },\n    { dialCode: '+502', shortValue: 'GT', value: 'Guatemala' },\n    { dialCode: '+852', shortValue: 'HK', value: 'Hong Kong' },\n    { dialCode: '+91', shortValue: 'IN', value: 'India' },\n    { dialCode: '+353', shortValue: 'IE', value: 'Ireland' },\n    { dialCode: '+81', shortValue: 'JP', value: 'Japan' },\n    { dialCode: '+965', shortValue: 'KW', value: 'Kuwait' },\n    { dialCode: '+60', shortValue: 'MY', value: 'Malaysia' },\n    { dialCode: '+64', shortValue: 'NZ', value: 'Nouvelle-Zélande' },\n    { dialCode: '+51', shortValue: 'PE', value: 'Peru' },\n    { dialCode: '+48', shortValue: 'PL', value: 'Poland' },\n    { dialCode: '+65', shortValue: 'SG', value: 'Singapore' },\n    { dialCode: '+27', shortValue: 'ZA', value: 'South Africa' },\n    { dialCode: '+34', shortValue: 'ES', value: 'Spain' },\n    { dialCode: '+886', shortValue: 'TW', value: 'Taiwan' },\n    { dialCode: '+66', shortValue: 'TH', value: 'Thailand' },\n    { dialCode: '+971', shortValue: 'AE', value: 'United Arab Emirates' },\n    { dialCode: '+44', shortValue: 'GB', value: 'United Kingdom' },\n    { dialCode: '+1', shortValue: 'US', value: 'United States of America' }\n  ];\n\n  const renderOptionTwo = optionItem => (\n    <React.Fragment>\n      <span className=\"dial-code\">{optionItem.dialCode}</span>\n      <span className=\"country-name\">{optionItem.value}</span>\n    </React.Fragment>\n  );\n\n  const optionsTemplateTwo = {\n    itemKey: 'shortValue',\n    optionValues: countryValuesTwo,\n    renderOption : renderOptionTwo,\n    searchIncludeFields: ['dialCode', 'shortValue', 'value']\n  };\n\n  const onInputBlurTwo = () => console.log('onInputBlur');\n  const onInputChangeTwo = () => console.log('onInputChange');\n  const onInputFocusTwo = () => console.log('onInputFocus');\n  const onSelectionChangeTwo = () => console.log('onSelectionChange');\n\n  const inputPropsTwo = {\n    disabled: false,\n    label: 'Select a Country',\n    name: 'combobox',\n    placeholder: 'country name',\n    required: true\n  };\n  // end 2nd combobox example\n\n  // start 3rd combobox example\n  const [stateThree, setStateThree] = useState({\n    errorText: ''\n  });\n\n  const renderOptionThree = optionItem => <span className=\"card-name\">{optionItem.value}</span>;\n\n  const inputPropsThree = {\n    disabled: false,\n    helpText: 'Please select a card',\n    label: 'Select a card',\n    name: 'combobox'\n  };\n\n  const onSelectionChangeThree = item => console.log(`onSelectionChange ${JSON.stringify(item)}`);\n\n  const cardsValueThree = [\n    { value: 'silver signature card' },\n    { value: 'visa signature card' },\n    { value: 'platinum visa card' },\n    { value: 'premium card' },\n    { value: 'another card' },\n    { value: 'other card' },\n    { value: 'secondary card' },\n    { value: 'tertiary card' },\n    { value: 'gold signature card' },\n    { value: 'yet another card' },\n    { value: 'last card' }\n  ];\n\n  const optionsTemplateThree = {\n    itemKey: 'value',\n    optionValues: cardsValueThree,\n    renderOption : renderOptionThree,\n    searchIncludeFields: ['value']\n  };\n\n  const dispatchComboboxActionThree = useRef();\n\n  const comboboxActionThree = dispatchComboboxActionCallback => {\n    dispatchComboboxActionThree.current = dispatchComboboxActionCallback;\n  };\n\n  const clearSelectionThree = () => {\n    dispatchComboboxActionThree.current({ type:'clearSelection' });\n  };\n\n  const resetThree = () => {\n    dispatchComboboxActionThree.current({ type:'clearSelection' });\n    setStateThree({ errorText: '' });\n  };\n\n  const invalidOptionThree = () => {\n    setStateThree({\n      errorText: 'Invalid option'\n    });\n  };\n  // end 3rd combobox example\n\n  // start 4th combobox example\n  const renderOptionFour = optionItem => <span className=\"card-name\">{optionItem.value}</span>;\n\n  const inputPropsFour = {\n    disabled: false,\n    helpText : 'Please select a card',\n    label: 'Select a card',\n    name: 'combobox'\n  };\n\n  const onSelectionChangeFour = item => console.log(`onSelectionChange ${JSON.stringify(item)}`);\n\n  const cardsValueFour = [\n    { value: 'silver signature card' },\n    { value: 'visa signature card' },\n    { value: 'platinum visa card' },\n    { value: 'premium card' },\n    { value: 'another card' },\n    { value: 'other card' },\n    { value: 'secondary card' },\n    { value: 'tertiary card' },\n    { value: 'gold signature card' },\n    { value: 'yet another card' },\n    { value: 'last card' }\n  ];\n\n  const optionsTemplateFour = {\n    itemKey: 'value',\n    optionValues: cardsValueFour,\n    renderOption : renderOptionFour,\n    searchIncludeFields: ['value']\n  };\n\n  const dispatchComboboxActionFour = useRef();\n  const comboboxActionFour = dispatchComboboxActionCallback => {\n    dispatchComboboxActionFour.current = dispatchComboboxActionCallback;\n  };\n\n  const openMenuFour = () => {\n    dispatchComboboxActionFour.current({ type:'openMenu' });\n  };\n\n  const closeMenuFour = () => {\n    dispatchComboboxActionFour.current({ type:'closeMenu' });\n  };\n\n  const setHighlightedIndexFour = () => {\n    dispatchComboboxActionFour.current({ type:'setHighlightedIndex' }, 2);\n    dispatchComboboxActionFour.current({ type:'openMenu' }, 2);\n  };\n\n  const selectVisaFour = () => {\n    dispatchComboboxActionFour.current({ type:'selectItem' }, { value: 'visa signature card' });\n  };\n  // end 4th combobox example\n\n  //start 5th combobox example\n  const renderOptionFive = optionItem => <span className=\"card-name\">{optionItem.value}</span>;\n\n  const inputPropsFive = {\n    disabled: false,\n    helpText: 'Please select a card',\n    label: 'Select a card',\n    name: 'combobox'\n  };\n\n  const onSelectionChangeFive = item => console.log(`onSelectionChange ${JSON.stringify(item)}`);\n\n  const cardsValueFive = [\n    { value: 'silver signature card' },\n    { value: 'visa signature card' },\n    { value: 'platinum visa card' },\n    { value: 'premium card' },\n    { value: 'another card' },\n    { value: 'other card' },\n    { value: 'secondary card' },\n    { value: 'tertiary card' },\n    { value: 'gold signature card' },\n    { value: 'yet another card' },\n    { value: 'last card' }\n  ];\n\n  const optionsTemplateFive = {\n    itemKey: 'value',\n    optionValues: cardsValueFive,\n    renderOption : renderOptionFive,\n    searchIncludeFields: ['value']\n  };\n\n  const myFilterFunctionFive = () => true;\n  // end 5th combobox example\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Default</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Combobox\n            optionsTemplate={optionsTemplateOne}\n            inputProps={inputPropsOne}\n            onSelectionChange={onSelectionChangeOne}\n          />\n          <ButtonGroup direction=\"right\" style={{ marginTop: \"30px\" }}>\n            <ButtonText\n              colorScheme=\"primary\"\n              onClick={() => setStateOne({ disabled: false })}\n            >\n              Enable\n            </ButtonText>\n            <ButtonText\n              colorScheme=\"secondary\"\n              onClick={() => setStateOne({ disabled: true })}\n            >\n              Disable\n            </ButtonText>\n          </ButtonGroup>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Customized Listbox Option</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Combobox\n            comboboxClass={comboboxClassTwo}\n            optionsTemplate={optionsTemplateTwo}\n            inputProps={inputPropsTwo}\n            onInputBlur={onInputBlurTwo}\n            onInputChange={onInputChangeTwo}\n            onInputFocus={onInputFocusTwo}\n            onSelectionChange={onSelectionChangeTwo}\n            // defaultItem= {{ dialCode: '+1', shortValue: 'US', value: 'United States of America' }}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Error Handling</Typography>\n          <Combobox\n            comboboxAction={comboboxActionThree}\n            optionsTemplate={optionsTemplateThree}\n            noMatchMessage={'There are no matches!'}\n            errorText={stateThree.errorText}\n            inputProps={inputPropsThree}\n            onSelectionChange={onSelectionChangeThree}\n          />\n          <ButtonGroup direction=\"right\" style={{ marginTop: \"30px\" }}>\n            <ButtonText colorScheme=\"secondary\" onClick={() => clearSelectionThree()}>clear selection</ButtonText>\n            <ButtonText colorScheme=\"primary\" onClick={() => resetThree()}>Reset</ButtonText>\n            <ButtonText colorScheme=\"secondary\" onClick={() => invalidOptionThree()}>Invalid Option</ButtonText>\n          </ButtonGroup>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Customized Combobox</Typography>\n          <Combobox\n            comboboxAction={comboboxActionFour}\n            optionsTemplate={optionsTemplateFour}\n            inputProps={inputPropsFour}\n            onSelectionChange={onSelectionChangeFour}\n          />\n          <ButtonGroup direction=\"right\" style={{ marginTop: \"30px\" }}>\n            <ButtonText colorScheme=\"secondary\" onClick={() => openMenuFour()}>Open listbox</ButtonText>\n            <ButtonText colorScheme=\"secondary\" onClick={() => closeMenuFour()}>Close listbox</ButtonText>\n            <ButtonText colorScheme=\"secondary\" onClick={() => setHighlightedIndexFour()}>Highlight Third Item</ButtonText>\n            <ButtonText colorScheme=\"secondary\" onClick={() => selectVisaFour()}>Select visa</ButtonText>\n          </ButtonGroup>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Customized Filter Function that will not filter</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Combobox\n            filterFunction={myFilterFunctionFive}\n            optionsTemplate={optionsTemplateFive}\n            inputProps={inputPropsFive}\n            onSelectionChange={onSelectionChangeFive}\n          />\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default ComboboxExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../../components/col';\nimport DataTable from '../../../components/data-table';\nimport Icon from '../../../components/icon';\nimport Grid from '../../../components/grid';\nimport Row from '../../../components/row';\nimport Sr from '../../../components/sr';\nimport Tab from '../../../components/tab';\nimport TabList from '../../../components/tab-list';\nimport Tbody from '../../../components/tbody';\nimport Td from '../../../components/td';\nimport Th from '../../../components/th';\nimport Thead from '../../../components/thead';\nimport Tr from '../../../components/tr';\nimport Typography from '../../../components/typography';\n\nimport Example from '../../../components/combobox/example';\n\nconst reactDocs = require('react-docgen');\nconst js = raw('../../../components/combobox/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../../components/combobox/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst ComboboxExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Combobox\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Combobox</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/combobox`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Combobox Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/combobox/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />Code for Combobox Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/combobox/code`,\n              'vds-state--show': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/combobox/code`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/combobox/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/combobox/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <Sr tag=\"caption\">Props</Sr>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {doc[1].type.value.length ? doc[1].type.value.map(v => v.value || v.name).join(', ') : undefined}\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nComboboxExample.displayName = 'ComboboxExample';\n\nexport default ComboboxExample;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-sr';\n\nconst Sr = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nSr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nSr.defaultProps = {\n  tag: 'span'\n};\n\nSr.displayName = 'Sr';\n\nexport default Sr;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React, { forwardRef } from 'react';\nimport { bool, node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-text';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonText = forwardRef(({\n  active,\n  children,\n  className,\n  colorScheme,\n  disabled,\n  flippable,\n  isFullWidth,\n  role,\n  tabIndex,\n  tag: Tag,\n  type,\n  ...remainingProps\n}, ref) => (\n  <Tag\n    className={classnames({\n      [`${CSS_PREFIX}`]: Boolean(colorScheme) === false,\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_PREFIX}--${colorScheme}`]: Boolean(colorScheme),\n      [`${CSS_STATE}--flippable`]: Boolean(flippable),\n      [`${CSS_PREFIX}--fullwidth`]: Boolean(isFullWidth),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className)}\n    disabled={disabled}\n    role={Tag === 'button' ? undefined : role}\n    tabIndex={['span', 'div'].includes(Tag) ? tabIndex : undefined}\n    type={Tag === 'button' ? type : undefined}\n    ref={ref}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </Tag>\n));\n\nButtonText.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Color scheme of button\n   */\n  colorScheme: oneOf([\n    'primary',\n    'secondary',\n    'tertiary'\n  ]),\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Flippable\n   */\n  flippable: bool,\n\n  /**\n   * Full width\n   */\n  isFullWidth: bool,\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * @ignore\n   */\n  tabIndex: oneOfType([number, string]),\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'a',\n    'button',\n    'div',\n    'span'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonText.defaultProps = {\n  role: 'button',\n  tabIndex: 0,\n  tag: 'button',\n  type: 'button'\n};\n\nButtonText.displayName = 'ButtonText';\n\nexport default ButtonText;\n","import React from 'react';\nimport { bool, func, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input';\nconst CSS_STATE = 'vds-state';\n\nconst InputContainer = ({\n  children,\n  className,\n  css,\n  disabled,\n  expanded,\n  filled,\n  focus,\n  invalid,\n  isTextarea,\n  readOnly,\n  ...remainingProps\n}) => (\n  <div\n    className={classnames({\n      [`${CSS_PREFIX}`]: !isTextarea,\n      [`${CSS_PREFIX}-textarea-container`]: Boolean(isTextarea),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled),\n      [`${CSS_STATE}--error`]: Boolean(invalid),\n      [`${CSS_STATE}--expanded`]: Boolean(expanded),\n      [`${CSS_STATE}--filled`]: Boolean(filled),\n      [`${CSS_STATE}--focus`]: Boolean(focus),\n      [`${CSS_STATE}--readonly`]: Boolean(readOnly),\n      [`${CSS_STATE}--success`]: typeof invalid === 'boolean' && !invalid\n    }, className)}\n    css={css}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputContainer.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Filled\n   */\n  filled: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * isTextarea\n   */\n  isTextarea: bool,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool\n};\n\nInputContainer.displayName = 'InputContainer';\n\nexport default InputContainer;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-label';\n\nconst InputLabel = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <label\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </label>\n));\n\nInputLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputLabel.displayName = 'InputLabel';\n\nexport default InputLabel;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-bar';\n\nconst InputBar = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputBar.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputBar.displayName = 'InputBar';\n\nexport default InputBar;\n","import React from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-message';\nconst CSS_STATE = 'vds-state';\n\nconst InputMessage = ({\n  ariaAtomic,\n  children,\n  className,\n  invalid,\n  role,\n  show,\n  ...remainingProps\n}) => (\n  <span\n    aria-atomic={ariaAtomic}\n    aria-live={invalid ? 'assertive' : 'polite'}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--hidden`]: !show,\n      [`${CSS_STATE}--error`]: Boolean(invalid)\n    }, className)}\n    role={role}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputMessage.propTypes = {\n  /**\n   * Aria Atomic\n   */\n  ariaAtomic: oneOf(['true', 'false']),\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Role\n   */\n  role: string,\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\nInputMessage.defaultProps = {\n  ariaAtomic: 'true',\n  role: 'alert'\n};\n\nInputMessage.displayName = 'InputMessage';\n\nexport default InputMessage;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-option';\n\nconst InputOption = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputOption.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputOption.displayName = 'InputOption';\n\nexport default InputOption;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-hint';\n\nconst InputHint = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputHint.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputHint.displayName = 'InputHint';\n\nexport default InputHint;\n","import React, { forwardRef } from 'react';\nimport { string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input--input-text';\n\nconst InputText = forwardRef(({ className, type, ...remainingProps }, ref) => (\n  <input\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    type={type}\n    {...remainingProps}\n  />\n));\n\nInputText.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Type of the input element. It should be a valid HTML5 input type.\n   */\n  type: string\n};\n\nInputText.defaultProps = {\n  type: 'text'\n};\n\nInputText.displayName = 'InputText';\n\nexport default InputText;\n","import React, { forwardRef, Fragment, useEffect, useState } from 'react';\nimport { bool, func, node, number, object, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport InputContainer from '../input-container';\nimport InputLabel from '../input-label';\nimport InputBar from '../input-bar';\nimport InputHint from '../input-hint';\nimport InputInput from '../input-input';\nimport InputText from '../input-text';\nimport InputMessage from '../input-message';\nimport InputOption from '../input-option';\nimport Icon from '../icon';\n\nconst CSS_STATE = 'vds-state';\n\nconst Input = forwardRef(({\n  ariaLabel,\n  checkmarkIcon,\n  children,\n  className,\n  containerProps,\n  css,\n  disabled,\n  errorIcon,\n  errorText,\n  expanded,\n  helpIcon,\n  helpText,\n  id = shortid.generate(),\n  invalid,\n  label,\n  labelId,\n  noValidate,\n  onBlur,\n  onChange,\n  onFocus,\n  placeholder,\n  readOnly,\n  showCheckmark,\n  showErrorText,\n  showHelpText,\n  useNativePlaceholder,\n  ...remainingProps\n}, ref) => {\n  const [dirty, setDirty] = useState(false);\n  const [filled, setFilled] = useState(Boolean(remainingProps.value) || Boolean(remainingProps.defaultValue));\n  const [focused, setFocused] = useState(false);\n  const [isInvalid, setIsInvalid] = useState(invalid);\n  const [rId] = useState(id);\n\n  const setValidity = e => {\n    if (!noValidate) {\n      if (dirty) {\n        setIsInvalid((!e.target.checkValidity() || (e.target.required && !e.target.value.trim().length)));\n      }\n\n      if (!dirty && (e.target.required && !e.target.value.trim().length)) {\n        setIsInvalid(true);\n      }\n\n      if (dirty && !e.target.required && !e.target.value.trim().length) {\n        setIsInvalid(undefined);\n      }\n    }\n  };\n\n  useEffect(() => {\n    setFilled(Boolean(remainingProps.defaultValue) || Boolean(remainingProps.value));\n  }, [remainingProps.defaultValue, remainingProps.value]);\n\n  useEffect(() => {\n    setIsInvalid(invalid);\n  }, [invalid]);\n\n  const handleBlur = e => {\n    setFocused(false);\n    setValidity(e);\n\n    if (typeof onBlur === 'function') {\n      onBlur(e);\n    }\n  };\n\n  const handleChange = e => {\n    setFilled(e.target.value !== '');\n\n    if (typeof isInvalid === 'boolean') {\n      setValidity(e);\n    }\n\n    setDirty(true);\n    if (typeof onChange === 'function') {\n      onChange(e);\n    }\n  };\n\n  const handleFocus = e => {\n    setFocused(true);\n\n    if (typeof onFocus === 'function') {\n      onFocus(e);\n    }\n  };\n\n  // NOTE: I'd actually separate out getting help text from error text\n  const getHelpOrErrorText = () => {\n    let helpOrErrorText = null;\n    if (showHelpText || showErrorText) {\n      helpOrErrorText = (\n        <InputMessage\n          id={`input-message-${rId}`}\n          show={(showHelpText && Boolean(helpText)) || (showErrorText && Boolean(errorText))}\n          invalid={isInvalid}\n        >\n          {\n            !isInvalid && focused && showHelpText && Boolean(helpText)\n              ? <Fragment>{helpIcon} {helpText}</Fragment>\n              : undefined\n          }\n          {\n            isInvalid === true && showErrorText && Boolean(errorText)\n              ? <Fragment>{errorIcon} {errorText}</Fragment>\n              : undefined\n          }\n        </InputMessage>\n      );\n    }\n    return helpOrErrorText;\n  };\n\n  return (\n    <InputContainer\n      className={classnames(className)}\n      css={css}\n      disabled={disabled}\n      expanded={expanded}\n      filled={filled}\n      focus={focused}\n      readOnly={readOnly}\n      invalid={isInvalid}\n      {...containerProps}\n    >\n      {label ? <InputLabel id={labelId} htmlFor={rId}>{label}</InputLabel> : undefined}\n      <InputBar>\n        <InputInput>\n          { placeholder && !useNativePlaceholder ? <InputHint>{placeholder}</InputHint> : undefined}\n          <InputText\n            aria-describedby={\n              showErrorText || showHelpText\n                ? `input-message-${rId}`\n                : undefined\n            }\n            aria-label={label ? undefined : ariaLabel}\n            aria-invalid={isInvalid}\n            id={rId}\n            disabled={disabled}\n            onBlur={handleBlur}\n            onChange={handleChange}\n            onFocus={handleFocus}\n            placeholder={useNativePlaceholder ? placeholder : undefined}\n            readOnly={readOnly}\n            ref={ref}\n            {...remainingProps}\n          />\n        </InputInput>\n        {\n          showCheckmark && typeof isInvalid === 'boolean' && !isInvalid && Boolean(checkmarkIcon)\n            ? <InputOption\n              className={classnames({\n                [`${CSS_STATE}--hidden`]: typeof isInvalid === 'boolean' && isInvalid\n              })}\n            >\n              {checkmarkIcon}\n            </InputOption>\n            : undefined\n        }\n        {children}\n      </InputBar>\n      {getHelpOrErrorText()}\n\n    </InputContainer>\n  );\n});\n\nInput.propTypes = {\n  /**\n   * Aria Label\n   */\n  ariaLabel: string,\n\n  /**\n   *  Checkmark Icon\n   */\n  checkmarkIcon: node,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Container Props\n   */\n  containerProps: object, // eslint-disable-line\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   *  Error Message Icon\n   */\n  errorIcon: node,\n\n  /**\n   *  Error Message\n   */\n  errorText: node,\n\n  /**\n   *  Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Input Help Message Icon\n   */\n  helpIcon: node,\n\n  /**\n   * Input Help Message\n   */\n  helpText: node,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Label\n   */\n  label: node,\n\n  /**\n   * Label Id\n   */\n  labelId: oneOfType([number, string]),\n\n  /**\n   * Disable native HTML5 validation e.g. type=email, pattern=\"some regex pattern\"\n   */\n  noValidate: bool,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * On Change\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /**\n   * Placeholder\n   */\n  placeholder: node,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool,\n\n  /**\n   * Show Checkmark Icon\n   */\n  showCheckmark: bool,\n\n  /**\n   * Show Error Message\n   */\n  showErrorText: bool,\n\n  /**\n   * Show Help Message\n   */\n  showHelpText: bool,\n\n  /**\n   * Use native placeholder\n   */\n  useNativePlaceholder: bool\n};\n\nInput.defaultProps = {\n  checkmarkIcon: <Icon name=\"checkmark\" resolution=\"low\" />,\n  errorIcon: <Icon name=\"error\" resolution=\"low\" />\n};\n\nInput.displayName = 'Input';\n\nexport default Input;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-input';\n\nconst InputInput = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputInput.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputInput.displayName = 'InputInput';\n\nexport default InputInput;\n","import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-group';\n\nconst ButtonGroup = ({ children, className, direction, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${direction}`]: Boolean(direction)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nButtonGroup.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Direction\n   */\n  direction: oneOf([\n    'reverse',\n    'right'\n  ])\n};\n\nButtonGroup.displayName = 'ButtonGroup';\n\nexport default ButtonGroup;\n","import React from 'react';\nimport { arrayOf, bool, func, shape, string } from 'prop-types';\nimport classnames from 'classnames';\nimport Icon from '../icon';\nimport { ComboboxUtil } from '@visa/ui-utils';\nconst CSS_PREFIX = 'vds-listbox';\n\nconst renderListboxItem = (props, optionsTemplate) => {\n  const {\n    filterFunction,\n    getItemProps,\n    inputValue,\n    listboxItemRef,\n    noMatchCallback,\n    noSelectionCheckMark,\n    selectedItem\n  } = props;\n\n  const highlightedIndex = props.highlightedIndex < 0 ? 0 : props.highlightedIndex;\n  const { itemKey, optionValues, renderOption } = optionsTemplate;\n  let filteredOptions;\n\n  if (inputValue && inputValue.trim()) {\n    filteredOptions = ComboboxUtil.filterOptionValues(\n      inputValue\n        .trim()\n        .replace(/\\s\\s+/g, ' ')\n        .toLowerCase(),\n      optionsTemplate,\n      filterFunction\n    );\n  } else {\n    filteredOptions = { count: optionValues ? optionValues.length : 0, itemValues: optionValues };\n  }\n\n  const filterCount = filteredOptions.count;\n  const filteredValues = filteredOptions.itemValues;\n  const highlightedItem = filteredOptions.itemValues ? filteredOptions.itemValues[highlightedIndex] : null;\n  if (filterCount === 0) {\n    noMatchCallback(true);\n    return null;\n  }\n  noMatchCallback(false);\n\n  return filteredValues.map((item, index) => {\n    const isSelected = selectedItem && selectedItem[itemKey] === item[itemKey];\n    const isHighlight = highlightedItem && highlightedItem[itemKey] === item[itemKey];\n    const itemProps = {\n      className: classnames(\n        `${CSS_PREFIX}-item`,\n        { [`${CSS_PREFIX}--item-selected`]: isSelected && !noSelectionCheckMark },\n        { [`${CSS_PREFIX}--item-highlight`]: isHighlight },\n        'visa-ui-btn-icon--light-fill'\n      )\n    };\n    if (isSelected) {\n      itemProps.ref = listboxItemRef;\n    }\n    return (\n      <li\n        {...getItemProps({\n          index,\n          item,\n          key: item[itemKey]\n        })}\n        {...itemProps}\n      >\n        <span className={`${CSS_PREFIX}--item-container`}>\n          {renderOption(item)}\n          {isSelected && !noSelectionCheckMark ? <Icon name=\"checkmark\" resolution=\"tiny\" /> : null}\n        </span>\n      </li>\n    );\n  });\n};\n\nconst ListBox = props => {\n  const { getMenuProps, isOpen, listboxClass, isListboxOpen, listboxProps, listboxRef, optionsTemplate, ...restOfProps } = props;\n  return (\n    <div className={classnames('vds-menu--absolute ', { [`vds-menu--show`]: isOpen && isListboxOpen })}>\n      <ul\n        {...listboxProps}\n        {...getMenuProps({\n          className: classnames(CSS_PREFIX, listboxClass),\n          ref: listboxRef\n        })}\n      >\n        {isOpen && optionsTemplate && optionsTemplate.optionValues && optionsTemplate.optionValues.length ? renderListboxItem(restOfProps, optionsTemplate) : null}\n      </ul>\n    </div>\n  );\n};\n\nListBox.propTypes = {\n  filterFunction: func,\n  getMenuProps: func,\n  isListboxOpen: bool,\n  isOpen: bool,\n  listboxClass: string,\n  listboxItemRef: func.isRequired,\n  listboxProps: shape({}),\n  listboxRef: func.isRequired,\n  optionsTemplate: shape({\n    itemKey: string.isRequired,\n    optionValues: arrayOf(shape({ value: string.isRequired })),\n    renderOption: func.isRequired,\n    searchIncludeFields: arrayOf(string)\n  })\n};\n\nListBox.displayName = 'ListBox';\n\nexport default ListBox;\n","import { useEffect, useRef } from 'react';\n/**\n * @description custom react hook, if there is a long list of items,\n * this hook will scroll the selected item to the view\n *\n * @param {object} currentSelectItem\n * @param {object} optionsTemplate\n * @returns {object} listboxItemRef, listboxRef\n */\nconst useScrollToItem = (currentSelectItem, optionsTemplate) => {\n  const listboxItemRef = useRef(null);\n  const listboxRef = useRef(null);\n  useEffect(() => {\n    if (listboxRef.current && listboxItemRef.current) {\n      if (currentSelectItem && optionsTemplate && optionsTemplate.optionValues) {\n        const index = optionsTemplate.optionValues.findIndex(\n          item => item[optionsTemplate.itemKey] === currentSelectItem[optionsTemplate.itemKey]\n        );\n        if (index >= 0) {\n          listboxRef.current.scrollTop += listboxItemRef.current.offsetTop;\n        }\n      }\n    }\n  });\n  return { listboxItemRef, listboxRef };\n};\n\nexport default useScrollToItem;\n","import { useEffect, useCallback } from 'react';\n/**\n * @description Reverse of Control,\n * expose downshift internal action to parent component so\n * we can customize combobox behavior to meet different requirements\n *\n * @param {function} comboboxAction\n * @param {object} downshiftInternalActions\n */\n\nconst useComboboxAction = (comboboxAction, downshiftInternalActions) => {\n  const dispatchComboboxAction = useCallback((action, data) => {\n    try {\n      if (data === undefined) {\n        downshiftInternalActions[action.type]();\n      } else {\n        downshiftInternalActions[action.type](data);\n      }\n    } catch (err) {\n      throw new Error(`Action ${action.type} is not available.`);\n    }\n  }, [downshiftInternalActions]);\n\n  useEffect(() => {\n    if (typeof comboboxAction === 'function') {\n      comboboxAction(dispatchComboboxAction);\n    }\n  }, [comboboxAction, dispatchComboboxAction, downshiftInternalActions]);\n};\n\nexport default useComboboxAction;\n","import React, { memo, useEffect, useRef, useState } from 'react';\nimport Downshift from 'downshift';\nimport { arrayOf, bool, func, shape, string } from 'prop-types';\nimport Listbox from './listbox';\nimport classnames from 'classnames';\nimport ButtonIcon from '../button-icon';\nimport Icon from '../icon';\nimport Input from '../input';\nimport useScrollToItem from './useScrollToItem';\nimport useComboboxAction from './useComboboxAction';\nimport { ComboboxUtil } from '@visa/ui-utils';\n\nconst CSS_PREFIX = 'vds-combobox';\n\nconst preventRerender = (prevProps, nextProps) => JSON.stringify(prevProps) === JSON.stringify(nextProps);\n\nconst Combobox = memo(({\n  comboboxClass,\n  containerProps,\n  defaultItem,\n  comboboxAction,\n  css,\n  errorText,\n  filterFunction,\n  inputProps,\n  noMatchMessage,\n  onInputBlur,\n  onInputChange,\n  onInputFocus,\n  onSelectionChange,\n  optionsTemplate,\n  ...restProps\n}) => {\n  if (typeof filterFunction() !== 'boolean') {\n    throw new Error('Filter function must return a boolean.');\n  }\n\n  const [currentSelectItem, setCurrentSelectItem] = useState(defaultItem);\n  const inputRef = useRef(null);\n  const [inputError, setInputError] = useState(errorText);\n  const [isListboxOpen, setListboxOpen] = useState(false);\n  const [searchHasNoMatch, setSearchHasNoMatch] = useState(false);\n  const { listboxItemRef, listboxRef } = useScrollToItem(currentSelectItem, optionsTemplate);\n\n  //Reverse of Control, expose downshift internal action to parent component\n  const downshiftInternalActions = {};\n  const actionList = ['clearSelection', 'closeMenu', 'openMenu', 'selectItem', 'setHighlightedIndex'];\n  useComboboxAction(comboboxAction, downshiftInternalActions);\n\n  useEffect(() => {\n    if (errorText && errorText !== inputError) {\n      // if noMatchMessage and errorText both exist, show noMatchMessage\n      if (inputError && inputError === noMatchMessage) {\n        return;\n      }\n      setInputError(errorText);\n    } else if (!errorText && inputError && inputError !== noMatchMessage) {\n      setInputError(undefined);\n    }\n  }, [errorText, inputError, noMatchMessage]);\n  //if there is no match, show error message\n  useEffect(() => {\n    if (searchHasNoMatch && noMatchMessage) {\n      setInputError(noMatchMessage);\n    } else if (inputError && inputError === noMatchMessage) {\n      //if errorText exist, when noMatch error disappear, reset back to errorText\n      if (errorText) {\n        setInputError(errorText);\n      } else {\n        setInputError(undefined);\n      }\n    }\n    if (searchHasNoMatch) {\n      setListboxOpen(false);\n    } else {\n      setListboxOpen(true);\n    }\n  }, [errorText, inputError, noMatchMessage, searchHasNoMatch]);\n\n  //set default index\n  let defaultIndex = -1;\n  if (defaultItem && optionsTemplate && optionsTemplate.optionValues) {\n    defaultIndex = optionsTemplate.optionValues.findIndex(\n      item => item[optionsTemplate.itemKey] === defaultItem[optionsTemplate.itemKey]\n    );\n  }\n\n  const handleInputBlur = e => {\n    if (inputError && inputError === noMatchMessage) {\n      setInputError(undefined);\n    }\n    if (typeof onInputBlur === 'function') {\n      onInputBlur(e, e.target.value);\n    }\n  };\n\n  const handleInputChange = e => {\n    if (typeof onInputChange === 'function') {\n      onInputChange(e, e.target.value);\n    }\n  };\n\n  const handleInputFocus = e => {\n    if (inputRef.current) {\n      inputRef.current.setSelectionRange(0, e.target.value.length);\n    }\n    if (typeof onInputFocus === 'function') {\n      onInputFocus(e, e.target.value);\n    }\n  };\n\n  const handleSelection = selection => {\n    setCurrentSelectItem(selection ? selection : null);\n    setInputError(undefined);\n    if (typeof onSelectionChange === 'function') {\n      onSelectionChange(selection);\n    }\n  };\n\n  const handleNoMatch = noMatch => {\n    if (searchHasNoMatch !== noMatch) {\n      setSearchHasNoMatch(noMatch);\n    }\n  };\n\n  const stateReducer = (state, changes) => {\n    switch (changes.type) {\n      case Downshift.stateChangeTypes.clickButton:\n        if (state.isOpen) {\n          let newChanges = Object.assign({}, changes);\n          if (state.inputValue) {\n            if (!state.selectedItem) {\n              newChanges = Object.assign({}, newChanges, { inputValue: '' });\n            } else if (state.selectedItem && state.selectedItem.value !== state.inputValue) {\n              newChanges = Object.assign({}, newChanges, { inputValue: state.selectedItem.value });\n            }\n          } else if (!state.inputValue && state.selectedItem) {\n            newChanges = Object.assign({}, newChanges, { inputValue: state.selectedItem.value });\n          }\n          return newChanges;\n        }\n        return changes;\n      default:\n        return changes;\n    }\n  };\n\n  return (\n    <Downshift\n      defaultHighlightedIndex={defaultIndex}\n      initialInputValue={defaultItem ? defaultItem.value : ''}\n      initialSelectedItem={currentSelectItem}\n      itemToString={item => (item ? item.value : '')}\n      onChange={handleSelection}\n      stateReducer={stateReducer}\n      getA11yStatusMessage={status => (status.isOpen && status.highlightedItem ? status.highlightedItem.value : '')}\n    >\n      {({ getInputProps, getToggleButtonProps, isOpen, ...listboxDownshift }) => {\n        if (Object.keys(downshiftInternalActions).length === 0) {\n          downshiftInternalActions.setInputError = setInputError;\n          for (const action of actionList) { // eslint-disable-line\n            downshiftInternalActions[action] = listboxDownshift[action];\n          }\n        }\n        return (\n          <div\n            {...containerProps}\n            className={classnames(`${CSS_PREFIX}-container`, comboboxClass.containerClass)}\n            css={css}\n          >\n            <Input\n              {...getInputProps({\n                onBlur: handleInputBlur,\n                onChange: handleInputChange,\n                onFocus: handleInputFocus\n              })}\n              {...inputProps}\n              className={classnames(`${CSS_PREFIX}-input-wrapper`, comboboxClass.inputWrapperClass)}\n              errorText={inputError}\n              invalid={Boolean(inputError)}\n              labelId={getInputProps()['aria-labelledby']}\n              ref={inputRef}\n              showErrorText={Boolean(inputError)}\n              showHelpText={Boolean(inputProps.helpText)}\n              type=\"text\"\n            >\n              <ButtonIcon\n                ariaLabel={isOpen ? 'collapse' : 'expand'}\n                {...getToggleButtonProps({})}\n                iconType=\"light-tiny\"\n                tabIndex=\"-1\"\n              >\n                <Icon name={isOpen ? 'arrow-collapse' : 'arrow-expand'} resolution=\"low\" />\n              </ButtonIcon>\n            </Input>\n            <Listbox\n              {...listboxDownshift}\n              {...restProps}\n              filterFunction={filterFunction}\n              listboxClass={comboboxClass.listboxClass}\n              isListboxOpen={isListboxOpen}\n              listboxItemRef={li => {\n                listboxItemRef.current = li;\n              }}\n              listboxRef={ul => {\n                listboxRef.current = ul;\n              }}\n              isOpen={isOpen}\n              noMatchCallback={handleNoMatch}\n              optionsTemplate={optionsTemplate}\n            />\n          </div>\n        );\n      }}\n    </Downshift>\n  );\n}, preventRerender);\n\nCombobox.defaultProps = {\n  comboboxClass: {\n    containerClass: null,\n    inputWrapperClass: null,\n    listboxClass: null\n  },\n  errorText: '',\n  filterFunction: ComboboxUtil.filterFunction,\n  inputProps: {\n    label: 'Label',\n    name: 'combobox'\n  },\n  noMatchMessage: 'No entries matching, Please try again.'\n};\n\nCombobox.propTypes = {\n  comboboxAction: func,\n  comboboxClass: shape({\n    containerClass: string,\n    inputWrapperClass: string,\n    listboxClass: string\n  }),\n  containerProps: shape({}),\n  css: func,\n  defaultItem: shape({\n    value: string.isRequired\n  }),\n  errorText: string,\n  filterFunction: func,\n  inputProps: shape({\n    disabled: bool,\n    helpText: string,\n    label: string.isRequired,\n    name: string.isRequired,\n    placeholder: string,\n    required: bool\n  }),\n  noMatchMessage: string,\n  onInputBlur: func,\n  onInputChange: func,\n  onInputFocus: func,\n  onSelectionChange: func,\n  optionsTemplate: shape({\n    itemKey: string.isRequired,\n    optionValues: arrayOf(shape({ value: string.isRequired })),\n    renderOption: func.isRequired,\n    searchIncludeFields: arrayOf(string)\n  }).isRequired\n};\n\nCombobox.displayName = 'Combobox';\n\nexport default Combobox;\n"],"sourceRoot":""}