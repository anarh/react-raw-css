{"version":3,"sources":["components/select/example/index.js","styleguide/pages/components/select.js","components/data-table/index.js","components/sr/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/nanoid/format.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","components/input-container/index.js","components/input-label/index.js","components/input-bar/index.js","components/input-message/index.js","components/input-option/index.js","components/input-hint/index.js","components/fieldset/index.js","components/legend/index.js","components/select-group-delimiter/index.js","components/input-select-focusbox/index.js","components/input-select/index.js","components/select/index.js","components/select-group-container/index.js","components/select-group-message/index.js","components/select-group/index.js"],"names":["SelectExample","useState","value","stateOne","setStateOne","bank","card","stateTwo","setStateTwo","tag","label","errorText","invalid","onChange","e","target","showErrorText","legend","ariaLabel","placeholder","readOnly","disabled","reactDocs","require","jsParsed","replace","exampleCode","remainingProps","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","name","resolution","className","classnames","match","path","defaultProps","theme","code","language","style","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","dividerLines","size","aria-sort","role","scope","props","Object","entries","filter","doc","description","tabIndex","required","color","type","length","v","join","undefined","defaultValue","displayName","DataTable","forwardRef","ref","children","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","Boolean","propTypes","node","string","columns","arrayOf","shape","bool","data","oneOf","Sr","Tag","elementType","Tbody","Td","textAlign","Th","Thead","Tr","alphabet","previousSeed","shuffled","randomFromSeed","ORIGINAL","reset","setCharacters","_alphabet_","Error","unique","split","item","ind","arr","lastIndexOf","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","module","exports","get","characters","seed","lookup","index","build","isValid","clusterWorkerId","generate","seedValue","worker","workerId","newCharacters","_seed_","counter","previousSeconds","REDUCE_TIME","version","str","seconds","Date","now","random","format","number","done","loopCounter","pow","randomByte","crypto","window","msCrypto","getRandomValues","Uint8Array","bytes","mask","LN2","step","ceil","id","byte","RegExp","test","InputContainer","css","expanded","filled","focus","isTextarea","InputLabel","InputBar","InputMessage","ariaAtomic","show","aria-atomic","aria-live","InputOption","InputHint","Fieldset","Legend","SelectGroupDelimiter","ariaHidden","aria-hidden","InputSelectFocusbox","InputSelect","Select","caretIcon","errorIcon","helpIcon","helpText","shortid","onBlur","onFocus","showHelpText","focused","setFocused","setFilled","rId","htmlFor","aria-describedby","aria-label","aria-invalid","SelectGroupContainer","SelectGroupMessage","ariaLive","SelectGroup","useRef","current"],"mappings":"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","file":"static/js/9.1af3efb0.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Row from '../../row';\nimport Select from '../../select';\nimport SelectGroup from '../../select-group';\nimport SelectGroupDelimiter from '../../select-group-delimiter';\nimport Typography from '../../typography';\n\nconst SelectExample = () => {\n  const [stateOne, setStateOne] = useState({\n    value: ''\n  });\n\n  const [stateTwo, setStateTwo] = useState({\n    bank: '',\n    card: ''\n  });\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Select</Typography>\n          <Typography>Select takes all native React props directly, (e.g. onChange, etc)</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Select\n            label=\"Select Card\"\n          >\n            <option value=\"\" />\n            <option value=\"silver_card\">Silver Signature Card</option>\n            <option value=\"signature_card\">Visa Signature Card</option>\n            <option value=\"platinum_card\">Platinum Visa Card</option>\n            <option value=\"premium_card\">Premium Card With An Unnecessarily Long Description</option>\n          </Select>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Select with preselection</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Select\n            label=\"Select Card\"\n            value=\"signature_card\"\n          >\n            <option value=\"\" />\n            <option value=\"silver_card\">Silver Signature Card</option>\n            <option value=\"signature_card\">Visa Signature Card</option>\n            <option value=\"platinum_card\">Platinum Visa Card</option>\n            <option value=\"premium_card\">Premium Card With An Unnecessarily Long Description</option>\n          </Select>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Select with invalid state.</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Select\n            errorText=\"Invalid Card Selection\"\n            invalid={stateOne.value === ''}\n            label=\"Select Card\"\n            onChange={e => setStateOne({ value : e.target.value })}\n            showErrorText={stateOne.value === ''}\n          >\n            <option value=\"\" />\n            <option value=\"silver_card\">Silver Signature Card</option>\n            <option value=\"signature_card\">Visa Signature Card</option>\n            <option value=\"platinum_card\">Platinum Visa Card</option>\n            <option value=\"premium_card\">Premium Card With An Unnecessarily Long Description</option>\n          </Select>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Select Group with validity states</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <SelectGroup\n            invalid={stateTwo.bank === '' &&  stateTwo.card === ''}\n            legend=\"Credit Card\"\n            errorText=\"Please fill out the Credit Card info field.\"\n            showErrorText\n          >\n            <Select\n              ariaLabel=\"Bank Name\"\n              placeholder=\"Bank Name\"\n              errorText=\"Invalid Bank\"\n              invalid={stateTwo.bank === '' || (stateTwo.bank === '' &&  stateTwo.card === '')}\n              onChange={e => setStateTwo({ ...stateTwo, bank : e.target.value })}\n              showErrorText={stateTwo.bank === '' && !(stateTwo.bank === '' &&  stateTwo.card === '')}\n            >\n              <option value=\"\" />\n              <option value=\"BOA\">Bank of America</option>\n              <option value=\"CHA\">Chase</option>\n              <option value=\"WFO\">Wells Fargo</option>\n            </Select>\n            <SelectGroupDelimiter> - </SelectGroupDelimiter>\n            <Select\n              ariaLabel=\"Card Type\"\n              placeholder=\"Card Type\"\n              errorText=\"Invalid Card Type\"\n              invalid={stateTwo.card === '' || (stateTwo.bank === '' &&  stateTwo.card === '')}\n              onChange={e => setStateTwo({ ...stateTwo, card : e.target.value })}\n              showErrorText={stateTwo.card === '' && !(stateTwo.bank === '' &&  stateTwo.card === '')}\n            >\n              <option value=\"\" />\n              <option value=\"VISA\">Visa</option>\n              <option value=\"MC\">Mastercard</option>\n              <option value=\"AMEX\">American Express</option>\n              <option value=\"DIS\">Discover</option>\n            </Select>\n          </SelectGroup>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Select (ReadOnly)</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Select\n            label=\"Select Card\"\n            readOnly\n            value=\"signature_card\"\n          >\n            <option value=\"\" />\n            <option value=\"silver_card\">Silver Signature Card</option>\n            <option value=\"signature_card\">Visa Signature Card</option>\n            <option value=\"platinum_card\">Platinum Visa Card</option>\n            <option value=\"premium_card\">Premium Card With An Unnecessarily Long Description</option>\n          </Select>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Select (Disabled)</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Select\n            disabled\n            label=\"Select Card\"\n            value=\"signature_card\"\n          >\n            <option value=\"\" />\n            <option value=\"silver_card\">Silver Signature Card</option>\n            <option value=\"signature_card\">Visa Signature Card</option>\n            <option value=\"platinum_card\">Platinum Visa Card</option>\n            <option value=\"premium_card\">Premium Card With An Unnecessarily Long Description</option>\n          </Select>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default SelectExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../../components/col';\nimport DataTable from '../../../components/data-table';\nimport Icon from '../../../components/icon';\nimport Grid from '../../../components/grid';\nimport Row from '../../../components/row';\nimport Sr from '../../../components/sr';\nimport Tab from '../../../components/tab';\nimport TabList from '../../../components/tab-list';\nimport Tbody from '../../../components/tbody';\nimport Td from '../../../components/td';\nimport Th from '../../../components/th';\nimport Thead from '../../../components/thead';\nimport Tr from '../../../components/tr';\nimport Typography from '../../../components/typography';\n\nimport Example from '../../../components/select/example';\n\nconst reactDocs = require('react-docgen');\nconst js = raw('../../../components/select/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../../components/select/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst SelectExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Select\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Select</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/select`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Select Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/select/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />Code for Select Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/select/code`,\n              'vds-state--show': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/select/code`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/select/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/select/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <Sr tag=\"caption\">Props</Sr>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {doc[1].type.value.length ? doc[1].type.value.map(v => v.value || v.name).join(', ') : undefined}\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nSelectExample.displayName = 'SelectExample';\n\nexport default SelectExample;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-sr';\n\nconst Sr = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nSr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nSr.defaultProps = {\n  tag: 'span'\n};\n\nSr.displayName = 'Sr';\n\nexport default Sr;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\nvar shuffled;\n\nfunction reset() {\n  shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n  if (!_alphabet_) {\n    if (alphabet !== ORIGINAL) {\n      alphabet = ORIGINAL;\n      reset();\n    }\n\n    return;\n  }\n\n  if (_alphabet_ === alphabet) {\n    return;\n  }\n\n  if (_alphabet_.length !== ORIGINAL.length) {\n    throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n  }\n\n  var unique = _alphabet_.split('').filter(function (item, ind, arr) {\n    return ind !== arr.lastIndexOf(item);\n  });\n\n  if (unique.length) {\n    throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n  }\n\n  alphabet = _alphabet_;\n  reset();\n}\n\nfunction characters(_alphabet_) {\n  setCharacters(_alphabet_);\n  return alphabet;\n}\n\nfunction setSeed(seed) {\n  randomFromSeed.seed(seed);\n\n  if (previousSeed !== seed) {\n    reset();\n    previousSeed = seed;\n  }\n}\n\nfunction shuffle() {\n  if (!alphabet) {\n    setCharacters(ORIGINAL);\n  }\n\n  var sourceArray = alphabet.split('');\n  var targetArray = [];\n  var r = randomFromSeed.nextValue();\n  var characterIndex;\n\n  while (sourceArray.length > 0) {\n    r = randomFromSeed.nextValue();\n    characterIndex = Math.floor(r * sourceArray.length);\n    targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n  }\n\n  return targetArray.join('');\n}\n\nfunction getShuffled() {\n  if (shuffled) {\n    return shuffled;\n  }\n\n  shuffled = shuffle();\n  return shuffled;\n}\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\n\n\nfunction lookup(index) {\n  var alphabetShuffled = getShuffled();\n  return alphabetShuffled[index];\n}\n\nfunction get() {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n  get: get,\n  characters: characters,\n  seed: setSeed,\n  lookup: lookup,\n  shuffled: getShuffled\n};","'use strict';\n\nmodule.exports = require('./lib/index');","'use strict';\n\nvar alphabet = require('./alphabet');\n\nvar build = require('./build');\n\nvar isValid = require('./is-valid'); // if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\n\n\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\n\nfunction seed(seedValue) {\n  alphabet.seed(seedValue);\n  return module.exports;\n}\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\n\n\nfunction worker(workerId) {\n  clusterWorkerId = workerId;\n  return module.exports;\n}\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\n\n\nfunction characters(newCharacters) {\n  if (newCharacters !== undefined) {\n    alphabet.characters(newCharacters);\n  }\n\n  return alphabet.shuffled();\n}\n/**\n * Generate unique id\n * Returns string id\n */\n\n\nfunction generate() {\n  return build(clusterWorkerId);\n} // Export all other functions as properties of the generate function\n\n\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;","'use strict'; // Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\n\nfunction getNextValue() {\n  seed = (seed * 9301 + 49297) % 233280;\n  return seed / 233280.0;\n}\n\nfunction setSeed(_seed_) {\n  seed = _seed_;\n}\n\nmodule.exports = {\n  nextValue: getNextValue,\n  seed: setSeed\n};","'use strict';\n\nvar generate = require('./generate');\n\nvar alphabet = require('./alphabet'); // Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\n\n\nvar REDUCE_TIME = 1567752802062; // don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\n\nvar version = 7; // Counter is used when shortid is called multiple times in one second.\n\nvar counter; // Remember the last time shortid was called in case counter is needed.\n\nvar previousSeconds;\n/**\n * Generate unique id\n * Returns string id\n */\n\nfunction build(clusterWorkerId) {\n  var str = '';\n  var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n  if (seconds === previousSeconds) {\n    counter++;\n  } else {\n    counter = 0;\n    previousSeconds = seconds;\n  }\n\n  str = str + generate(version);\n  str = str + generate(clusterWorkerId);\n\n  if (counter > 0) {\n    str = str + generate(counter);\n  }\n\n  str = str + generate(seconds);\n  return str;\n}\n\nmodule.exports = build;","'use strict';\n\nvar alphabet = require('./alphabet');\n\nvar random = require('./random/random-byte');\n\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n  var loopCounter = 0;\n  var done;\n  var str = '';\n\n  while (!done) {\n    str = str + format(random, alphabet.get(), 1);\n    done = number < Math.pow(16, loopCounter + 1);\n    loopCounter++;\n  }\n\n  return str;\n}\n\nmodule.exports = generate;","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n  randomByte = function randomByte(size) {\n    var bytes = [];\n\n    for (var i = 0; i < size; i++) {\n      bytes.push(Math.floor(Math.random() * 256));\n    }\n\n    return bytes;\n  };\n} else {\n  randomByte = function randomByte(size) {\n    return crypto.getRandomValues(new Uint8Array(size));\n  };\n}\n\nmodule.exports = randomByte;","/**\n * Secure random string generator with custom alphabet.\n *\n * Alphabet must contain 256 symbols or less. Otherwise, the generator\n * will not be secure.\n *\n * @param {generator} random The random bytes generator.\n * @param {string} alphabet Symbols to be used in new random string.\n * @param {size} size The number of symbols in new random string.\n *\n * @return {string} Random string.\n *\n * @example\n * const format = require('nanoid/format')\n *\n * function random (size) {\n *   const result = []\n *   for (let i = 0; i < size; i++) {\n *     result.push(randomByte())\n *   }\n *   return result\n * }\n *\n * format(random, \"abcdef\", 5) //=> \"fbaef\"\n *\n * @name format\n * @function\n */\nmodule.exports = function (random, alphabet, size) {\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1;\n  var step = Math.ceil(1.6 * mask * size / alphabet.length);\n  size = +size;\n  var id = '';\n\n  while (true) {\n    var bytes = random(step);\n\n    for (var i = 0; i < step; i++) {\n      var byte = bytes[i] & mask;\n\n      if (alphabet[byte]) {\n        id += alphabet[byte];\n        if (id.length === size) return id;\n      }\n    }\n  }\n};\n/**\n * @callback generator\n * @param {number} bytes The number of bytes to generate.\n * @return {number[]} Random bytes.\n */","'use strict';\n\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n  if (!id || typeof id !== 'string' || id.length < 6) {\n    return false;\n  }\n\n  var nonAlphabetic = new RegExp('[^' + alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') + ']');\n  return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;","'use strict';\n\nmodule.exports = 0;","import React from 'react';\nimport { bool, func, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input';\nconst CSS_STATE = 'vds-state';\n\nconst InputContainer = ({\n  children,\n  className,\n  css,\n  disabled,\n  expanded,\n  filled,\n  focus,\n  invalid,\n  isTextarea,\n  readOnly,\n  ...remainingProps\n}) => (\n  <div\n    className={classnames({\n      [`${CSS_PREFIX}`]: !isTextarea,\n      [`${CSS_PREFIX}-textarea-container`]: Boolean(isTextarea),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled),\n      [`${CSS_STATE}--error`]: Boolean(invalid),\n      [`${CSS_STATE}--expanded`]: Boolean(expanded),\n      [`${CSS_STATE}--filled`]: Boolean(filled),\n      [`${CSS_STATE}--focus`]: Boolean(focus),\n      [`${CSS_STATE}--readonly`]: Boolean(readOnly),\n      [`${CSS_STATE}--success`]: typeof invalid === 'boolean' && !invalid\n    }, className)}\n    css={css}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputContainer.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Filled\n   */\n  filled: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * isTextarea\n   */\n  isTextarea: bool,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool\n};\n\nInputContainer.displayName = 'InputContainer';\n\nexport default InputContainer;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-label';\n\nconst InputLabel = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <label\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </label>\n));\n\nInputLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputLabel.displayName = 'InputLabel';\n\nexport default InputLabel;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-bar';\n\nconst InputBar = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputBar.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputBar.displayName = 'InputBar';\n\nexport default InputBar;\n","import React from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-message';\nconst CSS_STATE = 'vds-state';\n\nconst InputMessage = ({\n  ariaAtomic,\n  children,\n  className,\n  invalid,\n  role,\n  show,\n  ...remainingProps\n}) => (\n  <span\n    aria-atomic={ariaAtomic}\n    aria-live={invalid ? 'assertive' : 'polite'}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--hidden`]: !show,\n      [`${CSS_STATE}--error`]: Boolean(invalid)\n    }, className)}\n    role={role}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputMessage.propTypes = {\n  /**\n   * Aria Atomic\n   */\n  ariaAtomic: oneOf(['true', 'false']),\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Role\n   */\n  role: string,\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\nInputMessage.defaultProps = {\n  ariaAtomic: 'true',\n  role: 'alert'\n};\n\nInputMessage.displayName = 'InputMessage';\n\nexport default InputMessage;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-option';\n\nconst InputOption = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputOption.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputOption.displayName = 'InputOption';\n\nexport default InputOption;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-hint';\n\nconst InputHint = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputHint.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputHint.displayName = 'InputHint';\n\nexport default InputHint;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-fieldset';\n\nconst Fieldset = ({ children, className, ...remainingProps }) => (\n  <fieldset\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </fieldset>\n);\n\nFieldset.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nFieldset.displayName = 'Fieldset';\n\nexport default Fieldset;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-legend';\n\nconst Legend = ({ children, className, ...remainingProps }) => (\n  <legend\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </legend>\n);\n\nLegend.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nLegend.displayName = 'Legend';\n\nexport default Legend;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-select-group-delimiter';\n\nconst SelectGroupDelimiter = ({ ariaHidden, children, className, ...remainingProps }) => (\n  <span\n    aria-hidden={ariaHidden}\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nSelectGroupDelimiter.propTypes = {\n  /**\n   * Aria hidden\n   */\n  ariaHidden: string,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nSelectGroupDelimiter.defaultProps = {\n  ariaHidden: 'true'\n};\n\nSelectGroupDelimiter.displayName = 'SelectGroupDelimiter';\n\nexport default SelectGroupDelimiter;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input--select-focusbox';\n\nconst InputSelectFocusbox = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputSelectFocusbox.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputSelectFocusbox.displayName = 'InputSelectFocusbox';\n\nexport default InputSelectFocusbox;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input--select';\n\nconst InputSelect = forwardRef(({\n  children,\n  className,\n  ...remainingProps\n}, ref) => (\n  <select\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </select>\n));\n\nInputSelect.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputSelect.displayName = 'InputSelect';\n\nexport default InputSelect;\n","import React, { forwardRef, Fragment, useEffect, useState } from 'react';\nimport { bool, func, node, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport InputContainer from '../input-container';\nimport InputLabel from '../input-label';\nimport InputBar from '../input-bar';\nimport InputSelectFocusbox from '../input-select-focusbox';\nimport InputMessage from '../input-message';\nimport InputSelect from '../input-select';\nimport InputOption from '../input-option';\nimport InputHint from '../input-hint';\nimport Icon from '../icon';\n\nconst Select = forwardRef(({\n  ariaLabel,\n  caretIcon,\n  children,\n  className,\n  css,\n  disabled,\n  errorIcon,\n  errorText,\n  helpIcon,\n  helpText,\n  id = shortid.generate(),\n  invalid,\n  label,\n  onBlur,\n  onChange,\n  onFocus,\n  placeholder,\n  readOnly,\n  showErrorText,\n  showHelpText,\n  ...remainingProps\n}, ref) => {\n  const [focused, setFocused] = useState();\n  const [filled, setFilled] = useState(Boolean(remainingProps.value) || Boolean(remainingProps.defaultValue));\n  const [rId] = useState(id);\n\n  useEffect(() => {\n    setFilled(Boolean(remainingProps.defaultValue) || Boolean(remainingProps.value));\n  }, [remainingProps.defaultValue, remainingProps.value]);\n\n  const handleBlur = e => {\n    setFocused(false);\n    if (typeof onBlur === 'function') {\n      onBlur(e);\n    }\n  };\n\n  const handleChange = e => {\n    setFilled(e.target.value !== '');\n    if (typeof onChange === 'function') {\n      onChange(e);\n    }\n  };\n\n  const handleFocus = e => {\n    setFocused(true);\n    if (typeof onFocus === 'function') {\n      onFocus(e);\n    }\n  };\n\n  return (\n    <InputContainer\n      className={classnames(className)}\n      css={css}\n      disabled={disabled}\n      filled={filled}\n      focus={focused}\n      readOnly={readOnly}\n      invalid={invalid}\n    >\n      {label ? <InputLabel htmlFor={rId}>{label}</InputLabel> : undefined}\n      <InputBar>\n        { placeholder ? <InputHint>{placeholder}</InputHint> : undefined}\n        <InputSelect\n          aria-describedby={\n            showErrorText || showHelpText\n              ? `input-message-${rId}`\n              : undefined\n          }\n          aria-label={label ? undefined : ariaLabel}\n          aria-invalid={invalid}\n          id={rId}\n          disabled={disabled}\n          onBlur={handleBlur}\n          onChange={handleChange}\n          onFocus={handleFocus}\n          readOnly={readOnly}\n          ref={ref}\n          {...remainingProps}\n        >\n          {children}\n        </InputSelect>\n        <InputOption>{caretIcon}</InputOption>\n      </InputBar>\n      <InputSelectFocusbox />\n      <InputMessage\n        id={`input-message-${rId}`}\n        show={(showHelpText && Boolean(helpText)) || (showErrorText && Boolean(errorText))}\n        invalid={invalid}\n      >\n        {\n          !invalid && focused && showHelpText && Boolean(helpText)\n            ? <Fragment>{helpIcon} {helpText}</Fragment>\n            : undefined\n        }\n        {\n          invalid === true && showErrorText && Boolean(errorText)\n            ? <Fragment>{errorIcon} {errorText}</Fragment>\n            : undefined\n        }\n      </InputMessage>\n    </InputContainer>\n  );\n});\n\nSelect.propTypes = {\n  /**\n   * Aria Label\n   */\n  ariaLabel: string,\n\n  /**\n   * Input Caret Icon\n   */\n  caretIcon: node,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Input Message Icon\n   */\n  errorIcon: node,\n\n  /**\n   * Error Text\n   */\n  errorText: node,\n\n  /**\n   * Input Help Message Icon\n   */\n  helpIcon: node,\n\n  /**\n   * Input Help Message\n   */\n  helpText: node,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Label\n   */\n  label: node,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * On Change\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /**\n   * Hint\n   */\n  placeholder: node,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool,\n\n  /**\n   * Show Error Message\n   */\n  showErrorText: bool,\n\n  /**\n   * Show Help Message\n   */\n  showHelpText: bool,\n\n  /**\n   * Value\n   */\n  value: string\n};\n\nSelect.defaultProps = {\n  caretIcon: <Icon name=\"arrow-expand\" resolution=\"tiny\" />,\n  errorIcon: <Icon name=\"error\" resolution=\"low\" />\n};\n\nSelect.displayName = 'Select';\n\nexport default Select;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-select-group-container';\n\nconst SelectGroupContainer = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nSelectGroupContainer.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nSelectGroupContainer.displayName = 'SelectGroupContainer';\n\nexport default SelectGroupContainer;\n","import React from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-select-group-message';\nconst CSS_STATE = 'vds-state';\n\nconst SelectGroupMessage = ({\n  ariaAtomic,\n  ariaLive,\n  children,\n  className,\n  invalid,\n  role,\n  show,\n  ...remainingProps\n}) => (\n  <span\n    aria-atomic={ariaAtomic}\n    aria-live={ariaLive}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--hidden`]: !show,\n      [`${CSS_STATE}--error`]: Boolean(invalid)\n    }, className)}\n    role={role}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nSelectGroupMessage.propTypes = {\n  /**\n   * Aria Atomic\n   */\n  ariaAtomic: oneOf(['true', 'false']),\n\n  /**\n   * Aria Live\n   */\n  ariaLive: oneOf(['assertive', 'polite', 'off']),\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Role\n   */\n  role: string,\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\nSelectGroupMessage.defaultProps = {\n  ariaAtomic: 'true',\n  ariaLive: 'assertive',\n  role: 'alert'\n};\n\nSelectGroupMessage.displayName = 'SelectGroupMessage';\n\nexport default SelectGroupMessage;\n","import React, { Fragment, useRef } from 'react';\nimport { bool, node, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport Fieldset from '../fieldset';\nimport Legend from '../legend';\nimport SelectGroupContainer from '../select-group-container';\nimport SelectGroupMessage from '../select-group-message';\nimport Icon from '../icon';\nimport shortid from 'shortid';\n\nconst CSS_PREFIX = 'vds-select-group';\nconst CSS_STATE = 'vds-state';\n\nconst SelectGroup = ({\n  children,\n  className,\n  id = shortid.generate(),\n  disabled,\n  errorIcon,\n  errorText,\n  helpIcon,\n  helpText,\n  invalid,\n  legend,\n  showErrorText,\n  showHelpText,\n  ...remainingProps\n}) => {\n  const rId = useRef(id);\n  return (\n    <div\n      aria-describedby={showErrorText || showHelpText ? `select-group-message-${rId.current}` : undefined}\n      className={classnames(\n        CSS_PREFIX,\n        {\n          [`${CSS_STATE}--disabled`]: Boolean(disabled),\n          [`${CSS_STATE}--error`]: Boolean(invalid)\n        },\n        className\n      )}\n      {...remainingProps}\n    >\n      <Fieldset>\n        <Legend>{legend}</Legend>\n        <SelectGroupContainer>\n          {children}\n          <SelectGroupMessage\n            id={`select-group-message-${rId.current}`}\n            show={(showHelpText && Boolean(helpText)) || (showErrorText && Boolean(errorText))}\n            invalid={invalid}\n          >\n            {!invalid && showHelpText && Boolean(helpText) ? (\n              <Fragment>\n                {helpIcon} {helpText}\n              </Fragment>\n            ) : (\n              undefined\n            )}\n            {invalid && showErrorText && Boolean(errorText) ? (\n              <Fragment>\n                {errorIcon} {errorText}\n              </Fragment>\n            ) : (\n              undefined\n            )}\n          </SelectGroupMessage>\n        </SelectGroupContainer>\n      </Fieldset>\n    </div>\n  );\n};\n\nSelectGroup.propTypes = {\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Input Message Icon\n   */\n  errorIcon: node,\n\n  /**\n   * Error Text\n   */\n  errorText: node,\n\n  /**\n   * Input Help Message Icon\n   */\n  helpIcon: node,\n\n  /**\n   * Input Help Message\n   */\n  helpText: node,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Legend\n   */\n  legend: node,\n\n  /**\n   * Select Group Message\n   */\n  selectGroupMessage: node,\n\n  /**\n   * Select Group Message Icon\n   */\n  selectGroupMessageIcon: node,\n\n  /**\n   * Show Error Message\n   */\n  showErrorText: bool,\n\n  /**\n   * Show Help Message\n   */\n  showHelpText: bool\n};\n\nSelectGroup.defaultProps = {\n  errorIcon: <Icon name=\"error\" resolution=\"low\" />\n};\n\nSelectGroup.displayName = 'SelectGroup';\n\nexport default SelectGroup;\n"],"sourceRoot":""}