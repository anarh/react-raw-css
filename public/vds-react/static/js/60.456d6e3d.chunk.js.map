{"version":3,"sources":["components/slider-label/index.js","components/slider-handle/index.js","components/slider/index.js","components/slider/example/index.js","styleguide/pages/components/slider.js","components/data-table/index.js","components/sr/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js"],"names":["SliderLabel","children","className","remainingProps","classnames","displayName","Handle","RCSlider","SliderHandle","dragging","index","value","key","overlay","placement","prefixCls","visible","aria-label","Slider","defaultValue","disabled","label","max","min","onAfterChange","onBeforeChange","onChange","step","tabIndex","width","handle","handleStyle","height","marginLeft","position","top","railStyle","trackStyle","background","borderRadiusLeft","defaultProps","SliderExample","tag","style","backgroundColor","borderRadius","reactDocs","require","jsParsed","replace","exampleCode","useState","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","name","resolution","match","path","theme","code","language","tokens","getLineProps","getTokenProps","map","line","i","display","opacity","userSelect","token","dividerLines","size","aria-sort","role","scope","props","Object","entries","filter","doc","description","required","color","type","length","v","join","undefined","DataTable","forwardRef","ref","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","Boolean","propTypes","node","string","columns","arrayOf","shape","bool","data","oneOf","Sr","Tag","elementType","Tbody","Td","textAlign","Th","Thead","Tr"],"mappings":"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","file":"static/js/60.456d6e3d.chunk.js","sourcesContent":["import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-slider-label';\n\nconst SliderLabel = ({ children, className, ...remainingProps }) => (\n  <label\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </label>\n);\n\nSliderLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nSliderLabel.displayName = 'SliderLabel';\n\nexport default SliderLabel;\n","import React from 'react';\nimport { bool, number, string } from 'prop-types';\nimport classnames from 'classnames';\nimport Tooltip from 'rc-tooltip';\nimport RCSlider from 'rc-slider';\n\nconst CSS_PREFIX = 'vds-slider';\nconst CSS_STATE = 'vds-state';\n\nconst Handle = RCSlider.Handle;\n// eslint-disable-next-line\nconst SliderHandle = ({\n  dragging,\n  index,\n  value,\n  ...remainingProps\n}) => (\n  <Tooltip\n    key={index}\n    overlay={<span>{value}</span>}\n    placement=\"top\"\n    prefixCls={`${CSS_PREFIX}-value`}\n    visible\n  >\n    <Handle\n      {...remainingProps}\n      aria-label=\"slider handle\"\n      className={classnames(`${CSS_PREFIX}-node`, {\n        [`${CSS_STATE}--active`]: dragging\n      })}\n      value={value}\n\n    />\n  </Tooltip>\n);\n\nSliderHandle.propTypes = {\n  /**\n   * Dragging\n   */\n  dragging: bool,\n\n  /**\n   * Index\n   */\n  index: number,\n\n  /**\n   * Value\n   */\n  value: string\n};\n\nSliderHandle.displayName = 'SliderHandle';\n\nexport default SliderHandle;\n","import React, { Fragment } from 'react';\nimport { bool, func, node, number, string } from 'prop-types';\nimport classnames from 'classnames';\nimport RCSlider from 'rc-slider';\nimport SliderLabel from '../slider-label';\nimport SliderHandle from '../slider-handle';\n\nconst CSS_PREFIX = 'vds-slider';\n\nconst Slider = ({\n  className,\n  defaultValue,\n  disabled,\n  label,\n  max,\n  min,\n  onAfterChange,\n  onBeforeChange,\n  onChange,\n  step,\n  tabIndex,\n  width,\n  ...remainingProps\n}) => (\n  <Fragment>\n    <SliderLabel>{label}</SliderLabel>\n    <RCSlider\n      className={classnames(CSS_PREFIX, className)}\n      defaultValue={defaultValue}\n      disabled={disabled}\n      max={max}\n      min={min}\n      onAfterChange={onAfterChange}\n      onBeforeChange={onBeforeChange}\n      onChange={onChange}\n      step={step}\n      tabIndex={tabIndex}\n      handle={SliderHandle}\n      handleStyle={{\n        height: '20px',\n        marginLeft: '-12px',\n        position: 'absolute',\n        top: '-8px',\n        width: '20px'\n      }}\n      railStyle={{ width }}\n      trackStyle={{\n        background: '#003ea9',\n        borderRadiusLeft: '4px',\n        height: '8px'\n      }}\n      {...remainingProps}\n    />\n  </Fragment>\n);\n\nSlider.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Default Value\n   */\n  defaultValue: number,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Label\n   */\n  label: node,\n\n  /**\n   * Max\n   */\n  max: number,\n\n  /**\n   * Min\n   */\n  min: number,\n\n  /**\n   * On after change\n   */\n  onAfterChange: func,\n\n  /**\n   * On before change\n   */\n  onBeforeChange: func,\n\n  /**\n   * On Change\n   */\n  onChange: func,\n\n  /**\n   * Step\n   */\n\n  step: number,\n\n  /**\n   * Tab Index\n   */\n  tabIndex: number,\n\n  /**\n   * Width\n   */\n  width: string\n};\n\nSlider.defaultProps = {\n  defaultValue: 0,\n  max: 100,\n  min: 0,\n  tabIndex: 0,\n  width: '280px'\n};\n\nSlider.displayName = 'Slider';\n\nexport default Slider;\n","import React from 'react';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Row from '../../row';\nimport Slider from '../../slider';\nimport Typography from '../../typography';\n\nconst SliderExample = () => (\n  <Grid>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Slider</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Slider label=\"Slider control\" />\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Slider (custom style)</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Slider\n          style={{\n            backgroundColor: '#000'\n          }}\n          trackStyle={{\n            background: 'white',\n            borderRadius: '4px',\n            height: '8px'\n          }}\n          label=\"Slider control\"\n        />\n      </Col>\n    </Row>\n  </Grid>\n);\n\nexport default SliderExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../../components/col';\nimport DataTable from '../../../components/data-table';\nimport Icon from '../../../components/icon';\nimport Grid from '../../../components/grid';\nimport Row from '../../../components/row';\nimport Sr from '../../../components/sr';\nimport Tab from '../../../components/tab';\nimport TabList from '../../../components/tab-list';\nimport Tbody from '../../../components/tbody';\nimport Td from '../../../components/td';\nimport Th from '../../../components/th';\nimport Thead from '../../../components/thead';\nimport Tr from '../../../components/tr';\nimport Typography from '../../../components/typography';\n\nimport Example from '../../../components/slider/example';\n\nconst reactDocs = require('react-docgen');\nconst js = raw('../../../components/slider/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../../components/slider/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst SliderExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Slider\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Slider</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/slider`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Slider Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/slider/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />Code for Slider Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/slider/code`,\n              'vds-state--show': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/slider/code`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/slider/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/slider/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <Sr tag=\"caption\">Props</Sr>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {doc[1].type.value.length ? doc[1].type.value.map(v => v.value || v.name).join(', ') : undefined}\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nSliderExample.displayName = 'SliderExample';\n\nexport default SliderExample;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-sr';\n\nconst Sr = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nSr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nSr.defaultProps = {\n  tag: 'span'\n};\n\nSr.displayName = 'Sr';\n\nexport default Sr;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n"],"sourceRoot":""}