{"version":3,"sources":["components/navmenu/example/index.js","styleguide/pages/components/navmenu.js","components/data-table/index.js","components/sr/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/listbox/index.js","components/listbox-item/index.js","components/menu/index.js","components/listbox-item-container/index.js","components/menu-curtain/index.js","components/navmenu/index.js"],"names":["NavmenuExample","tag","id","menu","href","disabled","placement","flippable","name","resolution","reactDocs","require","jsParsed","replace","exampleCode","remainingProps","useState","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","className","classnames","match","path","defaultProps","theme","code","language","style","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","dividerLines","size","aria-sort","role","scope","props","Object","entries","filter","doc","description","tabIndex","required","color","type","value","length","v","join","undefined","defaultValue","displayName","DataTable","forwardRef","ref","children","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","Boolean","propTypes","node","string","columns","arrayOf","shape","bool","data","oneOf","Sr","Tag","elementType","Tbody","Td","textAlign","Th","Thead","Tr","Listbox","multiselect","ListboxItem","active","focus","listItemValue","selected","data-list-item-value","Menu","position","show","ListboxItemContainer","cloneElement","innerRef","element","MenuCurtain","keyCode","DOWN","END","ESC","HOME","PAGEDOWN","PAGEUP","RETURN","SPACE","TAB","UP","getCharFilterIndex","char","count","focusableItems","start","textContent","trim","toLowerCase","substring","Navmenu","shortid","generate","modifiers","open","setOpen","focusedIndex","setFocusedIndex","setFocusableItems","disabledFocusReturn","setDisabledFocusReturn","rId","listboxRef","useRef","buttonRef","current","querySelectorAll","handleClick","e","isButton","target","tagName","isLink","preventDefault","handleKeyDown","str","charCode","currentTarget","isListBox","focusId","ENTER","ctrlKey","altKey","metaKey","onClick","onKeyDown","Children","child","k","c","offset","enabled"],"mappings":"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","file":"static/js/31.cdc84b58.chunk.js","sourcesContent":["import React from 'react';\nimport ButtonAction from '../../button-action';\nimport ButtonLabel from '../../button-label';\nimport ButtonSplit from '../../button-split';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Icon from '../../icon';\nimport Listbox from '../../listbox';\nimport ListboxItem from '../../listbox-item';\nimport ListboxItemContainer from '../../listbox-item-container';\nimport Navmenu from '../../navmenu';\nimport Row from '../../row';\nimport Typography from '../../typography';\n\nconst NavmenuExample = () => (\n  <Grid>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Navmenu</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Navmenu\n          id=\"test\"\n          menu={\n            <Listbox>\n              <ListboxItem>\n                <ListboxItemContainer>\n                  <a href=\"./\">Link One</a>\n                </ListboxItemContainer>\n              </ListboxItem>\n              <ListboxItem>\n                <ListboxItemContainer>\n                  <a href=\"./\">Sign-out</a>\n                </ListboxItemContainer>\n              </ListboxItem>\n              <ListboxItem>\n                <ListboxItemContainer>\n                  <a href=\"./\">Apply</a>\n                </ListboxItemContainer>\n              </ListboxItem>\n              <ListboxItem>\n                <ListboxItemContainer disabled>\n                  <a href=\"./\">Disabled Link</a>\n                </ListboxItemContainer>\n              </ListboxItem>\n              <ListboxItem>\n                <ListboxItemContainer>\n                  <a href=\"./\">Settings</a>\n                </ListboxItemContainer>\n              </ListboxItem>\n              <ListboxItem>\n                <ListboxItemContainer>\n                  <a href=\"./\">Organic</a>\n                </ListboxItemContainer>\n              </ListboxItem>\n              <ListboxItem>\n                <ListboxItemContainer>\n                  <a href=\"./\">Disabled link</a>\n                </ListboxItemContainer>\n              </ListboxItem>\n              <ListboxItem>\n                <ListboxItemContainer>\n                  <a href=\"./\">Last link</a>\n                </ListboxItemContainer>\n              </ListboxItem>\n            </Listbox>\n          }\n          placement=\"bottom-start\"\n        >\n          <ButtonSplit flippable>\n            <ButtonLabel>Go to</ButtonLabel>\n            <ButtonAction>\n              <Icon name=\"arrow-expand\" resolution=\"tiny\" />\n            </ButtonAction>\n          </ButtonSplit>\n        </Navmenu>\n      </Col>\n    </Row>\n  </Grid>\n);\n\nexport default NavmenuExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../../components/col';\nimport DataTable from '../../../components/data-table';\nimport Icon from '../../../components/icon';\nimport Grid from '../../../components/grid';\nimport Row from '../../../components/row';\nimport Sr from '../../../components/sr';\nimport Tab from '../../../components/tab';\nimport TabList from '../../../components/tab-list';\nimport Tbody from '../../../components/tbody';\nimport Td from '../../../components/td';\nimport Th from '../../../components/th';\nimport Thead from '../../../components/thead';\nimport Tr from '../../../components/tr';\nimport Typography from '../../../components/typography';\n\nimport Example from '../../../components/navmenu/example';\n\nconst reactDocs = require('react-docgen');\nconst js = raw('../../../components/navmenu/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../../components/navmenu/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst NavmenuExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Navmenu\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Navmenu</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/navmenu`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Navmenu Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/navmenu/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />Code for Navmenu Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/navmenu/code`,\n              'vds-state--show': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/navmenu/code`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/navmenu/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/navmenu/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <Sr tag=\"caption\">Props</Sr>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {doc[1].type.value.length ? doc[1].type.value.map(v => v.value || v.name).join(', ') : undefined}\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nNavmenuExample.displayName = 'NavmenuExample';\n\nexport default NavmenuExample;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-sr';\n\nconst Sr = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nSr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nSr.defaultProps = {\n  tag: 'span'\n};\n\nSr.displayName = 'Sr';\n\nexport default Sr;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React, { forwardRef } from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-listbox';\n\nconst Listbox = forwardRef(({\n  children,\n  className,\n  multiselect,\n  role,\n  ...remainingProps\n}, ref) => (\n  <ul\n    className={classnames(CSS_PREFIX, {\n      'vds-select--multi': Boolean(multiselect)\n    }, className)}\n    ref={ref}\n    role={role}\n    {...remainingProps}\n  >\n    {children}\n  </ul>\n));\n\nListbox.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Multi select\n   */\n  multiselect: bool,\n\n  /**\n   * Role\n   */\n  role: string\n};\n\nListbox.defaultProps = {\n  role: 'listbox'\n};\n\nListbox.displayName = 'Listbox';\n\nexport default Listbox;\n","import React, { forwardRef } from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-listbox-item';\nconst CSS_STATE = 'vds-state';\n\nconst ListboxItem = forwardRef(({\n  active,\n  children,\n  className,\n  disabled,\n  focus,\n  listItemValue,\n  role,\n  selected,\n  ...remainingProps\n}, ref) => (\n  <li\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled),\n      [`${CSS_STATE}--focus`]: Boolean(focus),\n      [`${CSS_STATE}--selected`]: Boolean(selected)\n    }, className)}\n    data-list-item-value={listItemValue}\n    ref={ref}\n    role={role}\n    {...remainingProps}\n  >\n    {children}\n  </li>\n));\n\nListboxItem.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * List item value\n   */\n  listItemValue: string,\n\n  /**\n   * Role\n   */\n  role: string,\n\n  /**\n   * Selected\n   */\n  selected: bool\n};\n\nListboxItem.defaultProps = {\n  role: 'option'\n};\n\nListboxItem.displayName = 'ListboxItem';\n\nexport default ListboxItem;\n","import React, { forwardRef } from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-menu';\n\nconst Menu = forwardRef(({\n  children,\n  className,\n  position,\n  show,\n  ...remainingProps\n}, ref) => (\n  <div\n    className={classnames({\n      [`${CSS_PREFIX}`]: !position,\n      [`${CSS_PREFIX}--${position}`]: Boolean(position),\n      [`${CSS_PREFIX}--show`]: Boolean(show)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nMenu.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Position\n   */\n  position: oneOf(['absolute', 'fixed']),\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\nMenu.displayName = 'Menu';\n\nexport default Menu;\n","import React, { cloneElement, forwardRef } from 'react';\nimport { bool, element, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-listbox-item-container';\nconst CSS_STATE = 'vds-state';\n\nconst ListboxItemContainer = forwardRef(({\n  children,\n  className,\n  disabled,\n  ...remainingProps\n}, ref) => (\n  cloneElement(children, {\n    className: classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className),\n    ref: (children.type === 'a' || children.type === 'button') ? ref : undefined, // TODO: change to just ref after publish of https://github.com/ReactTraining/react-router/pull/6914\n    ...(children.type === 'a' || children.type === 'button') ? undefined : { innerRef: ref }, // TODO: Delete after publish of https://github.com/ReactTraining/react-router/pull/6914\n    ...remainingProps\n  })\n));\n\nListboxItemContainer.propTypes = {\n  /**\n   * @ignore\n   */\n  children: element,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool\n};\n\nListboxItemContainer.displayName = 'ListboxItemContainer';\n\nexport default ListboxItemContainer;\n","import React, { forwardRef } from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-menu';\n\nconst MenuCurtain = forwardRef(({\n  children,\n  className,\n  show,\n  ...remainingProps\n}, ref) => (\n  <div\n    className={classnames(`${CSS_PREFIX}-curtain`, {\n      [`${CSS_PREFIX}--show`]: Boolean(show)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nMenuCurtain.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\nMenuCurtain.displayName = 'MenuCurtain';\n\nexport default MenuCurtain;\n","import React, { Children, cloneElement, useEffect, useRef, useState } from 'react';\nimport { element, number, oneOf, oneOfType, shape, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport { Manager, Reference, Popper } from 'react-popper';\nimport MenuCurtain from '../menu-curtain';\nimport Menu from '../menu';\n\nconst CSS_PREFIX = 'vds-navmenu';\n\nconst keyCode = {\n  DOWN: 40,\n  END: 35,\n  ESC: 27,\n  HOME: 36,\n  PAGEDOWN: 34,\n  PAGEUP: 33,\n  RETURN: 13,\n  SPACE: 32,\n  TAB: 9,\n  UP: 38\n};\n\nconst isPrintableCharacter = str => str.length === 1 && str.match(/\\S/);\nconst getCharFilterIndex = ({\n  char,\n  count,\n  focusableItems,\n  start\n}) => {\n  for (let i = start; i < count; i++) {\n    if (char === focusableItems[i].textContent.trim().toLowerCase().substring(0, 1)) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nconst Navmenu = ({\n  children,\n  className,\n  id = shortid.generate(),\n  menu,\n  modifiers,\n  placement,\n  ...remainingProps\n}) => {\n  const [open, setOpen] = useState(false);\n  const [focusedIndex, setFocusedIndex] = useState(0);\n  const [focusableItems, setFocusableItems] = useState([]);\n  const [disabledFocusReturn, setDisabledFocusReturn] = useState(true);\n  const [rId] = useState(id);\n  const listboxRef = useRef();\n  const buttonRef = useRef();\n\n  useEffect(() => {\n    if (listboxRef.current) {\n      setFocusableItems(listboxRef.current.querySelectorAll(\n        'button:not([disabled]):not(.vds-state--disabled), [href]:not(.vds-state--disabled)'\n      ));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (open) {\n      focusableItems[focusedIndex].focus();\n    }\n\n    if (!open && buttonRef.current && !disabledFocusReturn) {\n      buttonRef.current.focus();\n      setDisabledFocusReturn(false);\n    }\n  }, [disabledFocusReturn, focusedIndex, focusableItems, open]);\n\n  const handleClick = e => {\n    const isButton = e.target.tagName.toLowerCase() === 'button';\n    const isLink = e.target.tagName.toLowerCase() === 'a';\n\n    setOpen(!open);\n    if (!isButton && !isLink) {\n      e.preventDefault();\n    }\n  };\n\n  const handleKeyDown = e => {\n    const code = e.charCode || e.keyCode;\n    const count = focusableItems.length;\n    const isButton = e.currentTarget.tagName.toLowerCase() === 'button';\n    const isListBox = e.currentTarget.tagName.toLowerCase() === 'ul';\n    let focusId = 0;\n    if (isListBox) {\n      setDisabledFocusReturn(false);\n    }\n\n    if (code === keyCode.END) {\n      e.preventDefault();\n      if (isButton) {\n        setOpen(true);\n      }\n\n      if (count) {\n        focusId = count - 1;\n        setFocusedIndex(focusId);\n        focusableItems[focusId].focus();\n      }\n    }\n\n    if (code === keyCode.HOME) {\n      e.preventDefault();\n      if (isButton) {\n        setOpen(true);\n      }\n\n      if (count) {\n        focusId = 0;\n        setFocusedIndex(focusId);\n        focusableItems[focusId].focus();\n      }\n    }\n\n    if (code === keyCode.UP) {\n      e.preventDefault();\n      if (isButton) {\n        setOpen(true);\n        focusId = focusedIndex || count - 1;\n      }\n\n      if (isListBox && count) {\n        focusId = focusedIndex - 1 < 0 ? count - 1 : focusedIndex - 1;\n      }\n\n      if (count) {\n        setFocusedIndex(focusId);\n        focusableItems[focusId].focus();\n      }\n    }\n\n    if (code === keyCode.DOWN) {\n      e.preventDefault();\n      if (isButton) {\n        setOpen(true);\n        focusId = focusedIndex || 0;\n      }\n\n      if (isListBox && count) {\n        focusId = (focusedIndex + 1) % count;\n      }\n\n      if (count) {\n        setFocusedIndex(focusId);\n        focusableItems[focusId].focus();\n      }\n    }\n\n    if (code === keyCode.ENTER) {\n      if (isButton) {\n        setOpen(true);\n      }\n\n      if (isListBox) {\n        setOpen(false);\n      }\n    }\n\n    if (code === keyCode.ESC) {\n      e.preventDefault();\n      setOpen(false);\n    }\n\n    // Tab\n    if (code === keyCode.TAB && isListBox) {\n      setDisabledFocusReturn(true);\n      setOpen(false);\n    }\n\n    if ( e.ctrlKey || e.altKey || e.metaKey || (e.keyCode === keyCode.SPACE) || (e.keyCode === keyCode.RETURN)) {\n      return;\n    }\n\n    if (isPrintableCharacter(e.key)) {\n      const char = e.key.toLowerCase();\n      const start = focusedIndex + 1 === count ? 0 : focusedIndex + 1;\n\n      let match = getCharFilterIndex({\n        char,\n        count,\n        focusableItems,\n        start\n      });\n\n      if (isButton) {\n        setOpen(true);\n      }\n\n      if (match === -1) {\n        match = getCharFilterIndex({\n          char,\n          count,\n          focusableItems,\n          start: 0\n        });\n      }\n\n      if (match > -1) {\n        setFocusedIndex(match);\n        focusableItems[match].focus();\n      }\n    }\n  };\n\n  return (\n    <Manager>\n      <div\n        className={classnames(CSS_PREFIX, className)}\n        {...remainingProps}\n      >\n        <Reference>\n          {({ ref }) => (\n            <span ref={ref}>\n              {\n                cloneElement(children, {\n                  active: open,\n                  'aria-controls': `${CSS_PREFIX}-listbox-${rId}`,\n                  'aria-expanded': open ? 'true' : undefined,\n                  'aria-haspopup': menu ? 'true' : 'false',\n                  id: rId,\n                  onClick: handleClick,\n                  onKeyDown: handleKeyDown,\n                  ref: buttonRef\n                })\n              }\n            </span>\n          )}\n        </Reference>\n        <Popper\n          modifiers={modifiers}\n          placement={placement}\n        >\n          {({ ref, style }) => (\n            <Menu\n              id={`${CSS_PREFIX}-menu-${rId}`}\n              position=\"absolute\"\n              ref={ref}\n              show={open}\n              style={style}\n            >\n              {\n                cloneElement(menu, {\n                  'aria-labelledby': rId,\n                  children: Children.map(menu.props.children, (child, k) => cloneElement(child, {\n                    children: Children.map(child.props.children, (c, i) => cloneElement(c, {\n                      key: `${rId}-${k}-${i}`,\n                      role: 'menuitem',\n                      tabIndex: '-1'\n                    })),\n                    key: `${rId}-${k}`,\n                    role: 'none'\n                  })),\n                  id: `${CSS_PREFIX}-listbox-${rId}`,\n                  onClick: handleClick,\n                  onKeyDown: handleKeyDown,\n                  ref: listboxRef,\n                  role: 'menu'\n                })\n              }\n            </Menu>\n          )}\n        </Popper>\n      </div>\n      <MenuCurtain\n        onClick={handleClick}\n        show={open}\n      />\n    </Manager>\n  );\n};\n\nNavmenu.propTypes = {\n  /**\n  * @ignore\n  */\n  children: element,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Menu\n   */\n  menu: element.isRequired,\n\n  /**\n   * Modifiers\n   */\n  modifiers: shape({}),\n\n  /**\n   * Placement\n   */\n  placement: oneOf([\n    'auto',\n    'bottom-end',\n    'bottom-start',\n    'bottom',\n    'left-end',\n    'left-start',\n    'left',\n    'right-end',\n    'right-start',\n    'right',\n    'top-end',\n    'top-start',\n    'top'\n  ])\n};\n\nNavmenu.defaultProps = {\n  modifiers: {\n    offset: {\n      enabled: true,\n      offset: '0, 15px'\n    }\n  },\n  placement: 'bottom-start'\n};\n\nNavmenu.displayName = 'Navmenu';\n\nexport default Navmenu;\n"],"sourceRoot":""}