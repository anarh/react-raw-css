(window["webpackJsonp@visa/vds-react"]=window["webpackJsonp@visa/vds-react"]||[]).push([[20],{237:function(e,n,a){"use strict";a.r(n);var t=a(96),r=a(513),l=a(0),o=a.n(l),i=a(4),s=a.n(i),c=a(516),d=a(514),u=a.n(d),m=a(37),p=a(8),h=a(504),b=a(16),f=a(23),v=a(17),E=a(505),g=a(60),y=a(132),F=a(506),x=a(507),M=a(508),Y=a(509),O=a(510),C=a(7),S=a(3),N=a(809),j=Object(l.memo)((function(e){return e.list.map((function(e,n){return o.a.createElement("option",{disabled:e.disabled,key:n,value:e.value},e.value)}))}),(function(e,n){return!(JSON.stringify(e.list)!==JSON.stringify(n.list))}));j.propTypes={list:Object(S.arrayOf)(Object(S.shape)({disabled:S.string,value:S.string}))};var T=j,w=a(607),B=function(e,n,a,t){var r;return"MONTH"===e?r=Object(w.c)(n,t)?void 0:"disabled":"YEAR"===e&&(r=Object(w.c)(a,n)?void 0:"disabled"),r},I=Object(l.memo)((function(e){var n=e.defaultSelection,a=e.list,t=e.listType,r=e.selectedMonth,i=e.selectedYear,s=a.map((function(e){return{disabled:B(t,e,r,i),value:e}}));return o.a.createElement(l.Fragment,null,o.a.createElement("option",{value:"",disabled:!0},n),o.a.createElement(T,{list:s}))})),k=Object(l.memo)((function(e){var n=e.blurHandler,a=e.changeHandler,t=e.defaultSelection,r=e.errorText,l=e.id,i=e.invalid,s=e.label,c=e.options,d=e.optionType,u=e.selectedItem,m=e.selectedMonth,p=e.selectedYear;return o.a.createElement(N.a,{"aria-label":s,defaultValue:u?void 0:"",errorText:r,id:l,invalid:i,onBlur:n,onChange:a,showErrorText:!0,value:u},o.a.createElement(I,{defaultSelection:t,list:c,listType:d,selectedMonth:m||void 0,selectedYear:p||void 0}))}));k.propTypes={blurHandler:S.func,changeHandler:S.func,defaultSelection:S.string,errorText:S.string,id:S.string,invalid:S.bool,label:S.string,optionType:S.string,options:Object(S.arrayOf)(S.string),selectedItem:S.string,selectedMonth:S.string,selectedYear:S.string};var P=k,R=Object(w.a)(),H=function(e){var n=e.blurMonthField,a=e.errorText,t=e.id,r=e.invalid,l=e.labelForSelectMonth,i=e.placeholderForMonth,s=e.selectMonth,c=e.selectedMonth,d=e.selectedYear;return o.a.createElement(P,{blurHandler:n,changeHandler:s,defaultSelection:i,errorText:a,id:t,invalid:r,label:l,options:R,optionType:"MONTH",selectedItem:c,selectedYear:d})},L=Object(w.b)(),A=function(e){var n=e.blurYearField,a=e.errorText,t=e.id,r=e.invalid,l=e.labelForSelectYear,i=e.placeholderForYear,s=e.selectYear,c=e.selectedMonth,d=e.selectedYear;return o.a.createElement(P,{blurHandler:n,changeHandler:s,defaultSelection:i,errorText:a,id:t,invalid:r,label:l,options:L,optionType:"YEAR",selectedItem:d,selectedMonth:c})},G=a(810),V=a(765),z=Object(l.memo)((function(e){var n=e.className,a=e.css,r=e.delimiter,i=e.errorForEmptyFields,c=e.errorForInvalidMonth,d=e.errorForInvalidYear,u=e.formSubmitCounter,m=e.id,p=e.labelForFieldset,h=e.labelForSelectMonth,b=e.labelForSelectYear,f=e.onBlurMonthHandler,v=e.onBlurYearHandler,E=e.onChangeMonthHandler,g=e.onChangeYearHandler,y=e.placeholderForMonth,F=e.placeholderForYear,x=e.selectedMonth,M=e.selectedYear,Y=e.validateOnBlur,O=Object(l.useState)(),C=Object(t.a)(O,2),S=C[0],N=C[1],j=Object(l.useState)({errorText:void 0,selected:x&&M?Object(w.c)(x,M)?x:void 0:x}),T=Object(t.a)(j,2),B=T[0],I=T[1],k=Object(l.useState)({errorText:void 0,selected:x&&M?Object(w.c)(x,M)?M:void 0:M}),P=Object(t.a)(k,2),R=P[0],L=P[1];Object(l.useEffect)((function(){u&&(B.selected||R.selected?!B.selected&&R.selected?I({errorText:c}):B.selected&&!R.selected&&L({errorText:d}):(I({isError:""}),L({isError:""}),N(i)))}),[i,c,d,u,B.selected,R.selected]);var z="string"===typeof S?Boolean(S):void 0;return o.a.createElement(G.a,{className:s()("vds-card-expiration",n),css:a,errorText:S,id:m,invalid:z,legend:p,showErrorText:Boolean(S)},o.a.createElement(H,{blurMonthField:function(e){Y&&(e.target.value||S||I({errorText:c})),"function"===typeof f&&f(e)},errorText:B.errorText,id:"month-".concat(m),invalid:z||("string"===typeof B.errorText?Boolean(B.errorText):void 0),labelForSelectMonth:h,placeholderForMonth:y,selectMonth:function(e){N(void 0),I({errorText:void 0,selected:e.target.value}),"function"===typeof E&&E(e)},selectedMonth:B.selected,selectedYear:R.selected}),o.a.createElement(V.a,null,r),o.a.createElement(A,{blurYearField:function(e){Y&&(!e.target.value&&B.selected?L({errorText:d}):e.target.value||B.selected||(I({errorText:void 0}),N(i))),"function"===typeof v&&v(e)},errorText:R.errorText,id:"year-".concat(m),invalid:z||("string"===typeof R.errorText?Boolean(R.errorText):void 0),labelForSelectYear:b,placeholderForYear:F,selectYear:function(e){L({errorText:void 0,selected:e.target.value}),S&&!B.selected&&(N(void 0),I({errorText:c})),N(void 0),"function"===typeof g&&g(e)},selectedMonth:B.selected,selectedYear:R.selected}))}));z.defaultProps={delimiter:" / ",errorForEmptyFields:"Error for empty fields",errorForInvalidMonth:"Error for invalid month",errorForInvalidYear:"Error for invalid year",formSubmitCounter:0,labelForFieldset:"Label for fieldset",labelForSelectMonth:"Label for Month",labelForSelectYear:"Label for Year",placeholderForMonth:"Placeholder text",placeholderForYear:"Placeholder text",validateOnBlur:!1},z.displayName="CardExpiration";var D=z,J=a(589),W=a(1588).Formik,q=function(){return o.a.createElement(f.a,null,o.a.createElement(v.a,null,o.a.createElement(p.a,null,o.a.createElement(C.a,{tag:"h2"},"Card Expiration - With default labels"))),o.a.createElement(v.a,null,o.a.createElement(p.a,null,o.a.createElement(D,null))),o.a.createElement(v.a,null,o.a.createElement(p.a,null,o.a.createElement(C.a,{tag:"h2"},"Card Expiration"),o.a.createElement(J.a,null,o.a.createElement("li",null,"With labels (locale: en-US) from prop"),o.a.createElement("li",null,"validateOnBlur"),o.a.createElement("li",null,"Integrated with Formik (3rd Party Form)")),o.a.createElement(C.a,{tag:"h2"},"Scenarios:"),o.a.createElement(J.a,null,o.a.createElement("li",null,"Click on submit button. Change month. Click on submit button again."),o.a.createElement("li",null,"Click on submit button. Change year. Click on submit button again."),o.a.createElement("li",null,"Click on submit button. Tab on month, double tab."),o.a.createElement("li",null,"Click on submit button. Change year. Tab.")))),o.a.createElement(v.a,null,o.a.createElement(p.a,null,o.a.createElement(W,{validate:function(e){var n={};return e.month&&e.year||(n.expiration=!0),n},onSubmit:function(e,n){var a=n.setSubmitting;setTimeout((function(){alert(JSON.stringify(e,null,2)),a(!1)}),400)}},(function(e){var n=e.errors,a=e.handleSubmit,t=e.isSubmitting,r=e.submitCount,l=e.values;return o.a.createElement("form",{onSubmit:a},o.a.createElement(D,{errorForEmptyFields:"Please fill out the Expires field.",errorForInvalidMonth:"Please fill out the Expires Month.",errorForInvalidYear:"Please fill out the Expires Year.",formSubmitCounter:n.expiration?r:void 0,id:"card-expiration-demo-1",labelForFieldset:"Expires (MM / YY)",labelForSelectMonth:"expires month",labelForSelectYear:"expires year",onBlurMonthHandler:function(){return console.log("application:::on blur month handler")},onBlurYearHandler:function(){return console.log("application:::on blur year handler")},onChangeMonthHandler:function(e){console.log("application:::on change month handler"),l.month=e.target.value},onChangeYearHandler:function(e){console.log("application:::on change year handler"),l.year=e.target.value},placeholderForMonth:"MM",placeholderForYear:"YY",validateOnBlur:!0}),o.a.createElement("button",{type:"submit",disabled:t},"Submit"))})))),o.a.createElement(v.a,null,o.a.createElement(p.a,null,o.a.createElement(C.a,{tag:"h2"},"Card Expiration"),o.a.createElement(J.a,null,o.a.createElement("li",null,"With labels (locale: fr-FR) from prop"),o.a.createElement("li",null,"Integrated with Formik (3rd Party Form)")),o.a.createElement(C.a,{tag:"h2"},"Scenarios:"),o.a.createElement(J.a,null,o.a.createElement("li",null,"Click on submit button. Change month. Click on submit button again."),o.a.createElement("li",null,"Click on submit button. Change year. Click on submit button again."),o.a.createElement("li",null,"Click on submit button. Tab on month, double tab."),o.a.createElement("li",null,"Click on submit button. Change year. Tab.")))),o.a.createElement(v.a,null,o.a.createElement(p.a,null,o.a.createElement(W,{validate:function(e){var n={};return e.month&&e.year||(n.expiration=!0),n},onSubmit:function(e,n){var a=n.setSubmitting;setTimeout((function(){alert(JSON.stringify(e,null,2)),a(!1)}),400)}},(function(e){var n=e.errors,a=e.handleSubmit,t=e.isSubmitting,r=e.submitCount,l=e.values;return o.a.createElement("form",{onSubmit:a},o.a.createElement(D,{errorForEmptyFields:"S'il vous pla\xeet remplir le champ Expires.",errorForInvalidMonth:"S'il vous pla\xeet remplir le mois expire.",errorForInvalidYear:"S'il vous pla\xeet remplir l'ann\xe9e expire.",formSubmitCounter:n.expiration?r:void 0,id:"card-expiration-demo-2",labelForFieldset:"Expire (MM / AA)",labelForSelectMonth:"expire mois",labelForSelectYear:"expire ann\xe9e",onBlurMonthHandler:function(){return console.log("application:::on blur month handler")},onBlurYearHandler:function(){return console.log("application:::on blur year handler")},onChangeMonthHandler:function(e){console.log("application:::on change month handler"),l.month=e.target.value},onChangeYearHandler:function(e){console.log("application:::on change year handler"),l.year=e.target.value},placeholderForMonth:"MM",placeholderForYear:"AA"}),o.a.createElement("button",{type:"submit",disabled:t},"Submit"))})))),o.a.createElement(v.a,null,o.a.createElement(p.a,null,o.a.createElement(C.a,{tag:"h2"},"Card Expiration"),o.a.createElement(J.a,null,o.a.createElement("li",null,"Empty form submit"),o.a.createElement("li",null,"Month & Year not selected")))),o.a.createElement(v.a,null,o.a.createElement(p.a,null,o.a.createElement(D,{errorForEmptyFields:"Please fill out the Expires field.",errorForInvalidMonth:"Please fill out the Expires Month.",errorForInvalidYear:"Please fill out the Expires Year.",id:"card-expiration-demo-3",labelForFieldset:"Expires(MM/YY)",labelForSelectMonth:"expires month",labelForSelectYear:"expires year",placeholderForMonth:"MM",placeholderForYear:"YY"}))),o.a.createElement(v.a,null,o.a.createElement(p.a,null,o.a.createElement(C.a,{tag:"h2"},"Card Expiration"),o.a.createElement(J.a,null,o.a.createElement("li",null,"Edit form with past Month 09 & Year 19"),o.a.createElement("li",null,"validateOnBlur")))),o.a.createElement(v.a,null,o.a.createElement(p.a,null,o.a.createElement(D,{errorForEmptyFields:"Please fill out the Expires field.",errorForInvalidMonth:"Please fill out the Expires Month.",errorForInvalidYear:"Please fill out the Expires Year.",id:"card-expiration-demo-4",labelForFieldset:"Expires(MM/YY)",labelForSelectMonth:"expires month",labelForSelectYear:"expires year",placeholderForMonth:"MM",placeholderForYear:"YY",selectedMonth:"09",selectedYear:"19",validateOnBlur:!0}))),o.a.createElement(v.a,null,o.a.createElement(p.a,null,o.a.createElement(C.a,{tag:"h2"},"Card Expiration"),o.a.createElement(J.a,null,o.a.createElement("li",null,"Edit form with future Month 01 & Year 20")))),o.a.createElement(v.a,null,o.a.createElement(p.a,null,o.a.createElement(D,{errorForEmptyFields:"Please fill out the Expires field.",errorForInvalidMonth:"Please fill out the Expires Month.",errorForInvalidYear:"Please fill out the Expires Year.",id:"card-expiration-demo-5",labelForFieldset:"Expires(MM/YY)",labelForSelectMonth:"expires month",labelForSelectYear:"expires year",placeholderForMonth:"MM",placeholderForYear:"YY",selectedMonth:"01",selectedYear:"20"}))),o.a.createElement(v.a,null,o.a.createElement(p.a,null,o.a.createElement(C.a,{tag:"h2"},"Card Expiration"),o.a.createElement(J.a,null,o.a.createElement("li",null,"Edit form with valid Month 01 & Year 30"),o.a.createElement("li",null,"validateOnBlur")))),o.a.createElement(v.a,null,o.a.createElement(p.a,null,o.a.createElement(D,{errorForEmptyFields:"Please fill out the Expires field.",errorForInvalidMonth:"Please fill out the Expires Month.",errorForInvalidYear:"Please fill out the Expires Year.",id:"card-expiration-demo-6",labelForFieldset:"Expires(MM/YY)",labelForSelectMonth:"expires month",labelForSelectYear:"expires year",placeholderForMonth:"MM",placeholderForYear:"YY",selectedMonth:"01",selectedYear:"30",validateOnBlur:!0}))))},U=a(515),X="import React, { memo, useEffect, useState } from 'react';\nimport classnames from 'classnames';\nimport { bool, func, node, number, string } from 'prop-types';\nimport ExpirationMonth from './expiration-month';\nimport ExpirationYear from './expiration-year';\nimport SelectGroup from '../select-group';\nimport SelectGroupDelimiter from '../select-group-delimiter';\nimport { isValidMonthYear } from '@visa/ui-utils/lib/js/card-expiration';\n\nconst CSS_PREFIX = 'vds-card-expiration';\n\n/**\n * @param {object} Props\n * @returns {node} React Component\n */\nconst CardExpiration = memo(\n  ({\n    className,\n    css,\n    delimiter,\n    errorForEmptyFields,\n    errorForInvalidMonth,\n    errorForInvalidYear,\n    formSubmitCounter,\n    id,\n    labelForFieldset,\n    labelForSelectMonth,\n    labelForSelectYear,\n    onBlurMonthHandler,\n    onBlurYearHandler,\n    onChangeMonthHandler,\n    onChangeYearHandler,\n    placeholderForMonth,\n    placeholderForYear,\n    selectedMonth,\n    selectedYear,\n    validateOnBlur\n  }) => {\n    const [emptyFields, setEmptyFields] = useState();\n    const [month, setMonth] = useState({\n      errorText: undefined,\n      selected:\n        selectedMonth && selectedYear\n          ? isValidMonthYear(selectedMonth, selectedYear)\n            ? selectedMonth\n            : undefined\n          : selectedMonth\n    });\n    const [year, setYear] = useState({\n      errorText: undefined,\n      selected:\n        selectedMonth && selectedYear\n          ? isValidMonthYear(selectedMonth, selectedYear)\n            ? selectedYear\n            : undefined\n          : selectedYear\n    });\n\n    useEffect(() => {\n      if (formSubmitCounter) {\n        if (!month.selected && !year.selected) {\n          setMonth({\n            isError: ''\n          });\n          setYear({\n            isError: ''\n          });\n          setEmptyFields(errorForEmptyFields);\n        } else if (!month.selected && year.selected) {\n          setMonth({\n            errorText: errorForInvalidMonth\n          });\n        } else if (month.selected && !year.selected) {\n          setYear({\n            errorText: errorForInvalidYear\n          });\n        }\n      }\n    }, [errorForEmptyFields, errorForInvalidMonth, errorForInvalidYear, formSubmitCounter, month.selected, year.selected]);\n\n    /**\n     * @param {ReactSyntheticEvent} e\n     */\n    const changeMonth = e => {\n      setEmptyFields(undefined);\n      setMonth({\n        errorText: undefined,\n        selected: e.target.value\n      });\n\n      typeof onChangeMonthHandler === 'function' && onChangeMonthHandler(e);\n    };\n\n    /**\n     * @param {ReactSyntheticEvent} e\n     */\n    const changeYear = e => {\n      setYear({\n        errorText: undefined,\n        selected: e.target.value\n      });\n\n      if (emptyFields && !month.selected) {\n        setEmptyFields(undefined);\n        setMonth({\n          errorText: errorForInvalidMonth\n        });\n      }\n\n      setEmptyFields(undefined);\n\n      typeof onChangeYearHandler === 'function' && onChangeYearHandler(e);\n    };\n\n    /**\n     * @param {ReactSyntheticEvent} e\n     */\n    const blurMonthField = e => {\n      if (validateOnBlur) {\n        if (!e.target.value && !emptyFields) {\n          setMonth({\n            errorText: errorForInvalidMonth\n          });\n        }\n      }\n\n      typeof onBlurMonthHandler === 'function' && onBlurMonthHandler(e);\n    };\n\n    /**\n     * @param {ReactSyntheticEvent} e\n     */\n    const blurYearField = e => {\n      if (validateOnBlur) {\n        if (!e.target.value && month.selected) {\n          setYear({\n            errorText: errorForInvalidYear\n          });\n        } else if (!e.target.value && !month.selected) {\n          setMonth({\n            errorText: undefined\n          });\n          setEmptyFields(errorForEmptyFields);\n        }\n      }\n\n      typeof onBlurYearHandler === 'function' && onBlurYearHandler(e);\n    };\n\n    const invalidGroup = typeof emptyFields === 'string' ? Boolean(emptyFields) : undefined;\n\n    return (\n      <SelectGroup\n        className={classnames(CSS_PREFIX, className)}\n        css={css}\n        errorText={emptyFields}\n        id={id}\n        invalid={invalidGroup}\n        legend={labelForFieldset}\n        showErrorText={Boolean(emptyFields)}\n      >\n        <ExpirationMonth\n          blurMonthField={blurMonthField}\n          errorText={month.errorText}\n          id={`month-${id}`}\n          invalid={invalidGroup || (typeof month.errorText === 'string' ? Boolean(month.errorText) : undefined)}\n          labelForSelectMonth={labelForSelectMonth}\n          placeholderForMonth={placeholderForMonth}\n          selectMonth={changeMonth}\n          selectedMonth={month.selected}\n          selectedYear={year.selected}\n        />\n        <SelectGroupDelimiter>{delimiter}</SelectGroupDelimiter>\n        <ExpirationYear\n          blurYearField={blurYearField}\n          errorText={year.errorText}\n          id={`year-${id}`}\n          invalid={invalidGroup || (typeof year.errorText === 'string' ? Boolean(year.errorText) : undefined)}\n          labelForSelectYear={labelForSelectYear}\n          placeholderForYear={placeholderForYear}\n          selectYear={changeYear}\n          selectedMonth={month.selected}\n          selectedYear={year.selected}\n        />\n      </SelectGroup>\n    );\n  }\n);\n\nCardExpiration.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string,\n  /**\n   * @ignore\n   */\n  css: func,\n  /**\n   *   Delimiter used in between month and year select.\n   */\n  delimiter: node,\n  /**\n   *   Error text used for empty fields.\n   */\n  errorForEmptyFields: string,\n  /**\n   *   Error text used for an invalid month.\n   */\n  errorForInvalidMonth: string,\n  /**\n   *   Error text used for an invalid year.\n   */\n  errorForInvalidYear: string,\n  /**\n   *   Number of times a form was submitted.\n   */\n  formSubmitCounter: number,\n  /**\n   *   Select group Id.\n   */\n  id: string,\n  /**\n   *   Label for select group.\n   */\n  labelForFieldset: string,\n  /**\n   *   Label for month select.\n   */\n  labelForSelectMonth: string,\n  /**\n   *   Label for year select.\n   */\n  labelForSelectYear: string,\n  /**\n   *   Callback to fire when you remove focus from a month select.\n   */\n  onBlurMonthHandler: func,\n  /**\n   *   Callback to fire when you remove focus from a year select.\n   */\n  onBlurYearHandler: func,\n  /**\n   *   Callback to fire when month value changes.\n   */\n  onChangeMonthHandler: func,\n  /**\n   *   Callback to fire when year value changes.\n   */\n  onChangeYearHandler: func,\n  /**\n   *   Placeholder label for month select.\n   */\n  placeholderForMonth: string,\n  /**\n   *   Placeholder label for year select.\n   */\n  placeholderForYear: string,\n  /**\n   *   Selected month when component first renders.\n   */\n  selectedMonth: string,\n  /**\n   *   Selected year when component first renders.\n   */\n  selectedYear: string,\n  /**\n   *   If true, will validate drop-downs on blur.\n   */\n  validateOnBlur: bool\n};\n\nCardExpiration.defaultProps = {\n  delimiter: ' / ',\n  errorForEmptyFields: 'Error for empty fields',\n  errorForInvalidMonth: 'Error for invalid month',\n  errorForInvalidYear: 'Error for invalid year',\n  formSubmitCounter: 0,\n  labelForFieldset: 'Label for fieldset',\n  labelForSelectMonth: 'Label for Month',\n  labelForSelectYear: 'Label for Year',\n  placeholderForMonth: 'Placeholder text',\n  placeholderForYear: 'Placeholder text',\n  validateOnBlur: false\n};\n\nCardExpiration.displayName = 'CardExpiration';\n\nexport default CardExpiration;\n".replace("= memo(({","= React.forwardRef(({").replace("cloneElement(","React.cloneElement("),$='/* eslint-disable no-console */import React from \'react\';\nimport CardExpiration from \'../../card-expiration\';\nimport Col from \'../../col\';\nimport Grid from \'../../grid\';\nimport List from \'../../list\';\nimport Row from \'../../row\';\nimport Typography from \'../../typography\';\n\nconst Formik = require(\'formik\').Formik;\n\nconst CardExpirationExample = () => (\n  <Grid>\n    <Row>\n      <Col>\n        <Typography tag="h2">Card Expiration - With default labels</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <CardExpiration />\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag="h2">Card Expiration</Typography>\n        <List>\n          <li>With labels (locale: en-US) from prop</li>\n          <li>validateOnBlur</li>\n          <li>Integrated with Formik (3rd Party Form)</li>\n        </List>\n\n        <Typography tag="h2">Scenarios:</Typography>\n        <List>\n          <li>Click on submit button. Change month. Click on submit button again.</li>\n          <li>Click on submit button. Change year. Click on submit button again.</li>\n          <li>Click on submit button. Tab on month, double tab.</li>\n          <li>Click on submit button. Change year. Tab.</li>\n        </List>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Formik\n          validate={values => {\n            const errors = {};\n            if (!values.month || !values.year) {\n              errors.expiration = true;\n            }\n            return errors;\n          }}\n          onSubmit={(values, { setSubmitting }) => {\n            setTimeout(() => {\n              alert(JSON.stringify(values, null, 2)); // eslint-disable-line\n              setSubmitting(false);\n            }, 400);\n          }}\n        >\n          {({\n            errors,\n            handleSubmit,\n            isSubmitting,\n            submitCount,\n            values\n          }) => (\n            <form onSubmit={handleSubmit}>\n              <CardExpiration\n                errorForEmptyFields="Please fill out the Expires field."\n                errorForInvalidMonth="Please fill out the Expires Month."\n                errorForInvalidYear="Please fill out the Expires Year."\n                formSubmitCounter={errors.expiration ? submitCount : undefined}\n                id="card-expiration-demo-1"\n                labelForFieldset="Expires (MM / YY)"\n                labelForSelectMonth="expires month"\n                labelForSelectYear="expires year"\n                onBlurMonthHandler={() => console.log(\'application:::on blur month handler\')}\n                onBlurYearHandler={() => console.log(\'application:::on blur year handler\')}\n                onChangeMonthHandler={e => {\n                  console.log(\'application:::on change month handler\');\n                  values.month = e.target.value;\n                }}\n                onChangeYearHandler={e => {\n                  console.log(\'application:::on change year handler\');\n                  values.year = e.target.value;\n                }}\n                placeholderForMonth="MM"\n                placeholderForYear="YY"\n                validateOnBlur\n              />\n              <button type="submit" disabled={isSubmitting}>\n                Submit\n              </button>\n            </form>\n          )}\n        </Formik>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag="h2">Card Expiration</Typography>\n        <List>\n          <li>With labels (locale: fr-FR) from prop</li>\n          <li>Integrated with Formik (3rd Party Form)</li>\n        </List>\n        <Typography tag="h2">Scenarios:</Typography>\n        <List>\n          <li>Click on submit button. Change month. Click on submit button again.</li>\n          <li>Click on submit button. Change year. Click on submit button again.</li>\n          <li>Click on submit button. Tab on month, double tab.</li>\n          <li>Click on submit button. Change year. Tab.</li>\n        </List>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Formik\n          validate={values => {\n            const errors = {};\n            if (!values.month || !values.year) {\n              errors.expiration = true;\n            }\n            return errors;\n          }}\n          onSubmit={(values, { setSubmitting }) => {\n            setTimeout(() => {\n              alert(JSON.stringify(values, null, 2)); // eslint-disable-line\n              setSubmitting(false);\n            }, 400);\n          }}\n        >\n          {({\n            errors,\n            handleSubmit,\n            isSubmitting,\n            submitCount,\n            values\n          }) => (\n            <form onSubmit={handleSubmit}>\n              <CardExpiration\n                errorForEmptyFields="S\'il vous pla\xeet remplir le champ Expires."  // eslint-disable-line\n                errorForInvalidMonth="S\'il vous pla\xeet remplir le mois expire." // eslint-disable-line\n                errorForInvalidYear="S\'il vous pla\xeet remplir l\'ann\xe9e expire." // eslint-disable-line\n                formSubmitCounter={errors.expiration ? submitCount : undefined}\n                id="card-expiration-demo-2"\n                labelForFieldset="Expire (MM / AA)"\n                labelForSelectMonth="expire mois" // eslint-disable-line\n                labelForSelectYear="expire ann\xe9e" // eslint-disable-line\n                onBlurMonthHandler={() => console.log(\'application:::on blur month handler\')}\n                onBlurYearHandler={() => console.log(\'application:::on blur year handler\')}\n                onChangeMonthHandler={e => {\n                  console.log(\'application:::on change month handler\');\n                  values.month = e.target.value;\n                }}\n                onChangeYearHandler={e => {\n                  console.log(\'application:::on change year handler\');\n                  values.year = e.target.value;\n                }}\n                placeholderForMonth="MM"\n                placeholderForYear="AA"\n              />\n              <button type="submit" disabled={isSubmitting}>\n                Submit\n              </button>\n            </form>\n          )}\n        </Formik>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag="h2">Card Expiration</Typography>\n        <List>\n          <li>Empty form submit</li>\n          <li>Month & Year not selected</li>\n        </List>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <CardExpiration\n          errorForEmptyFields="Please fill out the Expires field."\n          errorForInvalidMonth="Please fill out the Expires Month."\n          errorForInvalidYear="Please fill out the Expires Year."\n          id="card-expiration-demo-3"\n          labelForFieldset="Expires(MM/YY)"\n          labelForSelectMonth="expires month"\n          labelForSelectYear="expires year"\n          placeholderForMonth="MM"\n          placeholderForYear="YY"\n        />\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag="h2">Card Expiration</Typography>\n        <List>\n          <li>Edit form with past Month 09 & Year 19</li>\n          <li>validateOnBlur</li>\n        </List>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <CardExpiration\n          errorForEmptyFields="Please fill out the Expires field."\n          errorForInvalidMonth="Please fill out the Expires Month."\n          errorForInvalidYear="Please fill out the Expires Year."\n          id="card-expiration-demo-4"\n          labelForFieldset="Expires(MM/YY)"\n          labelForSelectMonth="expires month"\n          labelForSelectYear="expires year"\n          placeholderForMonth="MM"\n          placeholderForYear="YY"\n          selectedMonth="09"\n          selectedYear="19"\n          validateOnBlur\n        />\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag="h2">Card Expiration</Typography>\n        <List>\n          <li>Edit form with future Month 01 & Year 20</li>\n        </List>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <CardExpiration\n          errorForEmptyFields="Please fill out the Expires field."\n          errorForInvalidMonth="Please fill out the Expires Month."\n          errorForInvalidYear="Please fill out the Expires Year."\n          id="card-expiration-demo-5"\n          labelForFieldset="Expires(MM/YY)"\n          labelForSelectMonth="expires month"\n          labelForSelectYear="expires year"\n          placeholderForMonth="MM"\n          placeholderForYear="YY"\n          selectedMonth="01"\n          selectedYear="20"\n        />\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag="h2">Card Expiration</Typography>\n        <List>\n          <li>Edit form with valid Month 01 & Year 30</li>\n          <li>validateOnBlur</li>\n        </List>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <CardExpiration\n          errorForEmptyFields="Please fill out the Expires field."\n          errorForInvalidMonth="Please fill out the Expires Month."\n          errorForInvalidYear="Please fill out the Expires Year."\n          id="card-expiration-demo-6"\n          labelForFieldset="Expires(MM/YY)"\n          labelForSelectMonth="expires month"\n          labelForSelectYear="expires year"\n          placeholderForMonth="MM"\n          placeholderForYear="YY"\n          selectedMonth="01"\n          selectedYear="30"\n          validateOnBlur\n        />\n      </Col>\n    </Row>\n  </Grid>\n);\n\nexport default CardExpirationExample;\n'.replace(/'..\/..\//g,"'@visa/vds-react/"),_=function(e){var n=Object(r.a)({},e),a=Object(l.useState)({}),i=Object(t.a)(a,2),d=i[0],S=i[1];return Object(l.useEffect)((function(){try{S(U.parse(X))}catch(e){console.log("\n        React-docgen could not parse props for CardExpiration\n        check for fix here https://github.com/reactjs/react-docgen/issues/342")}}),[]),o.a.createElement(f.a,{siblingOfStickyFooter:!0},o.a.createElement(v.a,null,o.a.createElement(p.a,null,o.a.createElement(C.a,{tag:"h1"},"Card Expiration"))),o.a.createElement(v.a,null,o.a.createElement(p.a,null,o.a.createElement(y.a,null,o.a.createElement(g.a,{tag:o.a.createElement(m.c,{exact:!0,to:"".concat("/vds-react","/components/card-expiration"),activeClassName:"vds-state--selected"})},o.a.createElement(b.a,{name:"log",resolution:"low"}),"Card Expiration Example"),o.a.createElement(g.a,{tag:o.a.createElement(m.c,{exact:!0,to:"".concat("/vds-react","/components/card-expiration/code"),activeClassName:"vds-state--selected"})},o.a.createElement(b.a,{name:"code-fork-code-alt",resolution:"low"}),"Code for Card Expiration Example")))),o.a.createElement(v.a,null,o.a.createElement(p.a,null,o.a.createElement("div",{className:s()({"vds-state--hidden":n.match.path==="".concat("/vds-react","/components/card-expiration/code"),"vds-state--show":n.match.path!=="".concat("/vds-react","/components/card-expiration/code")})},o.a.createElement(q,n)),o.a.createElement("div",{className:s()({"vds-state--hidden":n.match.path!=="".concat("/vds-react","/components/card-expiration/code"),"vds-state--show":n.match.path==="".concat("/vds-react","/components/card-expiration/code")})},o.a.createElement(c.a,Object.assign({},c.b,{theme:u.a,code:$,language:"jsx"}),(function(e){var n=e.className,a=e.style,t=e.tokens,r=e.getLineProps,l=e.getTokenProps;return o.a.createElement("pre",{className:n,style:a},t.map((function(e,n){return o.a.createElement("div",r({key:n,line:e}),o.a.createElement("span",{style:{display:"inline-block",opacity:"0.3",userSelect:"none",width:"2em"}},n+1),e.map((function(e,n){return o.a.createElement("span",l({key:n,token:e}))})))})))}))))),o.a.createElement(v.a,null,o.a.createElement(p.a,null,o.a.createElement(h.a,{className:s()(["components"]),dividerLines:!0,size:"compact"},o.a.createElement(E.a,{tag:"caption"},"Props"),o.a.createElement(Y.a,null,o.a.createElement(O.a,{className:"vds-tr"},o.a.createElement(M.a,{"aria-sort":"none",role:"columnheader",scope:"col"},"Prop"),o.a.createElement(M.a,{"aria-sort":"none",role:"columnheader",scope:"col"},"Type"),o.a.createElement(M.a,{"aria-sort":"none",role:"columnheader",scope:"col"},"Default"),o.a.createElement(M.a,{"aria-sort":"none",role:"columnheader",scope:"col"},"Description"))),o.a.createElement(F.a,null,d.props&&Object.entries(d.props).filter((function(e){return"@ignore"!==e[1].description})).map((function(e,n){return o.a.createElement(O.a,{className:"vds-tr",key:n,tabIndex:"0"},o.a.createElement(x.a,{className:"vds-td"},e[0]," ",e[1].required?o.a.createElement("sup",{style:{color:"red"}}," required"):""),o.a.createElement(x.a,{className:"vds-td"},o.a.createElement("strong",null,e[1].type.name),e[1].type.value&&e[1].type.value.length?o.a.createElement("small",{style:{color:"#1a1f71"}},o.a.createElement("br",null),e[1].type.value.length?e[1].type.value.map((function(e){return e.value||e.name})).join(", "):void 0):""),o.a.createElement(x.a,{className:"vds-td"},e[1].defaultValue?e[1].defaultValue.value:""),o.a.createElement(x.a,{className:"vds-td"},e[1].description))})))))))};_.displayName="CardExpirationExample";n.default=_},504:function(e,n,a){"use strict";var t=a(2),r=a(5),l=a(0),o=a.n(l),i=a(3),s=a(4),c=a.n(s),d=Object(l.forwardRef)((function(e,n){var a,l=e.children,i=e.className,s=e.customizableColumns,d=e.dividerLines,u=e.keyValuePairs,m=e.reveal,p=e.revealFirstColumn,h=e.revealLastColumn,b=e.rowSelection,f=e.size,v=e.stickyHeader,E=Object(r.a)(e,["children","className","customizableColumns","dividerLines","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","size","stickyHeader"]);return o.a.createElement("table",Object.assign({},E,{className:c()("vds-data-table",(a={},Object(t.a)(a,"".concat("vds-state","--customizable-columns"),Boolean(s)),Object(t.a)(a,"".concat("vds-state","--divider-lines"),Boolean(d)),Object(t.a)(a,"".concat("vds-state","--key-value-pairs"),Boolean(u)),Object(t.a)(a,"".concat("vds-state","--").concat(f),Boolean(f)),Object(t.a)(a,"".concat("vds-state","--reveal"),Boolean(m)),Object(t.a)(a,"".concat("vds-state","--reveal-first-column"),Boolean(p)),Object(t.a)(a,"".concat("vds-state","--reveal-last-column"),Boolean(h)),Object(t.a)(a,"".concat("vds-state","--").concat(b),Boolean(b)),Object(t.a)(a,"".concat("vds-state","--sticky-header"),Boolean(v)),a),i),ref:n}),l)}));d.propTypes={children:i.node,className:i.string,columns:Object(i.arrayOf)(Object(i.shape)({})),customizableColumns:i.bool,data:Object(i.arrayOf)(Object(i.shape)({})),dividerLines:i.bool,keyValuePairs:i.bool,reveal:i.bool,revealFirstColumn:i.bool,revealLastColumn:i.bool,rowSelection:Object(i.oneOf)(["multi-select","single-select"]),size:Object(i.oneOf)(["compact"]),stickyHeader:i.bool},d.displayName="DataTable",n.a=d},505:function(e,n,a){"use strict";var t=a(5),r=a(0),l=a.n(r),o=a(3),i=a(4),s=a.n(i),c=Object(r.forwardRef)((function(e,n){var a=e.children,r=e.className,o=e.tag,i=Object(t.a)(e,["children","className","tag"]);return l.a.createElement(o,Object.assign({className:s()("vds-sr",r),ref:n},i),a)}));c.propTypes={children:o.node,className:o.string,tag:o.elementType},c.defaultProps={tag:"span"},c.displayName="Sr",n.a=c},506:function(e,n,a){"use strict";var t=a(5),r=a(0),l=a.n(r),o=a(3),i=a(4),s=a.n(i),c=Object(r.forwardRef)((function(e,n){var a=e.children,r=e.className,o=Object(t.a)(e,["children","className"]);return l.a.createElement("tbody",Object.assign({className:s()("vds-tbody",r),ref:n},o),a)}));c.propTypes={children:o.node,className:o.string},c.displayName="Tbody",n.a=c},507:function(e,n,a){"use strict";var t=a(2),r=a(5),l=a(0),o=a.n(l),i=a(3),s=a(4),c=a.n(s),d=Object(l.forwardRef)((function(e,n){var a=e.children,l=e.className,i=e.textAlign,s=Object(r.a)(e,["children","className","textAlign"]);return o.a.createElement("td",Object.assign({className:c()("vds-td",Object(t.a)({},"vds-text--".concat(i),Boolean(i)),l),ref:n},s),a)}));d.propTypes={children:i.node,className:i.string,textAlign:Object(i.oneOf)(["center","left","right"])},d.displayName="Td",n.a=d},508:function(e,n,a){"use strict";var t=a(5),r=a(0),l=a.n(r),o=a(3),i=a(4),s=a.n(i),c=Object(r.forwardRef)((function(e,n){var a=e.children,r=e.className,o=Object(t.a)(e,["children","className"]);return l.a.createElement("th",Object.assign({className:s()("vds-th",r),ref:n},o),a)}));c.propTypes={children:o.node,className:o.string},c.displayName="Th",n.a=c},509:function(e,n,a){"use strict";var t=a(5),r=a(0),l=a.n(r),o=a(3),i=a(4),s=a.n(i),c=Object(r.forwardRef)((function(e,n){var a=e.children,r=e.className,o=Object(t.a)(e,["children","className"]);return l.a.createElement("thead",Object.assign({className:s()("vds-thead",r),ref:n},o),a)}));c.propTypes={children:o.node,className:o.string},c.displayName="Thead",n.a=c},510:function(e,n,a){"use strict";var t=a(5),r=a(0),l=a.n(r),o=a(3),i=a(4),s=a.n(i),c=Object(r.forwardRef)((function(e,n){var a=e.children,r=e.className,o=Object(t.a)(e,["children","className"]);return l.a.createElement("tr",Object.assign({className:s()("vds-tr",r),ref:n},o),a)}));c.propTypes={children:o.node,className:o.string},c.displayName="Tr",n.a=c},517:function(e,n){},531:function(e,n,a){"use strict";var t=a(2),r=a(5),l=a(0),o=a.n(l),i=a(4),s=a.n(i),c=function(e){var n,a=e.children,l=e.className,i=e.css,c=e.disabled,d=e.expanded,u=e.filled,m=e.focus,p=e.invalid,h=e.isTextarea,b=e.readOnly,f=Object(r.a)(e,["children","className","css","disabled","expanded","filled","focus","invalid","isTextarea","readOnly"]);return o.a.createElement("div",Object.assign({className:s()((n={},Object(t.a)(n,"".concat("vds-input"),!h),Object(t.a)(n,"".concat("vds-input","-textarea-container"),Boolean(h)),Object(t.a)(n,"".concat("vds-state","--disabled"),Boolean(c)),Object(t.a)(n,"".concat("vds-state","--error"),Boolean(p)),Object(t.a)(n,"".concat("vds-state","--expanded"),Boolean(d)),Object(t.a)(n,"".concat("vds-state","--filled"),Boolean(u)),Object(t.a)(n,"".concat("vds-state","--focus"),Boolean(m)),Object(t.a)(n,"".concat("vds-state","--readonly"),Boolean(b)),Object(t.a)(n,"".concat("vds-state","--success"),"boolean"===typeof p&&!p),n),l),css:i},f),a)};c.displayName="InputContainer",n.a=c},532:function(e,n,a){"use strict";var t=a(5),r=a(0),l=a.n(r),o=a(3),i=a(4),s=a.n(i),c=Object(r.forwardRef)((function(e,n){var a=e.children,r=e.className,o=Object(t.a)(e,["children","className"]);return l.a.createElement("label",Object.assign({className:s()("vds-input-label",r),ref:n},o),a)}));c.propTypes={children:o.node,className:o.string},c.displayName="InputLabel",n.a=c},533:function(e,n,a){"use strict";var t=a(5),r=a(0),l=a.n(r),o=a(4),i=a.n(o),s=function(e){var n=e.children,a=e.className,r=Object(t.a)(e,["children","className"]);return l.a.createElement("div",Object.assign({className:i()("vds-input-bar",a)},r),n)};s.displayName="InputBar",n.a=s},534:function(e,n,a){"use strict";var t=a(2),r=a(5),l=a(0),o=a.n(l),i=a(4),s=a.n(i),c=function(e){var n,a=e.ariaAtomic,l=e.children,i=e.className,c=e.invalid,d=e.role,u=e.show,m=Object(r.a)(e,["ariaAtomic","children","className","invalid","role","show"]);return o.a.createElement("span",Object.assign({"aria-atomic":a,"aria-live":c?"assertive":"polite",className:s()("vds-input-message",(n={},Object(t.a)(n,"".concat("vds-state","--hidden"),!u),Object(t.a)(n,"".concat("vds-state","--error"),Boolean(c)),n),i),role:d},m),l)};c.defaultProps={ariaAtomic:"true",role:"alert"},c.displayName="InputMessage",n.a=c},536:function(e,n,a){"use strict";var t=a(5),r=a(0),l=a.n(r),o=a(4),i=a.n(o),s=function(e){var n=e.children,a=e.className,r=Object(t.a)(e,["children","className"]);return l.a.createElement("span",Object.assign({className:i()("vds-input-option",a)},r),n)};s.displayName="InputOption",n.a=s},538:function(e,n,a){"use strict";var t=a(5),r=a(0),l=a.n(r),o=a(4),i=a.n(o),s=function(e){var n=e.children,a=e.className,r=Object(t.a)(e,["children","className"]);return l.a.createElement("span",Object.assign({className:i()("vds-input-hint",a)},r),n)};s.displayName="InputHint",n.a=s},573:function(e,n,a){"use strict";var t=a(5),r=a(0),l=a.n(r),o=a(4),i=a.n(o),s=function(e){var n=e.children,a=e.className,r=Object(t.a)(e,["children","className"]);return l.a.createElement("fieldset",Object.assign({className:i()("vds-fieldset",a)},r),n)};s.displayName="Fieldset",n.a=s},589:function(e,n,a){"use strict";var t=a(2),r=a(5),l=a(0),o=a.n(l),i=a(4),s=a.n(i),c=Object(l.forwardRef)((function(e,n){var a=e.children,i=e.className,c=e.type,d=Object(r.a)(e,["children","className","type"]),u="ordered"===c?"ol":"ul";return o.a.createElement(u,Object.assign({className:s()("vds-list",Object(t.a)({},"".concat("vds-list","--").concat(c),Boolean(c)),i),ref:n},d),l.Children.map(a,(function(e){return e?Object(l.cloneElement)(e,{className:s()(e.props.className,"".concat("vds-list","-item"))}):e})))}));c.displayName="List",n.a=c},644:function(e,n,a){"use strict";var t=a(5),r=a(0),l=a.n(r),o=a(4),i=a.n(o),s=function(e){var n=e.children,a=e.className,r=Object(t.a)(e,["children","className"]);return l.a.createElement("legend",Object.assign({className:i()("vds-legend",a)},r),n)};s.displayName="Legend",n.a=s},765:function(e,n,a){"use strict";var t=a(5),r=a(0),l=a.n(r),o=a(4),i=a.n(o),s=function(e){var n=e.ariaHidden,a=e.children,r=e.className,o=Object(t.a)(e,["ariaHidden","children","className"]);return l.a.createElement("span",Object.assign({"aria-hidden":n,className:i()("vds-select-group-delimiter",r)},o),a)};s.defaultProps={ariaHidden:"true"},s.displayName="SelectGroupDelimiter",n.a=s},809:function(e,n,a){"use strict";var t=a(96),r=a(5),l=a(0),o=a.n(l),i=a(4),s=a.n(i),c=a(518),d=a.n(c),u=a(531),m=a(532),p=a(533),h=function(e){var n=e.children,a=e.className,t=Object(r.a)(e,["children","className"]);return o.a.createElement("div",Object.assign({className:s()("vds-input--select-focusbox",a)},t),n)};h.displayName="InputSelectFocusbox";var b=h,f=a(534),v=a(3),E=Object(l.forwardRef)((function(e,n){var a=e.children,t=e.className,l=Object(r.a)(e,["children","className"]);return o.a.createElement("select",Object.assign({className:s()("vds-input--select",t),ref:n},l),a)}));E.propTypes={children:v.node,className:v.string},E.displayName="InputSelect";var g=E,y=a(536),F=a(538),x=a(16),M=Object(l.forwardRef)((function(e,n){var a=e.ariaLabel,i=e.caretIcon,c=e.children,h=e.className,v=e.css,E=e.disabled,x=e.errorIcon,M=e.errorText,Y=e.helpIcon,O=e.helpText,C=e.id,S=void 0===C?d.a.generate():C,N=e.invalid,j=e.label,T=e.onBlur,w=e.onChange,B=e.onFocus,I=e.placeholder,k=e.readOnly,P=e.showErrorText,R=e.showHelpText,H=Object(r.a)(e,["ariaLabel","caretIcon","children","className","css","disabled","errorIcon","errorText","helpIcon","helpText","id","invalid","label","onBlur","onChange","onFocus","placeholder","readOnly","showErrorText","showHelpText"]),L=Object(l.useState)(),A=Object(t.a)(L,2),G=A[0],V=A[1],z=Object(l.useState)(Boolean(H.value)||Boolean(H.defaultValue)),D=Object(t.a)(z,2),J=D[0],W=D[1],q=Object(l.useState)(S),U=Object(t.a)(q,1)[0];Object(l.useEffect)((function(){W(Boolean(H.defaultValue)||Boolean(H.value))}),[H.defaultValue,H.value]);return o.a.createElement(u.a,{className:s()(h),css:v,disabled:E,filled:J,focus:G,readOnly:k,invalid:N},j?o.a.createElement(m.a,{htmlFor:U},j):void 0,o.a.createElement(p.a,null,I?o.a.createElement(F.a,null,I):void 0,o.a.createElement(g,Object.assign({"aria-describedby":P||R?"input-message-".concat(U):void 0,"aria-label":j?void 0:a,"aria-invalid":N,id:U,disabled:E,onBlur:function(e){V(!1),"function"===typeof T&&T(e)},onChange:function(e){W(""!==e.target.value),"function"===typeof w&&w(e)},onFocus:function(e){V(!0),"function"===typeof B&&B(e)},readOnly:k,ref:n},H),c),o.a.createElement(y.a,null,i)),o.a.createElement(b,null),o.a.createElement(f.a,{id:"input-message-".concat(U),show:R&&Boolean(O)||P&&Boolean(M),invalid:N},!N&&G&&R&&Boolean(O)?o.a.createElement(l.Fragment,null,Y," ",O):void 0,!0===N&&P&&Boolean(M)?o.a.createElement(l.Fragment,null,x," ",M):void 0))}));M.defaultProps={caretIcon:o.a.createElement(x.a,{name:"arrow-expand",resolution:"tiny"}),errorIcon:o.a.createElement(x.a,{name:"error",resolution:"low"})},M.displayName="Select";n.a=M},810:function(e,n,a){"use strict";var t=a(2),r=a(5),l=a(0),o=a.n(l),i=a(4),s=a.n(i),c=a(573),d=a(644),u=function(e){var n=e.children,a=e.className,t=Object(r.a)(e,["children","className"]);return o.a.createElement("div",Object.assign({className:s()("vds-select-group-container",a)},t),n)};u.displayName="SelectGroupContainer";var m=u,p=function(e){var n,a=e.ariaAtomic,l=e.ariaLive,i=e.children,c=e.className,d=e.invalid,u=e.role,m=e.show,p=Object(r.a)(e,["ariaAtomic","ariaLive","children","className","invalid","role","show"]);return o.a.createElement("span",Object.assign({"aria-atomic":a,"aria-live":l,className:s()("vds-select-group-message",(n={},Object(t.a)(n,"".concat("vds-state","--hidden"),!m),Object(t.a)(n,"".concat("vds-state","--error"),Boolean(d)),n),c),role:u},p),i)};p.defaultProps={ariaAtomic:"true",ariaLive:"assertive",role:"alert"},p.displayName="SelectGroupMessage";var h=p,b=a(16),f=a(518),v=a.n(f),E=function(e){var n,a=e.children,i=e.className,u=e.id,p=void 0===u?v.a.generate():u,b=e.disabled,f=e.errorIcon,E=e.errorText,g=e.helpIcon,y=e.helpText,F=e.invalid,x=e.legend,M=e.showErrorText,Y=e.showHelpText,O=Object(r.a)(e,["children","className","id","disabled","errorIcon","errorText","helpIcon","helpText","invalid","legend","showErrorText","showHelpText"]),C=Object(l.useRef)(p);return o.a.createElement("div",Object.assign({"aria-describedby":M||Y?"select-group-message-".concat(C.current):void 0,className:s()("vds-select-group",(n={},Object(t.a)(n,"".concat("vds-state","--disabled"),Boolean(b)),Object(t.a)(n,"".concat("vds-state","--error"),Boolean(F)),n),i)},O),o.a.createElement(c.a,null,o.a.createElement(d.a,null,x),o.a.createElement(m,null,a,o.a.createElement(h,{id:"select-group-message-".concat(C.current),show:Y&&Boolean(y)||M&&Boolean(E),invalid:F},!F&&Y&&Boolean(y)?o.a.createElement(l.Fragment,null,g," ",y):void 0,F&&M&&Boolean(E)?o.a.createElement(l.Fragment,null,f," ",E):void 0))))};E.defaultProps={errorIcon:o.a.createElement(b.a,{name:"error",resolution:"low"})},E.displayName="SelectGroup";n.a=E}}]);
//# sourceMappingURL=20.338f3d33.chunk.js.map