{"version":3,"sources":["components/checkbox-error-message/index.js","components/checkbox-list/index.js","components/checkbox-list-item/index.js","components/checkbox-set/index.js","components/checkbox-set-legend/index.js","components/checkbox/example/index.js","styleguide/pages/components/checkbox.js","components/data-table/index.js","components/sr/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/nanoid/format.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","components/checkbox/index.js"],"names":["CheckboxErrorMessage","ariaAtomic","ariaLive","children","className","role","remainingProps","aria-atomic","aria-live","classnames","defaultProps","displayName","CheckboxList","type","Boolean","CheckboxListItem","CheckboxSet","CheckboxSetLegend","invalid","CheckboxExample","useState","items","checked","id","label","value","stateOne","setStateOne","values","stateTwo","setStateTwo","list","disabled","indeterminate","stateThree","setStateThree","required","stateFour","setStateFour","stateFive","setStateFive","handleChangeOne","e","map","item","target","handleChangeTwo","index","findIndex","v","slice","handleChangeThree","itemId","childId","parentIndex","parent","childIndex","child","filter","c","length","handleChangeFour","handleChangeFive","tag","defaultChecked","name","k","key","onChange","join","includes","i","resolution","undefined","reactDocs","require","jsParsed","replace","exampleCode","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","match","path","theme","code","language","style","tokens","getLineProps","getTokenProps","line","display","opacity","userSelect","width","token","dividerLines","size","aria-sort","scope","props","Object","entries","doc","description","tabIndex","color","defaultValue","DataTable","forwardRef","ref","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","propTypes","node","string","columns","arrayOf","shape","bool","data","oneOf","Sr","Tag","elementType","Tbody","Td","textAlign","Th","Thead","Tr","alphabet","previousSeed","shuffled","randomFromSeed","ORIGINAL","reset","setCharacters","_alphabet_","Error","unique","split","ind","arr","lastIndexOf","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","module","exports","get","characters","seed","lookup","build","isValid","clusterWorkerId","generate","seedValue","worker","workerId","newCharacters","_seed_","counter","previousSeconds","REDUCE_TIME","version","str","seconds","Date","now","random","format","number","done","loopCounter","pow","randomByte","crypto","window","msCrypto","getRandomValues","Uint8Array","bytes","mask","LN2","step","ceil","byte","RegExp","test","Checkbox","shortid","onBlur","onFocus","focus","setFocus","check","setCheck","indetermined","setIndetermined","rId","event","htmlFor","onClick","stopPropagation"],"mappings":"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","file":"static/js/21.60d060b4.chunk.js","sourcesContent":["import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-checkbox-error-message';\n\nconst CheckboxErrorMessage = ({ ariaAtomic, ariaLive, children, className, role, ...remainingProps }) => (\n  <span\n    aria-atomic={ariaAtomic}\n    aria-live={ariaLive}\n    className={classnames(CSS_PREFIX, className)}\n    role={role}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nCheckboxErrorMessage.propTypes = {\n  /**\n   * Aria Atomic\n   */\n  ariaAtomic: string,\n\n  /**\n   * Aria Live\n   */\n  ariaLive: string,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Role\n   */\n  role: string\n};\n\nCheckboxErrorMessage.defaultProps = {\n  ariaAtomic: 'true',\n  ariaLive: 'assertive',\n  role: 'alert'\n};\n\nCheckboxErrorMessage.displayName = 'CheckboxErrorMessage';\n\nexport default CheckboxErrorMessage;\n","import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-checkbox-list';\n\nconst CheckboxList = ({ children, className, type, ...remainingProps }) => (\n  <ul\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}-${type}`]: Boolean(type)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </ul>\n);\n\nCheckboxList.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Type\n   */\n  type: oneOf([\n    'inner'\n  ])\n};\n\nCheckboxList.displayName = 'CheckboxList';\n\nexport default CheckboxList;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-checkbox-list-item';\n\nconst CheckboxListItem = ({ children, className, ...remainingProps }) => (\n  <li\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </li>\n);\n\nCheckboxListItem.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nCheckboxListItem.displayName = 'CheckboxListItem';\n\nexport default CheckboxListItem;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-checkbox-set';\n\nconst CheckboxSet = ({ children, className, ...remainingProps }) => (\n  <fieldset\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </fieldset>\n);\n\nCheckboxSet.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nCheckboxSet.displayName = 'CheckboxSet';\n\nexport default CheckboxSet;\n","import React from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-checkbox-set-legend';\nconst CSS_STATE = 'vds-state';\n\nconst CheckboxSetLegend = ({ children, className, invalid, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--invalid`]: Boolean(invalid)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nCheckboxSetLegend.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Invalid\n  */\n  invalid: bool\n};\n\nCheckboxSetLegend.displayName = 'CheckboxSetLegend';\n\nexport default CheckboxSetLegend;\n","import React, { useState } from 'react';\nimport Checkbox from '../../checkbox';\nimport CheckboxErrorMessage from '../../checkbox-error-message';\nimport CheckboxList from '../../checkbox-list';\nimport CheckboxListItem from '../../checkbox-list-item';\nimport CheckboxSet from '../../checkbox-set';\nimport CheckboxSetLegend from '../../checkbox-set-legend';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Icon from '../../icon';\nimport Row from '../../row';\nimport Typography from '../../typography';\n\nconst CheckboxExample = () => {\n  const [stateOne, setStateOne] = useState({\n    items: [\n      {\n        checked: false,\n        id: 'item-1',\n        label: 'One',\n        value: 'one'\n      },\n      {\n        checked: true,\n        id: 'item-2',\n        label: 'Two',\n        value: 'two'\n      },\n      {\n        checked: false,\n        id: 'item-3',\n        label: 'Three',\n        value: 'three'\n      },\n      {\n        checked: false,\n        id: 'item-4',\n        label: 'Four',\n        value: 'four'\n      }\n    ]\n  });\n\n  const [stateTwo, setStateTwo] = useState({ values : ['6', '8'] });\n  const [stateThree, setStateThree] = useState({\n    list: [\n      {\n        checked: false,\n        children: [\n          {\n            checked: true,\n            id: 'checkbox-indeterminate-100',\n            label: 'Pepperoni',\n            value: '1-10'\n          },\n          {\n            checked: false,\n            id: 'checkbox-indeterminate-101',\n            label: 'Sausage',\n            value: '1-11'\n          },\n          {\n            checked: false,\n            id: 'checkbox-indeterminate-102',\n            label: 'BBQ Chicken',\n            value: '1-12'\n          }\n        ],\n        disabled: false,\n        id: 'checkbox-indeterminate-1',\n        indeterminate: true,\n        label: 'All Meats',\n        value: '1'\n      },\n      {\n        checked: false,\n        children: [\n          {\n            checked: false,\n            id: 'checkbox-indeterminate-200',\n            label: 'Mushrooms',\n            value: '2-13'\n          },\n          {\n            checked: false,\n            id: 'checkbox-indeterminate-201',\n            label: 'Black Olives',\n            value: '2-14'\n          },\n          {\n            checked: false,\n            id: 'checkbox-indeterminate-202',\n            label: 'Pineapple',\n            value: '2-15'\n          },\n          {\n            checked: false,\n            id: 'checkbox-indeterminate-203',\n            label: 'Red Onion',\n            value: '2-16'\n          }\n        ],\n        disabled: false,\n        id: 'checkbox-indeterminate-2',\n        indeterminate: false,\n        label: 'All Vegetables',\n        value: '2'\n      },\n      {\n        checked: true,\n        disabled: false,\n        id: 'checkbox-indeterminate-3',\n        indeterminate: false,\n        label: 'Extra Cheese',\n        value: '3'\n      }\n    ]\n  });\n\n  const [stateFour, setStateFour] = useState({\n    items: [\n      {\n        checked: false,\n        id: 'tos-1',\n        invalid: true,\n        label: 'I have read and agree to the Terms and Conditions',\n        required: true,\n        value: 'yes - agree to terms and conditions'\n      }, {\n        checked: false,\n        id: 'tos-2',\n        invalid: true,\n        label: 'I agree to Visa’s Terms of Service, Privacy Policy, and Electronic Communication Policy',\n        required: true,\n        value: 'yes - agree to TOS'\n      }\n    ]\n  });\n\n  const [stateFive, setStateFive] = useState({\n    values: []\n  });\n\n  const handleChangeOne = e => setStateOne({\n    items: [\n      ...stateOne.items.map(item => ({\n        ...item,\n        checked: e.target.id === item.id ? !item.checked : item.checked\n      }))\n    ]\n  });\n\n  const handleChangeTwo = e => {\n    const index = stateTwo.values.findIndex(v => v === e.target.value);\n    if (index !== -1) {\n      return setStateTwo({\n        values: [...stateTwo.values.slice(0, index), ...stateTwo.values.slice(index + 1)]\n      });\n    }\n\n    return setStateTwo({\n      values: [...stateTwo.values, e.target.value]\n    });\n  };\n\n  const handleChangeThree = (itemId, childId) => {\n    const parentIndex = stateThree.list.findIndex(item => item.id === itemId);\n    const parent = stateThree.list[parentIndex];\n\n    if (childId) {\n      const childIndex = parent.children.findIndex(child => child.id === childId);\n      const child = parent.children[childIndex];\n      parent.children = [...parent.children.slice(0, childIndex), { ...child, checked: !child.checked }, ...parent.children.slice(childIndex + 1)];\n      parent.checked = parent.children.filter(c => c.checked === true).length === parent.children.length;\n      parent.indeterminate = parent.children.filter(c => c.checked === true).length > 0;\n    }\n\n    if (typeof childId === 'undefined') {\n      parent.checked = !parent.checked;\n      parent.indeterminate = false;\n      if (parent.children) {\n        parent.children = parent.children.map(child => ({ ...child, checked: parent.checked }));\n      }\n    }\n\n    setStateThree({\n      list: [\n        ...stateThree.list.slice(0, parentIndex),\n        parent,\n        ...stateThree.list.slice(parentIndex + 1)\n      ]\n    });\n  };\n\n  const handleChangeFour = e => setStateFour({\n    items: [\n      ...stateFour.items.map(item => ({\n        ...item,\n        checked: e.target.id === item.id ? !item.checked : item.checked,\n        invalid: e.target.id === item.id ? item.checked : item.invalid\n      }))\n    ]\n  });\n\n  const handleChangeFive = e => {\n    const index = stateFive.values.findIndex(v => v === e.target.value);\n\n    if (index !== -1) {\n      return setStateFive({\n        values: [...stateFive.values.slice(0, index), ...stateFive.values.slice(index + 1)]\n      });\n    }\n\n    return setStateFive({\n      values: [...stateFive.values, e.target.value]\n    });\n  };\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Checkbox (stateful)</Typography>\n          <Typography>\n            All checkbox props are mapped to the checkbox\n            component, e.g. defaultChecked, onClick, etc\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Checkbox\n            defaultChecked\n            name=\"example\"\n            label=\"First option\"\n            value=\"1\"\n          />\n          <Checkbox\n            name=\"example\"\n            label=\"Second option\"\n            value=\"2\"\n          />\n          <Checkbox\n            name=\"example\"\n            label=\"Third option\"\n            value=\"3\"\n          />\n          <Checkbox\n            name=\"example\"\n            label=\"Fourth option\"\n            value=\"4\"\n            disabled\n          />\n          <Checkbox\n            name=\"example\"\n            label=\"Fifth option\"\n            value=\"5\"\n            defaultChecked\n            disabled\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Checkbox (stateless) data approach</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          {\n            stateOne.items.map((item, k) => (\n              <Checkbox\n                key={k}\n                checked={item.checked}\n                id={item.id}\n                label={item.label}\n                name=\"checkbox-stateless\"\n                onChange={handleChangeOne}\n                value={item.value}\n              />\n            ))\n          }\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Checkbox (stateless) composition approach</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography>Selected values [{stateTwo.values.join(', ')}] </Typography>\n          <Checkbox\n            checked={stateTwo.values.includes(\"6\")}\n            name=\"example\"\n            label=\"First option\"\n            value=\"6\"\n            onChange={handleChangeTwo}\n          />\n          <Checkbox\n            checked={stateTwo.values.includes(\"7\")}\n            name=\"example\"\n            label=\"Second option\"\n            value=\"7\"\n            onChange={handleChangeTwo}\n          />\n          <Checkbox\n            checked={stateTwo.values.includes(\"8\")}\n            name=\"example\"\n            label=\"Third option\"\n            value=\"8\"\n            onChange={handleChangeTwo}\n          />\n          <Checkbox\n            checked={stateTwo.values.includes(\"9\")}\n            name=\"example\"\n            label=\"Fourth option\"\n            value=\"9\"\n            onChange={handleChangeTwo}\n            disabled\n          />\n          <Checkbox\n            checked={stateTwo.values.includes(\"10\")}\n            name=\"example\"\n            label=\"Fifth option\"\n            value=\"10\"\n            onChange={handleChangeTwo}\n            disabled\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Indeterminate</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Checkbox\n            name=\"example\"\n            label=\"Indeterminate Checkbox Example\"\n            id=\"checkbox-test-21\"\n            value=\"2\"\n            indeterminate\n          />\n          <Checkbox\n            name=\"example\"\n            label=\"Disabled Indeterminate Checkbox Example\"\n            id=\"checkbox-test-22\"\n            value=\"2\"\n            disabled\n            indeterminate\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Checkbox Error</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Checkbox\n            name=\"example\"\n            label=\"Checkbox Error Unchecked\"\n            id=\"checkbox-test-24\"\n            value=\"2\"\n            invalid\n          />\n          <Checkbox\n            name=\"example\"\n            label=\"Checkbox Error Checked\"\n            id=\"checkbox-test-25\"\n            value=\"2\"\n            defaultChecked\n            invalid\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Checkbox Group with Indeterminate</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <CheckboxSet>\n            <CheckboxSetLegend>Select Pizza Toppings</CheckboxSetLegend>\n            <CheckboxList>\n              {\n                stateThree.list.map((item, i) => (\n                  <CheckboxListItem key={i}>\n                    <Checkbox\n                      checked={item.checked}\n                      disabled={item.disabled}\n                      indeterminate={item.indeterminate}\n                      id={item.id}\n                      label={item.label}\n                      name=\"pizza-topping-group\"\n                      onChange={() => handleChangeThree(item.id)}\n                      value={item.value}\n                    />\n                    {\n                      item.children\n                        ? <CheckboxList type=\"inner\">\n                          {item.children.map((child, k) => (\n                            <CheckboxListItem key={k}>\n                              <Checkbox\n                                checked={child.checked}\n                                id={child.id}\n                                label={child.label}\n                                name=\"pizza-topping-item\"\n                                onChange={() => handleChangeThree(item.id, child.id)}\n                                value={child.value}\n                              />\n                            </CheckboxListItem>\n                          ))}\n                        </CheckboxList>\n                        : null\n                    }\n                  </CheckboxListItem>\n                ))\n              }\n            </CheckboxList>\n          </CheckboxSet>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Checkbox Set</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <CheckboxSet>\n            <CheckboxSetLegend>Select Drink Toppings</CheckboxSetLegend>\n            <CheckboxList>\n              <CheckboxListItem>\n                <Checkbox\n                  name=\"drink-toppings\"\n                  label=\"Boba\"\n                  value=\"1\"\n                />\n              </CheckboxListItem>\n              <CheckboxListItem>\n                <Checkbox\n                  name=\"drink-toppings\"\n                  label=\"Lychee jelly\"\n                  value=\"2\"\n                />\n              </CheckboxListItem>\n              <CheckboxListItem>\n                <Checkbox\n                  name=\"drink-toppings\"\n                  label=\"Mango star jelly\"\n                  value=\"3\"\n                />\n              </CheckboxListItem>\n              <CheckboxListItem>\n                <Checkbox\n                  name=\"drink-toppings\"\n                  label=\"Aloe vera pieces (not available)\"\n                  value=\"4\"\n                  disabled\n                />\n              </CheckboxListItem>\n              <CheckboxListItem>\n                <Checkbox\n                  name=\"drink-toppings\"\n                  label=\"Coconut jelly (included)\"\n                  value=\"5\"\n                  defaultChecked\n                  disabled\n                />\n              </CheckboxListItem>\n            </CheckboxList>\n          </CheckboxSet>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Checkbox Set with Validation (BYO-State)</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <CheckboxSet>\n            <CheckboxSetLegend\n              invalid={stateFour.items.filter(item => item.invalid).length > 0}\n            >\n              Confirmation\n            </CheckboxSetLegend>\n            <CheckboxList>\n              {\n                stateFour.items.map((item, k) => (\n                  <CheckboxListItem key={k}>\n                    <Checkbox\n                      checked={item.checked}\n                      id={item.id}\n                      invalid={item.invalid}\n                      label={item.label}\n                      name=\"checkbox-validation-data-example\"\n                      onChange={handleChangeFour}\n                      required={item.required}\n                      value={item.value}\n                    />\n                  </CheckboxListItem>\n                ))\n              }\n            </CheckboxList>\n            {\n              stateFour.items.filter(item => item.invalid).length > 0\n                ? <CheckboxErrorMessage><Icon name=\"error\" resolution=\"low\" /> Please confirm your agreement.</CheckboxErrorMessage>\n                : undefined\n            }\n          </CheckboxSet>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Checkbox Set with Validation (Composition)</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <CheckboxSet>\n            <CheckboxSetLegend invalid={stateFive.values.length < 2}>Confirmation</CheckboxSetLegend>\n            <CheckboxList>\n              <CheckboxListItem>\n                <Checkbox\n                  invalid={!stateFive.values.includes('1')}\n                  label=\"I have read and agree to the Terms and Conditions\"\n                  name=\"checkbox-validation-example\"\n                  onChange={handleChangeFive}\n                  required\n                  value=\"1\"\n                />\n              </CheckboxListItem>\n              <CheckboxListItem>\n                <Checkbox\n                  invalid={!stateFive.values.includes('2')}\n                  label=\"I agree to Visa’s Terms of Service, Privacy Policy, and Electronic Communication Policy\"\n                  name=\"checkbox-validation-example\"\n                  onChange={handleChangeFive}\n                  required\n                  value=\"2\"\n                />\n              </CheckboxListItem>\n            </CheckboxList>\n            {\n              stateFive.values.length < 2\n                ? <CheckboxErrorMessage><Icon name=\"error\" resolution=\"low\" /> Please confirm your agreement.</CheckboxErrorMessage>\n                : undefined\n            }\n          </CheckboxSet>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default CheckboxExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../../components/col';\nimport DataTable from '../../../components/data-table';\nimport Icon from '../../../components/icon';\nimport Grid from '../../../components/grid';\nimport Row from '../../../components/row';\nimport Sr from '../../../components/sr';\nimport Tab from '../../../components/tab';\nimport TabList from '../../../components/tab-list';\nimport Tbody from '../../../components/tbody';\nimport Td from '../../../components/td';\nimport Th from '../../../components/th';\nimport Thead from '../../../components/thead';\nimport Tr from '../../../components/tr';\nimport Typography from '../../../components/typography';\n\nimport Example from '../../../components/checkbox/example';\n\nconst reactDocs = require('react-docgen');\nconst js = raw('../../../components/checkbox/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../../components/checkbox/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst CheckboxExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Checkbox\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Checkbox</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/checkbox`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Checkbox Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/checkbox/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />Code for Checkbox Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/checkbox/code`,\n              'vds-state--show': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/checkbox/code`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/checkbox/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/checkbox/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <Sr tag=\"caption\">Props</Sr>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {doc[1].type.value.length ? doc[1].type.value.map(v => v.value || v.name).join(', ') : undefined}\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nCheckboxExample.displayName = 'CheckboxExample';\n\nexport default CheckboxExample;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-sr';\n\nconst Sr = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nSr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nSr.defaultProps = {\n  tag: 'span'\n};\n\nSr.displayName = 'Sr';\n\nexport default Sr;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\nvar shuffled;\n\nfunction reset() {\n  shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n  if (!_alphabet_) {\n    if (alphabet !== ORIGINAL) {\n      alphabet = ORIGINAL;\n      reset();\n    }\n\n    return;\n  }\n\n  if (_alphabet_ === alphabet) {\n    return;\n  }\n\n  if (_alphabet_.length !== ORIGINAL.length) {\n    throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n  }\n\n  var unique = _alphabet_.split('').filter(function (item, ind, arr) {\n    return ind !== arr.lastIndexOf(item);\n  });\n\n  if (unique.length) {\n    throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n  }\n\n  alphabet = _alphabet_;\n  reset();\n}\n\nfunction characters(_alphabet_) {\n  setCharacters(_alphabet_);\n  return alphabet;\n}\n\nfunction setSeed(seed) {\n  randomFromSeed.seed(seed);\n\n  if (previousSeed !== seed) {\n    reset();\n    previousSeed = seed;\n  }\n}\n\nfunction shuffle() {\n  if (!alphabet) {\n    setCharacters(ORIGINAL);\n  }\n\n  var sourceArray = alphabet.split('');\n  var targetArray = [];\n  var r = randomFromSeed.nextValue();\n  var characterIndex;\n\n  while (sourceArray.length > 0) {\n    r = randomFromSeed.nextValue();\n    characterIndex = Math.floor(r * sourceArray.length);\n    targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n  }\n\n  return targetArray.join('');\n}\n\nfunction getShuffled() {\n  if (shuffled) {\n    return shuffled;\n  }\n\n  shuffled = shuffle();\n  return shuffled;\n}\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\n\n\nfunction lookup(index) {\n  var alphabetShuffled = getShuffled();\n  return alphabetShuffled[index];\n}\n\nfunction get() {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n  get: get,\n  characters: characters,\n  seed: setSeed,\n  lookup: lookup,\n  shuffled: getShuffled\n};","'use strict';\n\nmodule.exports = require('./lib/index');","'use strict';\n\nvar alphabet = require('./alphabet');\n\nvar build = require('./build');\n\nvar isValid = require('./is-valid'); // if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\n\n\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\n\nfunction seed(seedValue) {\n  alphabet.seed(seedValue);\n  return module.exports;\n}\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\n\n\nfunction worker(workerId) {\n  clusterWorkerId = workerId;\n  return module.exports;\n}\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\n\n\nfunction characters(newCharacters) {\n  if (newCharacters !== undefined) {\n    alphabet.characters(newCharacters);\n  }\n\n  return alphabet.shuffled();\n}\n/**\n * Generate unique id\n * Returns string id\n */\n\n\nfunction generate() {\n  return build(clusterWorkerId);\n} // Export all other functions as properties of the generate function\n\n\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;","'use strict'; // Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\n\nfunction getNextValue() {\n  seed = (seed * 9301 + 49297) % 233280;\n  return seed / 233280.0;\n}\n\nfunction setSeed(_seed_) {\n  seed = _seed_;\n}\n\nmodule.exports = {\n  nextValue: getNextValue,\n  seed: setSeed\n};","'use strict';\n\nvar generate = require('./generate');\n\nvar alphabet = require('./alphabet'); // Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\n\n\nvar REDUCE_TIME = 1567752802062; // don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\n\nvar version = 7; // Counter is used when shortid is called multiple times in one second.\n\nvar counter; // Remember the last time shortid was called in case counter is needed.\n\nvar previousSeconds;\n/**\n * Generate unique id\n * Returns string id\n */\n\nfunction build(clusterWorkerId) {\n  var str = '';\n  var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n  if (seconds === previousSeconds) {\n    counter++;\n  } else {\n    counter = 0;\n    previousSeconds = seconds;\n  }\n\n  str = str + generate(version);\n  str = str + generate(clusterWorkerId);\n\n  if (counter > 0) {\n    str = str + generate(counter);\n  }\n\n  str = str + generate(seconds);\n  return str;\n}\n\nmodule.exports = build;","'use strict';\n\nvar alphabet = require('./alphabet');\n\nvar random = require('./random/random-byte');\n\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n  var loopCounter = 0;\n  var done;\n  var str = '';\n\n  while (!done) {\n    str = str + format(random, alphabet.get(), 1);\n    done = number < Math.pow(16, loopCounter + 1);\n    loopCounter++;\n  }\n\n  return str;\n}\n\nmodule.exports = generate;","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n  randomByte = function randomByte(size) {\n    var bytes = [];\n\n    for (var i = 0; i < size; i++) {\n      bytes.push(Math.floor(Math.random() * 256));\n    }\n\n    return bytes;\n  };\n} else {\n  randomByte = function randomByte(size) {\n    return crypto.getRandomValues(new Uint8Array(size));\n  };\n}\n\nmodule.exports = randomByte;","/**\n * Secure random string generator with custom alphabet.\n *\n * Alphabet must contain 256 symbols or less. Otherwise, the generator\n * will not be secure.\n *\n * @param {generator} random The random bytes generator.\n * @param {string} alphabet Symbols to be used in new random string.\n * @param {size} size The number of symbols in new random string.\n *\n * @return {string} Random string.\n *\n * @example\n * const format = require('nanoid/format')\n *\n * function random (size) {\n *   const result = []\n *   for (let i = 0; i < size; i++) {\n *     result.push(randomByte())\n *   }\n *   return result\n * }\n *\n * format(random, \"abcdef\", 5) //=> \"fbaef\"\n *\n * @name format\n * @function\n */\nmodule.exports = function (random, alphabet, size) {\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1;\n  var step = Math.ceil(1.6 * mask * size / alphabet.length);\n  size = +size;\n  var id = '';\n\n  while (true) {\n    var bytes = random(step);\n\n    for (var i = 0; i < step; i++) {\n      var byte = bytes[i] & mask;\n\n      if (alphabet[byte]) {\n        id += alphabet[byte];\n        if (id.length === size) return id;\n      }\n    }\n  }\n};\n/**\n * @callback generator\n * @param {number} bytes The number of bytes to generate.\n * @return {number[]} Random bytes.\n */","'use strict';\n\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n  if (!id || typeof id !== 'string' || id.length < 6) {\n    return false;\n  }\n\n  var nonAlphabetic = new RegExp('[^' + alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') + ']');\n  return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;","'use strict';\n\nmodule.exports = 0;","import React, { forwardRef, Fragment, useEffect, useState } from 'react';\nimport { bool, func, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\n\nconst CSS_PREFIX = 'vds-checkbox';\nconst CSS_STATE = 'vds-state';\n\nconst Checkbox = forwardRef(({\n  className,\n  disabled,\n  id = shortid.generate(),\n  indeterminate,\n  invalid,\n  label,\n  onBlur,\n  onChange,\n  onFocus,\n  ...remainingProps\n}, ref) => {\n  const [focus, setFocus] = useState();\n  const [check, setCheck] = useState(remainingProps.checked || remainingProps.defaultChecked);\n  const [indetermined, setIndetermined] = useState(indeterminate);\n  const [rId] = useState(id);\n\n  useEffect(() => {\n    setIndetermined(indeterminate);\n  }, [indeterminate]);\n\n  useEffect(() => {\n    if (typeof remainingProps.defaultChecked !== 'undefined') {\n      setCheck(remainingProps.defaultChecked);\n    }\n  }, [remainingProps.defaultChecked]);\n\n  useEffect(() => {\n    if (typeof remainingProps.checked !== 'undefined') {\n      setCheck(remainingProps.checked);\n    }\n  }, [remainingProps.checked]);\n\n  const handleChange = event => {\n    setIndetermined(false);\n    setCheck(event.target.checked);\n    if (typeof onChange === 'function') {\n      onChange(event);\n    }\n  };\n\n  const handleFocus = event => {\n    setFocus(true);\n    if (typeof onFocus === 'function') {\n      onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    setFocus(false);\n    if (typeof onBlur === 'function') {\n      onBlur(event);\n    }\n  };\n\n  return (\n    <Fragment>\n      <input\n        className={classnames(CSS_PREFIX)}\n        disabled={disabled}\n        id={rId}\n        onBlur={handleBlur}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        ref={ref}\n        type=\"checkbox\"\n        {...remainingProps}\n      />\n      <label\n        className={classnames(\n          `${CSS_PREFIX}-label`,\n          {\n            [`${CSS_STATE}--checked`]: Boolean(check),\n            [`${CSS_STATE}--disabled`]: Boolean(disabled),\n            [`${CSS_STATE}--focus`]: Boolean(focus),\n            [`${CSS_STATE}--indeterminate`]: indetermined && !check,\n            [`${CSS_STATE}--invalid`]: Boolean(invalid)\n          },\n          className\n        )}\n        htmlFor={rId}\n        onClick={e => e.stopPropagation()} // if not click event fires 2x, one for checkbox and one for label\n      >\n        {label}\n      </label>\n    </Fragment>\n  );\n});\n\nCheckbox.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   *   If `true`, the checkbox will be disabled.\n   */\n  disabled: bool,\n\n  /**\n   * The id of the input element.\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   *   Indeterminate\n   */\n  indeterminate: bool,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   *   The label of the checkbox element.\n   */\n  label: string.isRequired,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * On Change fn\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func\n};\n\nCheckbox.displayName = 'Checkbox';\n\nexport default Checkbox;\n"],"sourceRoot":""}