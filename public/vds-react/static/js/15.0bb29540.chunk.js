(window["webpackJsonp@visa/vds-react"]=window["webpackJsonp@visa/vds-react"]||[]).push([[15],{281:function(e,n,t){"use strict";t.r(n);var a=t(96),o=t(513),s=t(0),l=t.n(s),r=t(4),c=t.n(r),i=t(516),u=t(514),d=t.n(u),p=t(37),m=t(8),b=t(504),f=t(16),g=t(23),h=t(17),v=t(505),y=t(60),x=t(132),O=t(506),E=t(507),j=t(508),S=t(509),C=t(510),T=t(7),I=t(546),N=t(529),w=t(760),F=function(){var e=Object(s.useState)({disabled:!1}),n=Object(a.a)(e,2),t=n[0],o=n[1],r=Object(s.useState)(),c=Object(a.a)(r,2),i=c[0],u=c[1],d=Object(s.useState)(),p=Object(a.a)(d,2),b=p[0],f=p[1],v=Object(s.useState)(),y=Object(a.a)(v,2),x=y[0],O=y[1];Object(s.useEffect)((function(){if("undefined"===typeof window.google&&null===document.getElementById("loadGoogleMapsAPI")){var e=document.createElement("script");e.id="loadGoogleMapsAPI",e.async="true",e.src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCkX5pcWYEKgFndJpy2o6rWMNErtKyw6w8&libraries=places",document.querySelector("body").appendChild(e)}var n=setInterval((function(){"undefined"!==typeof google&&(u(new window.google.maps.places.AutocompleteService),f(new window.google.maps.places.AutocompleteSessionToken),O(new window.google.maps.places.PlacesService(document.createElement("div"))),clearInterval(n))}),10)}),[]);return l.a.createElement(g.a,null,l.a.createElement(h.a,null,l.a.createElement(m.a,null,l.a.createElement(T.a,{tag:"h2"},"Combobox Freeform Manual Selection"))),l.a.createElement(h.a,null,l.a.createElement(m.a,null,l.a.createElement((function(){var e={city:"",line1:"",postalCode:"",stateProvinceCode:""},n=Object(s.useState)(null),r=Object(a.a)(n,2),c=r[0],u=r[1],d=function(e){return l.a.createElement("span",{className:"address-suggestion"},e.value)},p={disabled:t.disabled,helpText:"Address line 1",label:"Address line 1",name:"combobox"},m=[];return l.a.createElement(l.a.Fragment,null,l.a.createElement(T.a,{tag:"h4"},"Google Address Example"),l.a.createElement(T.a,null,"This is an example of the Autocomplete Manual Selection combobox. But it's a different flavor. The difference between this and the regular combobox is that the Freeform combobox should be used when you do not have any options on initial render; some type of user interaction is required.  The regular combobox requires a list of options on initial render."),l.a.createElement(w.a,{inputProps:p,itemToStringFunc:function(e){return e?e.value.split(",")[0]:""},optionsTemplate:c,onInputChange:function(e){var n=e.target.value,t=n.length;"undefined"!==typeof i&&t&&i.getPlacePredictions({input:n,sessionToken:b},(function(e,n){n===window.google.maps.places.PlacesServiceStatus.OK&&(m=[],e.forEach((function(e){m.push({place_id:e.place_id,value:e.description})})),u({itemKey:"value",optionValues:m,renderOption:d,searchIncludeFields:["value"]}))}))},onSelectionChange:function(n){var t=n.place_id;t&&x.getDetails({fields:["address_components"],placeId:t,sessionToken:b},(function(n,t){t===window.google.maps.places.PlacesServiceStatus.OK&&function(n){if(n.length){var t="",a="",o="",s="";n.forEach((function(n){console.log("address :::: ",n),n.types.includes("street_number")?(t=n.long_name,e.line1=t):n.types.includes("route")?(t=t?"".concat(t," ").concat(n.long_name):n.long_name,e.line1=t):n.types.includes("locality")?(a=n.long_name,e.city=a):n.types.includes("administrative_area_level_1")?(o=n.short_name,e.stateProvinceCode=o):n.types.includes("postal_code")&&(s=n.long_name,e.postalCode=s)})),console.log("Address Line 1: ".concat(t)),console.log("City: ".concat(a)),console.log("State: ".concat(o)),console.log("Zip: ".concat(s)),console.log("Suggestion: ".concat(JSON.stringify(e)))}}(n.address_components)}))}}),l.a.createElement(I.a,{direction:"right",style:{marginTop:"30px"}},l.a.createElement(N.a,{colorScheme:"primary",onClick:function(){return o({disabled:!1})}},"Enable"),l.a.createElement(N.a,{colorScheme:"secondary",onClick:function(){return o({disabled:!0})}},"Disable")))}),null))),l.a.createElement(h.a,null,l.a.createElement(m.a,null,l.a.createElement(T.a,{tag:"h2"},"Generic Example"),l.a.createElement(T.a,null,"This is an example of the Autocomplete Manual Selection combobox. But it's a different flavor. The difference between this and the regular combobox is that the Freeform combobox should be used when you do not have any options on initial render; some type of user interaction is required.  The regular combobox requires a list of options on initial render."))),l.a.createElement(h.a,null,l.a.createElement(m.a,null,l.a.createElement((function(){var e={disabled:t.disabled,helpText:"Manual Autocomplete",label:"Manual Autocomplete",name:"combobox"},n={itemKey:"value",optionValues:[{value:"silver signature card"},{value:"visa signature card"},{value:"platinum visa card"},{value:"premium card"},{value:"another card"},{value:"other card"},{value:"secondary card"},{value:"tertiary card"},{value:"gold signature card"},{value:"yet another card"},{value:"last card"}],renderOption:function(e){return l.a.createElement("span",{className:"card-name"},e.value)},searchIncludeFields:["value"]};return l.a.createElement(l.a.Fragment,null,l.a.createElement(w.a,{optionsTemplate:n,inputProps:e,itemToStringFunc:function(e){return e?e.value:""},onInputChange:function(e){return console.log("onInputChange",e.target.value)},onSelectionChange:function(e){return console.log("onSelectionChange",JSON.stringify(e))}}),l.a.createElement(I.a,{direction:"right",style:{marginTop:"30px"}},l.a.createElement(N.a,{colorScheme:"primary",onClick:function(){return o({disabled:!1})}},"Enable"),l.a.createElement(N.a,{colorScheme:"secondary",onClick:function(){return o({disabled:!0})}},"Disable")))}),null))))},P=t(515),B="import React, { useEffect, useRef, useState } from 'react';\nimport classnames from 'classnames';\nimport Downshift from 'downshift';\nimport { arrayOf, bool, func, number, oneOfType, shape, string } from 'prop-types';\nimport Listbox from '../combobox/listbox';\nimport Input from '../input';\nimport useScrollToItem from '../combobox/useScrollToItem';\nimport useComboboxAction from '../combobox/useComboboxAction';\n\nconst ComboboxFreeformManualSelection = ({\n  comboboxClass,\n  comboboxAction,\n  containerProps,\n  errorText,\n  // eslint-disable-line no-unused-vars\n  inputProps,\n  itemToStringFunc,\n  onInputBlur,\n  onInputChange,\n  onInputFocus,\n  onSelectionChange,\n  optionsTemplate,\n  ...restProps\n}) => {\n  const [currentSelectItem, setCurrentSelectItem] = useState('');\n  const inputRef = useRef(null);\n  const [inputError, setInputError] = useState(errorText);\n  const [isListboxOpen, setListboxOpen] = useState(false);\n  const [searchHasNoMatch, setSearchHasNoMatch] = useState(false);\n  const { listboxItemRef, listboxRef } = useScrollToItem(currentSelectItem, optionsTemplate || {});\n\n  const downshiftInternalActions = {};\n  const actionList = ['clearSelection', 'closeMenu', 'openMenu', 'selectItem', 'setHighlightedIndex'];\n  useComboboxAction(comboboxAction, downshiftInternalActions);\n\n  //Error text from parent component\n  useEffect(() => {\n    if (errorText) {\n      setInputError(errorText);\n    } else {\n      setInputError('');\n    }\n  }, [errorText]);\n\n  useEffect(() => {\n    if (inputError) {\n      //if errorText exist, when noMatch error disappear, reset back to errorText\n      if (errorText) {\n        setInputError(errorText);\n      } else {\n        setInputError('');\n      }\n    }\n    if (searchHasNoMatch) {\n      setListboxOpen(false);\n    } else {\n      setListboxOpen(true);\n    }\n  }, [errorText, inputError, searchHasNoMatch]);\n\n  const handleInputBlur = e => {\n    typeof onInputBlur === 'function' && onInputBlur(e, e.target.value);\n  };\n\n  const handleInputChange = e => {\n    typeof onInputChange === 'function' && onInputChange(e, e.target.value);\n  };\n\n  const handleInputFocus = e => {\n    typeof onInputFocus === 'function' && onInputFocus(e, e.target.value);\n  };\n\n  const handleSelection = selection => {\n    setCurrentSelectItem(selection ? selection : null);\n    setInputError('');\n    typeof onSelectionChange === 'function' && onSelectionChange(selection);\n  };\n\n  const handleNoMatch = noMatch => {\n    if (searchHasNoMatch !== noMatch) {\n      setSearchHasNoMatch(noMatch);\n    }\n  };\n\n  return (\n    <Downshift\n      initialInputValue=\"\"\n      initialSelectedItem={currentSelectItem}\n      itemToString={itemToStringFunc}\n      onChange={handleSelection}\n    >\n      {({ getInputProps, isOpen, ...listboxDownshift }) => { // eslint-disable-line no-unused-vars\n        if (Object.keys(downshiftInternalActions).length === 0) {\n          downshiftInternalActions.setInputError = setInputError;\n          for (const action of actionList) { // eslint-disable-line\n            downshiftInternalActions[action] = listboxDownshift[action];\n          }\n        }\n        return (\n          <div {...containerProps} className={classnames('vds-combobox-container', comboboxClass.containerClass)}>\n            <Input\n              {...getInputProps({\n                onBlur: handleInputBlur,\n                onChange: handleInputChange,\n                onFocus: handleInputFocus\n              })}\n              {...inputProps}\n              className={classnames('vds-combobox-input-wrapper', comboboxClass.inputWrapperClass)}\n              errorText={inputError}\n              ref={inputRef}\n              invalid={Boolean(inputError)}\n              labelId={getInputProps()['aria-labelledby']}\n              showErrorText={Boolean(inputError)}\n              showHelpText={Boolean(inputProps.helpText)}\n              type=\"text\"\n            />\n            <Listbox\n              {...listboxDownshift}\n              {...restProps}\n              listboxClass={comboboxClass.listboxClass}\n              isListboxOpen={isListboxOpen}\n              listboxItemRef={li => {\n                listboxItemRef.current = li;\n              }}\n              listboxRef={ul => {\n                listboxRef.current = ul;\n              }}\n              isOpen={isOpen}\n              noMatchCallback={handleNoMatch}\n              noSelectionCheckMark\n              optionsTemplate={optionsTemplate}\n            />\n          </div>\n        );\n      }}\n    </Downshift>\n  );\n};\n\nComboboxFreeformManualSelection.propTypes = {\n  comboboxAction: func,\n  comboboxClass: shape({\n    containerClass: string,\n    inputWrapperClass: string,\n    listboxClass: string\n  }),\n  containerProps: shape({}),\n  errorText: string,\n  id: oneOfType([number, string]),\n  inputProps: shape({\n    disabled: bool,\n    helpText: string,\n    label: string.isRequired,\n    name: string.isRequired,\n    placeholder: string,\n    required: bool,\n    showHelpText: bool\n  }),\n  itemToStringFunc: func.isRequired,\n  onInputBlur: func,\n  onInputChange: func,\n  onInputFocus: func,\n  onSelectionChange: func,\n  optionsTemplate: shape({\n    itemKey: string.isRequired,\n    optionValues: arrayOf(shape({ value: string.isRequired })),\n    renderOption: func.isRequired,\n    searchIncludeFields: arrayOf(string)\n  })\n};\n\nComboboxFreeformManualSelection.defaultProps = {\n  comboboxClass: {\n    containerClass: null,\n    inputWrapperClass: null,\n    listboxClass: null\n  },\n  errorText: '',\n  inputProps: {\n    label: 'Text for label',\n    name: 'combobox'\n  }\n};\n\nComboboxFreeformManualSelection.displayName = 'ComboboxFreeformManualSelection';\n\nexport default ComboboxFreeformManualSelection;\n".replace("= memo(({","= React.forwardRef(({").replace("cloneElement(","React.cloneElement("),k="/* eslint-disable no-console */\n\nimport React, { useEffect, useState } from 'react';\nimport ButtonGroup from '../../button-group';\nimport ButtonText from '../../button-text';\nimport Col from '../../col';\nimport ComboboxFreeformManualSelection from '../../combobox-freeform-manual-selection';\nimport Grid from '../../grid';\nimport Row from '../../row';\nimport Typography from '../../typography';\n\nconst ComboboxFreeformManualSelectionExample = () => {\n  const [state, setState] = useState({\n    disabled: false\n  });\n  const [service, setService] = useState();\n  const [sessionToken, setSessionToken] = useState();\n  const [placesService, setPlacesService] = useState();\n\n  useEffect(() => {\n    /*\n     * Load google address suggestion JS API\n     */\n    if (typeof window.google === 'undefined' && document.getElementById('loadGoogleMapsAPI') === null) {\n      const loadGoogleMapsAPI = document.createElement('script');\n      loadGoogleMapsAPI.id = \"loadGoogleMapsAPI\";\n      loadGoogleMapsAPI.async = \"true\";\n      loadGoogleMapsAPI.src = \"https://maps.googleapis.com/maps/api/js?key=AIzaSyCkX5pcWYEKgFndJpy2o6rWMNErtKyw6w8&libraries=places\";\n      document.querySelector('body').appendChild(loadGoogleMapsAPI);\n    }\n\n    const googleObject = setInterval(() => {\n      if (typeof google !== 'undefined') {\n        setService(new window.google.maps.places.AutocompleteService());\n        setSessionToken(new window.google.maps.places.AutocompleteSessionToken());\n        setPlacesService(new window.google.maps.places.PlacesService(document.createElement('div')));\n        clearInterval(googleObject);\n      }\n    }, 10);\n    // Ends Google Maps API loading\n  }, []);\n\n  const GoogleSuggestCombobox = () => {\n    const suggestionObj = {\n      city: '',\n      line1: '',\n      postalCode: '',\n      stateProvinceCode: ''\n    };\n    const [optionsTemplate, setOptionsTemplate] = useState(null);\n\n    const renderOption = optionItem => <span className=\"address-suggestion\">{optionItem.value}</span>;\n\n    const inputProps = {\n      disabled: state.disabled,\n      helpText : 'Address line 1',\n      label: 'Address line 1',\n      name: 'combobox'\n    };\n\n    let googlePredictions = [];\n\n    const mapToField = components => {\n      if (!components.length) {\n        return;\n      }\n\n      let addressLine1Field = '';\n      let cityField = '';\n      let stateField = '';\n      let zipField = '';\n\n      components.forEach(address => {\n        console.log('address :::: ', address);\n        if (address.types.includes('street_number')) {\n          addressLine1Field = address.long_name;\n          suggestionObj.line1 = addressLine1Field;\n        } else if (address.types.includes('route')) {\n          addressLine1Field = (addressLine1Field) ? `${addressLine1Field} ${address.long_name}` : address.long_name;\n          suggestionObj.line1 = addressLine1Field;\n        } else if (address.types.includes('locality')) {\n          cityField = address.long_name;\n          suggestionObj.city = cityField;\n        } else if (address.types.includes('administrative_area_level_1')) {\n          stateField = address.short_name;\n          suggestionObj.stateProvinceCode = stateField;\n        } else if (address.types.includes('postal_code')) {\n          zipField = address.long_name;\n          suggestionObj.postalCode = zipField;\n        }\n      });\n\n      console.log(`Address Line 1: ${addressLine1Field}`);\n      console.log(`City: ${cityField}`);\n      console.log(`State: ${stateField}`);\n      console.log(`Zip: ${zipField}`);\n      console.log(`Suggestion: ${JSON.stringify(suggestionObj)}`);\n    };\n\n    const onInputChange = e => {\n      const val = e.target.value;\n      const len = val.length;\n\n      if (typeof service !== 'undefined' && len) {\n        service.getPlacePredictions({\n          input: val,\n          sessionToken\n        }, (predictions, status) => {\n          if (status !== window.google.maps.places.PlacesServiceStatus.OK) {\n            return;\n          }\n\n          googlePredictions = [];\n\n          predictions.forEach(prediction => {\n            googlePredictions.push({\n              place_id: prediction.place_id,\n              value: prediction.description\n            });\n          });\n\n          setOptionsTemplate({\n            itemKey: 'value',\n            optionValues: googlePredictions,\n            renderOption,\n            searchIncludeFields: ['value']\n          });\n        });\n      }\n    };\n\n    const onSelectionChange = ({ place_id }) => {\n      if (place_id) {\n        placesService.getDetails({\n          fields: ['address_components'],\n          placeId: place_id,\n          sessionToken\n        }, (place, status) => {\n          if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n            mapToField(place.address_components);\n          }\n        });\n\n        // sessionToken = new window.google.maps.places.AutocompleteSessionToken();\n      }\n    };\n\n    const positionOfCommaThatFollowsTriggeringFieldAddressInfo = 0;\n    const shortenedSelectedItemValueChar = ',';\n\n    return (\n      <React.Fragment>\n        <Typography tag=\"h4\">Google Address Example</Typography>\n        <Typography>\n          This is an example of the Autocomplete Manual\n          Selection combobox. But it's a different flavor.\n          The difference between this and the regular combobox\n          is that the Freeform combobox should be used when you\n          do not have any options on initial render; some type\n          of user interaction is required.  The regular combobox\n          requires a list of options on initial render.\n        </Typography>\n        <ComboboxFreeformManualSelection\n          inputProps={inputProps}\n          itemToStringFunc={item => (\n            item\n              ? item.value.split(shortenedSelectedItemValueChar)[positionOfCommaThatFollowsTriggeringFieldAddressInfo]\n              : ''\n          )}\n          optionsTemplate={optionsTemplate}\n          onInputChange={onInputChange}\n          onSelectionChange={onSelectionChange}\n        />\n        <ButtonGroup direction=\"right\" style={{ marginTop: \"30px\" }}>\n          <ButtonText colorScheme=\"primary\" onClick={() => setState({ disabled: false })}>Enable</ButtonText>\n          <ButtonText colorScheme=\"secondary\" onClick={() => setState({ disabled: true })}>Disable</ButtonText>\n        </ButtonGroup>\n      </React.Fragment>\n    );\n  };\n\n  const ManualAutocompleteCombobox = () => {\n\n    const renderOption = optionItem => <span className=\"card-name\">{optionItem.value}</span>;\n\n    const inputProps = {\n      disabled: state.disabled,\n      helpText : 'Manual Autocomplete',\n      label: 'Manual Autocomplete',\n      name: 'combobox'\n    };\n\n    const cardsValue = [\n      { value: 'silver signature card' },\n      { value: 'visa signature card' },\n      { value: 'platinum visa card' },\n      { value: 'premium card' },\n      { value: 'another card' },\n      { value: 'other card' },\n      { value: 'secondary card' },\n      { value: 'tertiary card' },\n      { value: 'gold signature card' },\n      { value: 'yet another card' },\n      { value: 'last card' }\n    ];\n\n    const optionsTemplate = {\n      itemKey: 'value',\n      optionValues: cardsValue,\n      renderOption,\n      searchIncludeFields: ['value']\n    };\n\n    const onInputChange = e => console.log('onInputChange', e.target.value);\n    const onSelectionChange = item => console.log('onSelectionChange', JSON.stringify(item));\n\n    return (\n      <React.Fragment>\n        <ComboboxFreeformManualSelection\n          optionsTemplate={optionsTemplate}\n          inputProps={inputProps}\n          itemToStringFunc={item => (item ? item.value : '')}\n          onInputChange={onInputChange}\n          onSelectionChange={onSelectionChange}\n        />\n        <ButtonGroup direction=\"right\" style={{ marginTop: \"30px\" }}>\n          <ButtonText colorScheme=\"primary\" onClick={() => setState({ disabled: false })}>Enable</ButtonText>\n          <ButtonText colorScheme=\"secondary\" onClick={() => setState({ disabled: true })}>Disable</ButtonText>\n        </ButtonGroup>\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Combobox Freeform Manual Selection</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <GoogleSuggestCombobox />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Generic Example</Typography>\n          <Typography>\n            This is an example of the Autocomplete Manual\n            Selection combobox. But it's a different flavor.\n            The difference between this and the regular combobox is\n            that the Freeform combobox should be used when you\n            do not have any options on initial render; some type of user\n            interaction is required.  The regular combobox requires a list\n            of options on initial render.\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ManualAutocompleteCombobox />\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default ComboboxFreeformManualSelectionExample;\n".replace(/'..\/..\//g,"'@visa/vds-react/"),M=function(e){var n=Object(o.a)({},e),t=Object(s.useState)({}),r=Object(a.a)(t,2),u=r[0],I=r[1];return Object(s.useEffect)((function(){try{I(P.parse(B))}catch(e){console.log("\n        React-docgen could not parse props for ComboboxFreeformManualSelection\n        check for fix here https://github.com/reactjs/react-docgen/issues/342")}}),[]),l.a.createElement(g.a,{siblingOfStickyFooter:!0},l.a.createElement(h.a,null,l.a.createElement(m.a,null,l.a.createElement(T.a,{tag:"h1"},"Combobox Freeform Manual Selection"))),l.a.createElement(h.a,null,l.a.createElement(m.a,null,l.a.createElement(x.a,null,l.a.createElement(y.a,{tag:l.a.createElement(p.c,{exact:!0,to:"".concat("/vds-react","/components/combobox-freeform-manual-selection"),activeClassName:"vds-state--selected"})},l.a.createElement(f.a,{name:"log",resolution:"low"}),"Combobox Freeform Manual Selection Example"),l.a.createElement(y.a,{tag:l.a.createElement(p.c,{exact:!0,to:"".concat("/vds-react","/components/combobox-freeform-manual-selection/code"),activeClassName:"vds-state--selected"})},l.a.createElement(f.a,{name:"code-fork-code-alt",resolution:"low"}),"Code for Combobox Freeform Manual Selection Example")))),l.a.createElement(h.a,null,l.a.createElement(m.a,null,l.a.createElement("div",{className:c()({"vds-state--hidden":n.match.path==="".concat("/vds-react","/components/combobox-freeform-manual-selection/code"),"vds-state--show":n.match.path!=="".concat("/vds-react","/components/combobox-freeform-manual-selection/code")})},l.a.createElement(F,n)),l.a.createElement("div",{className:c()({"vds-state--hidden":n.match.path!=="".concat("/vds-react","/components/combobox-freeform-manual-selection/code"),"vds-state--show":n.match.path==="".concat("/vds-react","/components/combobox-freeform-manual-selection/code")})},l.a.createElement(i.a,Object.assign({},i.b,{theme:d.a,code:k,language:"jsx"}),(function(e){var n=e.className,t=e.style,a=e.tokens,o=e.getLineProps,s=e.getTokenProps;return l.a.createElement("pre",{className:n,style:t},a.map((function(e,n){return l.a.createElement("div",o({key:n,line:e}),l.a.createElement("span",{style:{display:"inline-block",opacity:"0.3",userSelect:"none",width:"2em"}},n+1),e.map((function(e,n){return l.a.createElement("span",s({key:n,token:e}))})))})))}))))),l.a.createElement(h.a,null,l.a.createElement(m.a,null,l.a.createElement(b.a,{className:c()(["components"]),dividerLines:!0,size:"compact"},l.a.createElement(v.a,{tag:"caption"},"Props"),l.a.createElement(S.a,null,l.a.createElement(C.a,{className:"vds-tr"},l.a.createElement(j.a,{"aria-sort":"none",role:"columnheader",scope:"col"},"Prop"),l.a.createElement(j.a,{"aria-sort":"none",role:"columnheader",scope:"col"},"Type"),l.a.createElement(j.a,{"aria-sort":"none",role:"columnheader",scope:"col"},"Default"),l.a.createElement(j.a,{"aria-sort":"none",role:"columnheader",scope:"col"},"Description"))),l.a.createElement(O.a,null,u.props&&Object.entries(u.props).filter((function(e){return"@ignore"!==e[1].description})).map((function(e,n){return l.a.createElement(C.a,{className:"vds-tr",key:n,tabIndex:"0"},l.a.createElement(E.a,{className:"vds-td"},e[0]," ",e[1].required?l.a.createElement("sup",{style:{color:"red"}}," required"):""),l.a.createElement(E.a,{className:"vds-td"},l.a.createElement("strong",null,e[1].type.name),e[1].type.value&&e[1].type.value.length?l.a.createElement("small",{style:{color:"#1a1f71"}},l.a.createElement("br",null),e[1].type.value.length?e[1].type.value.map((function(e){return e.value||e.name})).join(", "):void 0):""),l.a.createElement(E.a,{className:"vds-td"},e[1].defaultValue?e[1].defaultValue.value:""),l.a.createElement(E.a,{className:"vds-td"},e[1].description))})))))))};M.displayName="ComboboxFreeformManualSelectionExample";n.default=M},504:function(e,n,t){"use strict";var a=t(2),o=t(5),s=t(0),l=t.n(s),r=t(3),c=t(4),i=t.n(c),u=Object(s.forwardRef)((function(e,n){var t,s=e.children,r=e.className,c=e.customizableColumns,u=e.dividerLines,d=e.keyValuePairs,p=e.reveal,m=e.revealFirstColumn,b=e.revealLastColumn,f=e.rowSelection,g=e.size,h=e.stickyHeader,v=Object(o.a)(e,["children","className","customizableColumns","dividerLines","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","size","stickyHeader"]);return l.a.createElement("table",Object.assign({},v,{className:i()("vds-data-table",(t={},Object(a.a)(t,"".concat("vds-state","--customizable-columns"),Boolean(c)),Object(a.a)(t,"".concat("vds-state","--divider-lines"),Boolean(u)),Object(a.a)(t,"".concat("vds-state","--key-value-pairs"),Boolean(d)),Object(a.a)(t,"".concat("vds-state","--").concat(g),Boolean(g)),Object(a.a)(t,"".concat("vds-state","--reveal"),Boolean(p)),Object(a.a)(t,"".concat("vds-state","--reveal-first-column"),Boolean(m)),Object(a.a)(t,"".concat("vds-state","--reveal-last-column"),Boolean(b)),Object(a.a)(t,"".concat("vds-state","--").concat(f),Boolean(f)),Object(a.a)(t,"".concat("vds-state","--sticky-header"),Boolean(h)),t),r),ref:n}),s)}));u.propTypes={children:r.node,className:r.string,columns:Object(r.arrayOf)(Object(r.shape)({})),customizableColumns:r.bool,data:Object(r.arrayOf)(Object(r.shape)({})),dividerLines:r.bool,keyValuePairs:r.bool,reveal:r.bool,revealFirstColumn:r.bool,revealLastColumn:r.bool,rowSelection:Object(r.oneOf)(["multi-select","single-select"]),size:Object(r.oneOf)(["compact"]),stickyHeader:r.bool},u.displayName="DataTable",n.a=u},505:function(e,n,t){"use strict";var a=t(5),o=t(0),s=t.n(o),l=t(3),r=t(4),c=t.n(r),i=Object(o.forwardRef)((function(e,n){var t=e.children,o=e.className,l=e.tag,r=Object(a.a)(e,["children","className","tag"]);return s.a.createElement(l,Object.assign({className:c()("vds-sr",o),ref:n},r),t)}));i.propTypes={children:l.node,className:l.string,tag:l.elementType},i.defaultProps={tag:"span"},i.displayName="Sr",n.a=i},506:function(e,n,t){"use strict";var a=t(5),o=t(0),s=t.n(o),l=t(3),r=t(4),c=t.n(r),i=Object(o.forwardRef)((function(e,n){var t=e.children,o=e.className,l=Object(a.a)(e,["children","className"]);return s.a.createElement("tbody",Object.assign({className:c()("vds-tbody",o),ref:n},l),t)}));i.propTypes={children:l.node,className:l.string},i.displayName="Tbody",n.a=i},507:function(e,n,t){"use strict";var a=t(2),o=t(5),s=t(0),l=t.n(s),r=t(3),c=t(4),i=t.n(c),u=Object(s.forwardRef)((function(e,n){var t=e.children,s=e.className,r=e.textAlign,c=Object(o.a)(e,["children","className","textAlign"]);return l.a.createElement("td",Object.assign({className:i()("vds-td",Object(a.a)({},"vds-text--".concat(r),Boolean(r)),s),ref:n},c),t)}));u.propTypes={children:r.node,className:r.string,textAlign:Object(r.oneOf)(["center","left","right"])},u.displayName="Td",n.a=u},508:function(e,n,t){"use strict";var a=t(5),o=t(0),s=t.n(o),l=t(3),r=t(4),c=t.n(r),i=Object(o.forwardRef)((function(e,n){var t=e.children,o=e.className,l=Object(a.a)(e,["children","className"]);return s.a.createElement("th",Object.assign({className:c()("vds-th",o),ref:n},l),t)}));i.propTypes={children:l.node,className:l.string},i.displayName="Th",n.a=i},509:function(e,n,t){"use strict";var a=t(5),o=t(0),s=t.n(o),l=t(3),r=t(4),c=t.n(r),i=Object(o.forwardRef)((function(e,n){var t=e.children,o=e.className,l=Object(a.a)(e,["children","className"]);return s.a.createElement("thead",Object.assign({className:c()("vds-thead",o),ref:n},l),t)}));i.propTypes={children:l.node,className:l.string},i.displayName="Thead",n.a=i},510:function(e,n,t){"use strict";var a=t(5),o=t(0),s=t.n(o),l=t(3),r=t(4),c=t.n(r),i=Object(o.forwardRef)((function(e,n){var t=e.children,o=e.className,l=Object(a.a)(e,["children","className"]);return s.a.createElement("tr",Object.assign({className:c()("vds-tr",o),ref:n},l),t)}));i.propTypes={children:l.node,className:l.string},i.displayName="Tr",n.a=i},517:function(e,n){},529:function(e,n,t){"use strict";var a=t(2),o=t(5),s=t(0),l=t.n(s),r=t(3),c=t(4),i=t.n(c),u=t(133),d=Object(s.forwardRef)((function(e,n){var t,s=e.active,r=e.children,c=e.className,d=e.colorScheme,p=e.disabled,m=e.flippable,b=e.isFullWidth,f=e.role,g=e.tabIndex,h=e.tag,v=e.type,y=Object(o.a)(e,["active","children","className","colorScheme","disabled","flippable","isFullWidth","role","tabIndex","tag","type"]);return l.a.createElement(h,Object.assign({className:i()((t={},Object(a.a)(t,"".concat("vds-btn-text"),!1===Boolean(d)),Object(a.a)(t,"".concat("vds-state","--active"),Boolean(s)),Object(a.a)(t,"".concat("vds-btn-text","--").concat(d),Boolean(d)),Object(a.a)(t,"".concat("vds-state","--flippable"),Boolean(m)),Object(a.a)(t,"".concat("vds-btn-text","--fullwidth"),Boolean(b)),Object(a.a)(t,"".concat("vds-state","--disabled"),Boolean(p)),t),c),disabled:p,role:"button"===h?void 0:f,tabIndex:["span","div"].includes(h)?g:void 0,type:"button"===h?v:void 0,ref:n},y),l.a.createElement(u.a,null,r))}));d.propTypes={active:r.bool,children:r.node,className:r.string,colorScheme:Object(r.oneOf)(["primary","secondary","tertiary"]),disabled:r.bool,flippable:r.bool,isFullWidth:r.bool,role:r.string,tabIndex:Object(r.oneOfType)([r.number,r.string]),tag:Object(r.oneOf)(["a","button","div","span"]),type:r.string},d.defaultProps={role:"button",tabIndex:0,tag:"button",type:"button"},d.displayName="ButtonText",n.a=d},531:function(e,n,t){"use strict";var a=t(2),o=t(5),s=t(0),l=t.n(s),r=t(4),c=t.n(r),i=function(e){var n,t=e.children,s=e.className,r=e.css,i=e.disabled,u=e.expanded,d=e.filled,p=e.focus,m=e.invalid,b=e.isTextarea,f=e.readOnly,g=Object(o.a)(e,["children","className","css","disabled","expanded","filled","focus","invalid","isTextarea","readOnly"]);return l.a.createElement("div",Object.assign({className:c()((n={},Object(a.a)(n,"".concat("vds-input"),!b),Object(a.a)(n,"".concat("vds-input","-textarea-container"),Boolean(b)),Object(a.a)(n,"".concat("vds-state","--disabled"),Boolean(i)),Object(a.a)(n,"".concat("vds-state","--error"),Boolean(m)),Object(a.a)(n,"".concat("vds-state","--expanded"),Boolean(u)),Object(a.a)(n,"".concat("vds-state","--filled"),Boolean(d)),Object(a.a)(n,"".concat("vds-state","--focus"),Boolean(p)),Object(a.a)(n,"".concat("vds-state","--readonly"),Boolean(f)),Object(a.a)(n,"".concat("vds-state","--success"),"boolean"===typeof m&&!m),n),s),css:r},g),t)};i.displayName="InputContainer",n.a=i},532:function(e,n,t){"use strict";var a=t(5),o=t(0),s=t.n(o),l=t(3),r=t(4),c=t.n(r),i=Object(o.forwardRef)((function(e,n){var t=e.children,o=e.className,l=Object(a.a)(e,["children","className"]);return s.a.createElement("label",Object.assign({className:c()("vds-input-label",o),ref:n},l),t)}));i.propTypes={children:l.node,className:l.string},i.displayName="InputLabel",n.a=i},533:function(e,n,t){"use strict";var a=t(5),o=t(0),s=t.n(o),l=t(4),r=t.n(l),c=function(e){var n=e.children,t=e.className,o=Object(a.a)(e,["children","className"]);return s.a.createElement("div",Object.assign({className:r()("vds-input-bar",t)},o),n)};c.displayName="InputBar",n.a=c},534:function(e,n,t){"use strict";var a=t(2),o=t(5),s=t(0),l=t.n(s),r=t(4),c=t.n(r),i=function(e){var n,t=e.ariaAtomic,s=e.children,r=e.className,i=e.invalid,u=e.role,d=e.show,p=Object(o.a)(e,["ariaAtomic","children","className","invalid","role","show"]);return l.a.createElement("span",Object.assign({"aria-atomic":t,"aria-live":i?"assertive":"polite",className:c()("vds-input-message",(n={},Object(a.a)(n,"".concat("vds-state","--hidden"),!d),Object(a.a)(n,"".concat("vds-state","--error"),Boolean(i)),n),r),role:u},p),s)};i.defaultProps={ariaAtomic:"true",role:"alert"},i.displayName="InputMessage",n.a=i},536:function(e,n,t){"use strict";var a=t(5),o=t(0),s=t.n(o),l=t(4),r=t.n(l),c=function(e){var n=e.children,t=e.className,o=Object(a.a)(e,["children","className"]);return s.a.createElement("span",Object.assign({className:r()("vds-input-option",t)},o),n)};c.displayName="InputOption",n.a=c},538:function(e,n,t){"use strict";var a=t(5),o=t(0),s=t.n(o),l=t(4),r=t.n(l),c=function(e){var n=e.children,t=e.className,o=Object(a.a)(e,["children","className"]);return s.a.createElement("span",Object.assign({className:r()("vds-input-hint",t)},o),n)};c.displayName="InputHint",n.a=c},540:function(e,n,t){"use strict";var a=t(2),o=t(96),s=t(5),l=t(0),r=t.n(l),c=t(4),i=t.n(c),u=t(518),d=t.n(u),p=t(531),m=t(532),b=t(533),f=t(538),g=t(544),h=t(3),v=Object(l.forwardRef)((function(e,n){var t=e.className,a=e.type,o=Object(s.a)(e,["className","type"]);return r.a.createElement("input",Object.assign({className:i()("vds-input--input-text",t),ref:n,type:a},o))}));v.propTypes={className:h.string,type:h.string},v.defaultProps={type:"text"},v.displayName="InputText";var y=v,x=t(534),O=t(536),E=t(16),j=Object(l.forwardRef)((function(e,n){var t=e.ariaLabel,c=e.checkmarkIcon,u=e.children,h=e.className,v=e.containerProps,E=e.css,j=e.disabled,S=e.errorIcon,C=e.errorText,T=e.expanded,I=e.helpIcon,N=e.helpText,w=e.id,F=void 0===w?d.a.generate():w,P=e.invalid,B=e.label,k=e.labelId,M=e.noValidate,A=e.onBlur,R=e.onChange,L=e.onFocus,_=e.placeholder,V=e.readOnly,G=e.showCheckmark,q=e.showErrorText,H=e.showHelpText,K=e.useNativePlaceholder,D=Object(s.a)(e,["ariaLabel","checkmarkIcon","children","className","containerProps","css","disabled","errorIcon","errorText","expanded","helpIcon","helpText","id","invalid","label","labelId","noValidate","onBlur","onChange","onFocus","placeholder","readOnly","showCheckmark","showErrorText","showHelpText","useNativePlaceholder"]),z=Object(l.useState)(!1),W=Object(o.a)(z,2),J=W[0],$=W[1],X=Object(l.useState)(Boolean(D.value)||Boolean(D.defaultValue)),Y=Object(o.a)(X,2),Z=Y[0],Q=Y[1],U=Object(l.useState)(!1),ee=Object(o.a)(U,2),ne=ee[0],te=ee[1],ae=Object(l.useState)(P),oe=Object(o.a)(ae,2),se=oe[0],le=oe[1],re=Object(l.useState)(F),ce=Object(o.a)(re,1)[0],ie=function(e){M||(J&&le(!e.target.checkValidity()||e.target.required&&!e.target.value.trim().length),J||!e.target.required||e.target.value.trim().length||le(!0),!J||e.target.required||e.target.value.trim().length||le(void 0))};Object(l.useEffect)((function(){Q(Boolean(D.defaultValue)||Boolean(D.value))}),[D.defaultValue,D.value]),Object(l.useEffect)((function(){le(P)}),[P]);return r.a.createElement(p.a,Object.assign({className:i()(h),css:E,disabled:j,expanded:T,filled:Z,focus:ne,readOnly:V,invalid:se},v),B?r.a.createElement(m.a,{id:k,htmlFor:ce},B):void 0,r.a.createElement(b.a,null,r.a.createElement(g.a,null,_&&!K?r.a.createElement(f.a,null,_):void 0,r.a.createElement(y,Object.assign({"aria-describedby":q||H?"input-message-".concat(ce):void 0,"aria-label":B?void 0:t,"aria-invalid":se,id:ce,disabled:j,onBlur:function(e){te(!1),ie(e),"function"===typeof A&&A(e)},onChange:function(e){Q(""!==e.target.value),"boolean"===typeof se&&ie(e),$(!0),"function"===typeof R&&R(e)},onFocus:function(e){te(!0),"function"===typeof L&&L(e)},placeholder:K?_:void 0,readOnly:V,ref:n},D))),G&&"boolean"===typeof se&&!se&&Boolean(c)?r.a.createElement(O.a,{className:i()(Object(a.a)({},"".concat("vds-state","--hidden"),"boolean"===typeof se&&se))},c):void 0,u),function(){var e=null;return(H||q)&&(e=r.a.createElement(x.a,{id:"input-message-".concat(ce),show:H&&Boolean(N)||q&&Boolean(C),invalid:se},!se&&ne&&H&&Boolean(N)?r.a.createElement(l.Fragment,null,I," ",N):void 0,!0===se&&q&&Boolean(C)?r.a.createElement(l.Fragment,null,S," ",C):void 0)),e}())}));j.defaultProps={checkmarkIcon:r.a.createElement(E.a,{name:"checkmark",resolution:"low"}),errorIcon:r.a.createElement(E.a,{name:"error",resolution:"low"})},j.displayName="Input";n.a=j},544:function(e,n,t){"use strict";var a=t(5),o=t(0),s=t.n(o),l=t(4),r=t.n(l),c=function(e){var n=e.children,t=e.className,o=Object(a.a)(e,["children","className"]);return s.a.createElement("div",Object.assign({className:r()("vds-input-input",t)},o),n)};c.displayName="InputInput",n.a=c},546:function(e,n,t){"use strict";var a=t(2),o=t(5),s=t(0),l=t.n(s),r=t(4),c=t.n(r),i=function(e){var n=e.children,t=e.className,s=e.direction,r=Object(o.a)(e,["children","className","direction"]);return l.a.createElement("div",Object.assign({className:c()("vds-btn-group",Object(a.a)({},"".concat("vds-btn-group","--").concat(s),Boolean(s)),t)},r),n)};i.displayName="ButtonGroup",n.a=i},618:function(e,n,t){"use strict";var a=t(5),o=t(2),s=t(0),l=t.n(s),r=t(4),c=t.n(r),i=t(16),u=t(661),d=function(e){var n=e.getMenuProps,t=e.isOpen,s=e.listboxClass,r=e.isListboxOpen,d=e.listboxProps,p=e.listboxRef,m=e.optionsTemplate,b=Object(a.a)(e,["getMenuProps","isOpen","listboxClass","isListboxOpen","listboxProps","listboxRef","optionsTemplate"]);return l.a.createElement("div",{className:c()("vds-menu--absolute ",Object(o.a)({},"vds-menu--show",t&&r))},l.a.createElement("ul",Object.assign({},d,n({className:c()("vds-listbox",s),ref:p})),t&&m&&m.optionValues&&m.optionValues.length?function(e,n){var t,a=e.filterFunction,s=e.getItemProps,r=e.inputValue,d=e.listboxItemRef,p=e.noMatchCallback,m=e.noSelectionCheckMark,b=e.selectedItem,f=e.highlightedIndex<0?0:e.highlightedIndex,g=n.itemKey,h=n.optionValues,v=n.renderOption,y=(t=r&&r.trim()?u.a.filterOptionValues(r.trim().replace(/\s\s+/g," ").toLowerCase(),n,a):{count:h?h.length:0,itemValues:h}).count,x=t.itemValues,O=t.itemValues?t.itemValues[f]:null;return 0===y?(p(!0),null):(p(!1),x.map((function(e,n){var t=b&&b[g]===e[g],a=O&&O[g]===e[g],r={className:c()("".concat("vds-listbox","-item"),Object(o.a)({},"".concat("vds-listbox","--item-selected"),t&&!m),Object(o.a)({},"".concat("vds-listbox","--item-highlight"),a),"visa-ui-btn-icon--light-fill")};return t&&(r.ref=d),l.a.createElement("li",Object.assign({},s({index:n,item:e,key:e[g]}),r),l.a.createElement("span",{className:"".concat("vds-listbox","--item-container")},v(e),t&&!m?l.a.createElement(i.a,{name:"checkmark",resolution:"tiny"}):null))})))}(b,m):null))};d.displayName="ListBox",n.a=d},619:function(e,n,t){"use strict";var a=t(0);n.a=function(e,n){var t=Object(a.useRef)(null),o=Object(a.useRef)(null);return Object(a.useEffect)((function(){o.current&&t.current&&(e&&n&&n.optionValues&&n.optionValues.findIndex((function(t){return t[n.itemKey]===e[n.itemKey]}))>=0&&(o.current.scrollTop+=t.current.offsetTop))})),{listboxItemRef:t,listboxRef:o}}},620:function(e,n,t){"use strict";var a=t(0);n.a=function(e,n){var t=Object(a.useCallback)((function(e,t){try{void 0===t?n[e.type]():n[e.type](t)}catch(a){throw new Error("Action ".concat(e.type," is not available."))}}),[n]);Object(a.useEffect)((function(){"function"===typeof e&&e(t)}),[e,t,n])}},760:function(e,n,t){"use strict";var a=t(96),o=t(5),s=t(0),l=t.n(s),r=t(4),c=t.n(r),i=t(716),u=t(618),d=t(540),p=t(619),m=t(620),b=function(e){var n=e.comboboxClass,t=e.comboboxAction,r=e.containerProps,b=e.errorText,f=e.inputProps,g=e.itemToStringFunc,h=e.onInputBlur,v=e.onInputChange,y=e.onInputFocus,x=e.onSelectionChange,O=e.optionsTemplate,E=Object(o.a)(e,["comboboxClass","comboboxAction","containerProps","errorText","inputProps","itemToStringFunc","onInputBlur","onInputChange","onInputFocus","onSelectionChange","optionsTemplate"]),j=Object(s.useState)(""),S=Object(a.a)(j,2),C=S[0],T=S[1],I=Object(s.useRef)(null),N=Object(s.useState)(b),w=Object(a.a)(N,2),F=w[0],P=w[1],B=Object(s.useState)(!1),k=Object(a.a)(B,2),M=k[0],A=k[1],R=Object(s.useState)(!1),L=Object(a.a)(R,2),_=L[0],V=L[1],G=Object(p.a)(C,O||{}),q=G.listboxItemRef,H=G.listboxRef,K={},D=["clearSelection","closeMenu","openMenu","selectItem","setHighlightedIndex"];Object(m.a)(t,K),Object(s.useEffect)((function(){P(b||"")}),[b]),Object(s.useEffect)((function(){F&&P(b||""),A(!_)}),[b,F,_]);var z=function(e){"function"===typeof h&&h(e,e.target.value)},W=function(e){"function"===typeof v&&v(e,e.target.value)},J=function(e){"function"===typeof y&&y(e,e.target.value)},$=function(e){_!==e&&V(e)};return l.a.createElement(i.a,{initialInputValue:"",initialSelectedItem:C,itemToString:g,onChange:function(e){T(e||null),P(""),"function"===typeof x&&x(e)}},(function(e){var t=e.getInputProps,a=e.isOpen,s=Object(o.a)(e,["getInputProps","isOpen"]);if(0===Object.keys(K).length){K.setInputError=P;var i=!0,p=!1,m=void 0;try{for(var b,g=D[Symbol.iterator]();!(i=(b=g.next()).done);i=!0){var h=b.value;K[h]=s[h]}}catch(v){p=!0,m=v}finally{try{i||null==g.return||g.return()}finally{if(p)throw m}}}return l.a.createElement("div",Object.assign({},r,{className:c()("vds-combobox-container",n.containerClass)}),l.a.createElement(d.a,Object.assign({},t({onBlur:z,onChange:W,onFocus:J}),f,{className:c()("vds-combobox-input-wrapper",n.inputWrapperClass),errorText:F,ref:I,invalid:Boolean(F),labelId:t()["aria-labelledby"],showErrorText:Boolean(F),showHelpText:Boolean(f.helpText),type:"text"})),l.a.createElement(u.a,Object.assign({},s,E,{listboxClass:n.listboxClass,isListboxOpen:M,listboxItemRef:function(e){q.current=e},listboxRef:function(e){H.current=e},isOpen:a,noMatchCallback:$,noSelectionCheckMark:!0,optionsTemplate:O})))}))};b.defaultProps={comboboxClass:{containerClass:null,inputWrapperClass:null,listboxClass:null},errorText:"",inputProps:{label:"Text for label",name:"combobox"}},b.displayName="ComboboxFreeformManualSelection",n.a=b}}]);
//# sourceMappingURL=15.0bb29540.chunk.js.map