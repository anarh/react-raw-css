{"version":3,"sources":["components/button-text/example/index.js","styleguide/pages/components/button-text.js","components/data-table/index.js","components/sr/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/button-text/index.js"],"names":["ButtonTextExample","tag","disabled","name","resolution","colorScheme","isFullWidth","reactDocs","require","jsParsed","replace","exampleCode","remainingProps","useState","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","className","classnames","match","path","defaultProps","theme","code","language","style","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","dividerLines","size","aria-sort","role","scope","props","Object","entries","filter","doc","description","tabIndex","required","color","type","value","length","v","join","undefined","defaultValue","displayName","DataTable","forwardRef","ref","children","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","Boolean","propTypes","node","string","columns","arrayOf","shape","bool","data","oneOf","Sr","Tag","elementType","Tbody","Td","textAlign","Th","Thead","Tr","ButtonText","active","flippable","includes","oneOfType","number"],"mappings":"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","file":"static/js/42.d1f864a6.chunk.js","sourcesContent":["import React from 'react';\nimport ButtonText from '../../button-text';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Icon from '../../icon';\nimport Row from '../../row';\nimport Typography from '../../typography';\n\nconst ButtonTextExample = () => (\n  <Grid>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Button Text Primary</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <ButtonText>Alabama</ButtonText> <ButtonText disabled>Texas</ButtonText>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Button Text Primary with icon</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <ButtonText><Icon name=\"qr-alt\" resolution=\"low\" /> Georgia</ButtonText>\n        <ButtonText disabled><Icon name=\"qr-alt\" resolution=\"low\" /> Utah</ButtonText>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Button Text Secondary</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <ButtonText colorScheme=\"secondary\">New York</ButtonText>\n        <ButtonText colorScheme=\"secondary\" disabled>Washington</ButtonText>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Button Text Secondary with icon</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <ButtonText colorScheme=\"secondary\"><Icon name=\"qr-alt\" resolution=\"low\" /> Oregon</ButtonText>\n        <ButtonText colorScheme=\"secondary\" disabled><Icon name=\"qr-alt\" resolution=\"low\" /> California</ButtonText>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Button Text Tertiary</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <ButtonText colorScheme=\"tertiary\">Hawaii</ButtonText>\n        <ButtonText colorScheme=\"tertiary\" disabled>North Carolina</ButtonText>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Button Text Tertiary with icon</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <ButtonText colorScheme=\"tertiary\"><Icon name=\"qr-alt\" resolution=\"low\" /> South Carolina</ButtonText>\n        <ButtonText colorScheme=\"tertiary\" disabled><Icon name=\"qr-alt\" resolution=\"low\" /> Florida</ButtonText>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Button Text Full Width</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <ButtonText isFullWidth>New Mexico</ButtonText>\n        <ButtonText isFullWidth disabled>Oklahoma</ButtonText>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Button Text Full Width with icon</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <ButtonText isFullWidth><Icon name=\"qr-alt\" resolution=\"low\" /> Kansas</ButtonText>\n        <ButtonText isFullWidth disabled><Icon name=\"qr-alt\" resolution=\"low\" /> New Jersey</ButtonText>\n      </Col>\n    </Row>\n  </Grid>\n);\n\nexport default ButtonTextExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../../components/col';\nimport DataTable from '../../../components/data-table';\nimport Icon from '../../../components/icon';\nimport Grid from '../../../components/grid';\nimport Row from '../../../components/row';\nimport Sr from '../../../components/sr';\nimport Tab from '../../../components/tab';\nimport TabList from '../../../components/tab-list';\nimport Tbody from '../../../components/tbody';\nimport Td from '../../../components/td';\nimport Th from '../../../components/th';\nimport Thead from '../../../components/thead';\nimport Tr from '../../../components/tr';\nimport Typography from '../../../components/typography';\n\nimport Example from '../../../components/button-text/example';\n\nconst reactDocs = require('react-docgen');\nconst js = raw('../../../components/button-text/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../../components/button-text/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst ButtonTextExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for ButtonText\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Button Text</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/button-text`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Button Text Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/button-text/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />Code for Button Text Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/button-text/code`,\n              'vds-state--show': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/button-text/code`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/button-text/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/button-text/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <Sr tag=\"caption\">Props</Sr>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {doc[1].type.value.length ? doc[1].type.value.map(v => v.value || v.name).join(', ') : undefined}\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nButtonTextExample.displayName = 'ButtonTextExample';\n\nexport default ButtonTextExample;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-sr';\n\nconst Sr = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nSr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nSr.defaultProps = {\n  tag: 'span'\n};\n\nSr.displayName = 'Sr';\n\nexport default Sr;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React, { forwardRef } from 'react';\nimport { bool, node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-text';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonText = forwardRef(({\n  active,\n  children,\n  className,\n  colorScheme,\n  disabled,\n  flippable,\n  isFullWidth,\n  role,\n  tabIndex,\n  tag: Tag,\n  type,\n  ...remainingProps\n}, ref) => (\n  <Tag\n    className={classnames({\n      [`${CSS_PREFIX}`]: Boolean(colorScheme) === false,\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_PREFIX}--${colorScheme}`]: Boolean(colorScheme),\n      [`${CSS_STATE}--flippable`]: Boolean(flippable),\n      [`${CSS_PREFIX}--fullwidth`]: Boolean(isFullWidth),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className)}\n    disabled={disabled}\n    role={Tag === 'button' ? undefined : role}\n    tabIndex={['span', 'div'].includes(Tag) ? tabIndex : undefined}\n    type={Tag === 'button' ? type : undefined}\n    ref={ref}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </Tag>\n));\n\nButtonText.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Color scheme of button\n   */\n  colorScheme: oneOf([\n    'primary',\n    'secondary',\n    'tertiary'\n  ]),\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Flippable\n   */\n  flippable: bool,\n\n  /**\n   * Full width\n   */\n  isFullWidth: bool,\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * @ignore\n   */\n  tabIndex: oneOfType([number, string]),\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'a',\n    'button',\n    'div',\n    'span'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonText.defaultProps = {\n  role: 'button',\n  tabIndex: 0,\n  tag: 'button',\n  type: 'button'\n};\n\nButtonText.displayName = 'ButtonText';\n\nexport default ButtonText;\n"],"sourceRoot":""}